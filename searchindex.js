Search.setIndex({"docnames": ["api_reference/accounting", "api_reference/adapters/betfair", "api_reference/adapters/binance", "api_reference/adapters/index", "api_reference/adapters/interactive_brokers", "api_reference/analysis", "api_reference/backtest", "api_reference/cache", "api_reference/common", "api_reference/config", "api_reference/core", "api_reference/data", "api_reference/execution", "api_reference/index", "api_reference/indicators", "api_reference/infrastructure", "api_reference/live", "api_reference/model/currency", "api_reference/model/data", "api_reference/model/enums", "api_reference/model/events", "api_reference/model/identifiers", "api_reference/model/index", "api_reference/model/instruments", "api_reference/model/objects", "api_reference/model/orderbook", "api_reference/model/orders", "api_reference/model/position", "api_reference/model/tick_scheme", "api_reference/msgbus", "api_reference/network", "api_reference/persistence", "api_reference/portfolio", "api_reference/risk", "api_reference/serialization", "api_reference/system", "api_reference/trading", "developer_guide/coding_standards", "developer_guide/cython", "developer_guide/environment_setup", "developer_guide/index", "developer_guide/packaged_data", "developer_guide/rust", "developer_guide/testing", "getting_started/index", "getting_started/installation", "getting_started/quick_start", "index", "integrations/betfair", "integrations/binance", "integrations/ib", "integrations/index", "user_guide/adapters", "user_guide/advanced/advanced_orders", "user_guide/advanced/data", "user_guide/advanced/emulated_orders", "user_guide/advanced/index", "user_guide/advanced/portfolio_statistics", "user_guide/architecture", "user_guide/backtest_example", "user_guide/core_concepts", "user_guide/index", "user_guide/instruments", "user_guide/loading_external_data", "user_guide/orders", "user_guide/strategies"], "filenames": ["api_reference/accounting.md", "api_reference/adapters/betfair.md", "api_reference/adapters/binance.md", "api_reference/adapters/index.md", "api_reference/adapters/interactive_brokers.md", "api_reference/analysis.md", "api_reference/backtest.md", "api_reference/cache.md", "api_reference/common.md", "api_reference/config.md", "api_reference/core.md", "api_reference/data.md", "api_reference/execution.md", "api_reference/index.md", "api_reference/indicators.md", "api_reference/infrastructure.md", "api_reference/live.md", "api_reference/model/currency.md", "api_reference/model/data.md", "api_reference/model/enums.md", "api_reference/model/events.md", "api_reference/model/identifiers.md", "api_reference/model/index.md", "api_reference/model/instruments.md", "api_reference/model/objects.md", "api_reference/model/orderbook.md", "api_reference/model/orders.md", "api_reference/model/position.md", "api_reference/model/tick_scheme.md", "api_reference/msgbus.md", "api_reference/network.md", "api_reference/persistence.md", "api_reference/portfolio.md", "api_reference/risk.md", "api_reference/serialization.md", "api_reference/system.md", "api_reference/trading.md", "developer_guide/coding_standards.md", "developer_guide/cython.md", "developer_guide/environment_setup.md", "developer_guide/index.md", "developer_guide/packaged_data.md", "developer_guide/rust.md", "developer_guide/testing.md", "getting_started/index.md", "getting_started/installation.md", "getting_started/quick_start.md", "index.md", "integrations/betfair.md", "integrations/binance.md", "integrations/ib.md", "integrations/index.md", "user_guide/adapters.md", "user_guide/advanced/advanced_orders.md", "user_guide/advanced/data.md", "user_guide/advanced/emulated_orders.md", "user_guide/advanced/index.md", "user_guide/advanced/portfolio_statistics.md", "user_guide/architecture.md", "user_guide/backtest_example.md", "user_guide/core_concepts.md", "user_guide/index.md", "user_guide/instruments.md", "user_guide/loading_external_data.md", "user_guide/orders.md", "user_guide/strategies.md"], "titles": ["Accounting", "Betfair", "Binance", "Adapters", "Interactive Brokers", "Analysis", "Backtest", "Cache", "Common", "Config", "Core", "Data", "Execution", "API Reference", "Indicators", "Infrastructure", "Live", "Currency", "Data", "Enums", "Events", "Identifiers", "Model", "Instruments", "Objects", "Order Book", "Orders", "Position", "Tick Scheme", "Message Bus", "Network", "Persistence", "Portfolio", "Risk", "Serialization", "System", "Trading", "Coding Standards", "Cython", "Environment Setup", "Developer Guide", "Packaged Data", "Rust", "Testing", "Getting Started", "Installation", "Quick Start", "NautilusTrader Documentation", "Betfair", "Binance", "Interactive Brokers", "Integrations", "Adapters", "Advanced Orders", "Data", "Emulated Orders", "Advanced", "Portfolio Statistics", "Architecture", "Complete Backtest Example", "Core Concepts", "User Guide", "Instruments", "Loading External Data", "Orders", "Strategies"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 64, 65], "subpackag": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 22, 29, 30, 31, 32, 33, 34, 36, 52, 58, 60], "defin": [0, 8, 10, 12, 14, 16, 18, 19, 20, 22, 23, 24, 25, 28, 34, 36, 43, 46, 49, 54, 57, 58, 60, 62, 63, 64, 65], "both": [0, 1, 2, 10, 11, 12, 15, 16, 23, 26, 29, 33, 36, 40, 47, 49, 51, 57, 58, 60, 62], "differ": [0, 6, 8, 14, 25, 36, 46, 49, 56, 58, 61, 64, 65], "type": [0, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 23, 25, 26, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 46, 47, 50, 51, 52, 54, 62, 65], "machineri": [0, 58], "There": [0, 25, 36, 37, 43, 46, 48, 49, 50, 55, 57, 58, 60, 62, 63, 65], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65], "also": [0, 7, 8, 16, 29, 31, 36, 37, 42, 43, 45, 46, 47, 49, 55, 57, 59, 60, 62, 63, 64], "an": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 36, 37, 40, 42, 43, 46, 47, 49, 50, 51, 52, 54, 55, 58, 59, 60, 62, 63, 64, 65], "exchangeratecalcul": 0, "exchang": [0, 1, 2, 3, 7, 8, 11, 12, 16, 17, 20, 21, 23, 28, 30, 33, 36, 46, 48, 49, 50, 51, 53, 58, 60, 62, 64], "rate": [0, 2, 6, 7, 8, 9, 16, 23, 33, 49, 57, 62], "between": [0, 2, 6, 8, 9, 11, 12, 13, 14, 23, 28, 35, 42, 46, 47, 49, 58, 62, 64], "fx": [0, 6, 19, 23, 36, 46, 47, 50, 59, 62, 63, 64], "crypto": [0, 2, 17, 19, 28, 47, 49, 50, 51, 62, 63, 64], "pair": [0, 6, 8, 49, 50, 59, 62, 63, 65], "accountmanag": 0, "mainli": [0, 31, 58], "us": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 62, 64, 65], "from": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 41, 42, 43, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "portfolio": [0, 6, 9, 16, 33, 35, 36, 47, 58], "oper": [0, 8, 10, 11, 12, 15, 32, 34, 36, 40, 45, 47, 58, 62], "accountfactori": 0, "support": [0, 1, 8, 16, 31, 38, 47, 49, 51, 55, 58, 62, 64], "custom": [0, 2, 8, 20, 26, 29, 36, 47, 49, 52, 55, 58], "specif": [0, 1, 2, 6, 8, 9, 10, 11, 12, 15, 16, 18, 20, 23, 28, 31, 33, 34, 36, 40, 42, 51, 52, 53, 58, 62, 64], "integr": [0, 1, 2, 3, 4, 7, 12, 16, 25, 30, 43, 47, 48, 49, 50, 52, 58, 60, 62], "These": [0, 8, 14, 20, 26, 40, 43, 49, 57, 58, 64], "can": [0, 3, 6, 7, 8, 11, 12, 14, 15, 16, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "regist": [0, 1, 2, 5, 6, 8, 9, 11, 12, 16, 17, 23, 29, 34, 35, 36, 46, 48, 49, 50, 57, 60, 65], "instanti": [0, 8, 20, 34, 48, 49, 50, 52, 59, 62, 63, 65], "when": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 23, 25, 26, 27, 30, 33, 35, 36, 37, 38, 42, 43, 46, 48, 49, 50, 51, 55, 58, 59, 60, 62, 63, 64], "accountst": [0, 1, 2, 6, 12, 16, 20, 32, 34], "event": [0, 1, 2, 6, 7, 8, 9, 10, 12, 15, 16, 18, 23, 25, 26, 27, 29, 30, 32, 33, 35, 36, 46, 47, 54, 55, 58, 60, 65], "receiv": [0, 8, 11, 12, 14, 16, 21, 29, 30, 33, 36, 38, 46, 48, 49, 50, 52, 54, 58, 62], "class": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 46, 47, 48, 49, 50, 52, 54, 57, 58, 59, 62, 64, 65], "cashaccount": 0, "bool": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36], "calculate_account_st": 0, "fals": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 23, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 49, 55, 63, 64], "base": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 20, 21, 24, 25, 27, 29, 30, 31, 33, 35, 36, 46, 47, 54, 55, 57, 58, 60, 62, 64, 65], "provid": [0, 3, 7, 9, 10, 11, 12, 14, 15, 16, 18, 20, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 47, 49, 51, 58, 59, 60, 62, 63, 64, 65], "paramet": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 52, 55, 58, 59, 62, 64, 65], "initi": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20, 23, 24, 25, 26, 27, 32, 33, 36, 51, 54, 62, 64, 65], "state": [0, 1, 2, 5, 6, 7, 9, 11, 12, 14, 15, 16, 20, 22, 31, 32, 33, 35, 36, 47, 51, 55, 60], "option": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 19, 20, 24, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 45, 46, 47, 48, 49, 50, 52, 57, 60, 62, 63, 64, 65], "If": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 46, 49, 50, 52, 55, 58, 63, 65], "should": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 25, 26, 28, 30, 31, 33, 34, 35, 36, 37, 43, 46, 49, 51, 53, 55, 59, 61, 62, 63], "order": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 18, 19, 21, 23, 24, 27, 29, 32, 33, 35, 36, 40, 46, 47, 48, 50, 51, 54, 56, 57, 58, 61, 62, 63, 65], "fill": [0, 1, 2, 5, 6, 12, 16, 20, 25, 26, 27, 36, 46, 64], "rais": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 43, 58], "valueerror": [0, 1, 2, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 58], "account_typ": [0, 1, 2, 6, 9, 12, 16, 20, 46, 49, 52, 59], "equal": [0, 1, 2, 6, 8, 12, 14, 18, 23, 24, 25, 26, 27, 29, 33, 36, 64], "appli": [0, 1, 2, 8, 9, 25, 26, 27, 32, 37, 59, 62, 64], "self": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 46, 49, 52, 54, 55, 56, 57, 61, 62, 64, 65], "void": [0, 1, 2, 6, 7, 8, 10, 11, 12, 14, 15, 16, 25, 26, 27, 28, 29, 32, 33, 34, 36, 38, 52], "given": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 50, 51, 52, 62, 64], "account_id": [0, 1, 2, 4, 6, 7, 12, 15, 16, 20, 26, 27], "id": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 36, 39, 46, 49, 51, 52, 55, 59, 62, 63, 64, 65], "base_curr": [0, 1, 2, 6, 9, 12, 16, 20, 23, 27, 46, 48, 59], "system": [0, 1, 2, 6, 7, 8, 9, 12, 16, 18, 20, 21, 22, 26, 27, 29, 31, 32, 36, 38, 39, 40, 42, 45, 46, 47, 49, 51, 54, 55, 60, 62, 64, 65], "method": [0, 1, 2, 6, 7, 8, 11, 12, 14, 16, 18, 19, 20, 30, 32, 33, 34, 35, 36, 37, 40, 43, 46, 47, 49, 52, 54, 55, 57, 58, 59, 62, 63, 64, 65], "intend": [0, 8, 10, 29, 32, 36, 61, 64, 65], "call": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 16, 29, 30, 31, 33, 35, 36, 38, 42, 43, 52, 54, 57, 62, 65], "user": [0, 8, 14, 20, 26, 29, 36, 46, 47, 49, 51, 54, 56, 58, 59, 60, 62, 63, 65], "code": [0, 1, 2, 7, 8, 13, 15, 17, 36, 38, 39, 40, 42, 47, 52, 55, 59, 61, 63], "balanc": [0, 1, 2, 5, 6, 12, 16, 20, 24, 32, 46, 65], "currenc": [0, 1, 2, 5, 6, 7, 8, 9, 12, 15, 16, 20, 24, 27, 32, 33, 36, 46, 50, 57, 60], "none": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 49, 52, 55, 57, 58, 62, 64], "accountbal": [0, 1, 2, 6, 12, 16, 20, 24], "return": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 43, 46, 49, 51, 52, 55, 57], "current": [0, 1, 2, 6, 7, 8, 10, 11, 12, 14, 16, 20, 26, 27, 30, 31, 32, 33, 36, 37, 43, 45, 46, 47, 50, 51, 52, 55, 59, 62, 63, 64], "total": [0, 5, 7, 11, 12, 16, 20, 23, 24, 25, 26, 27, 31, 32, 33, 65], "For": [0, 5, 6, 24, 25, 29, 31, 37, 39, 43, 45, 46, 49, 54, 57, 59, 60, 62, 63, 64, 65], "multi": [0, 1, 2, 5, 6, 11, 12, 16, 20, 47, 49, 51, 60], "specifi": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 24, 36, 42, 45, 49, 50, 52, 62, 64], "queri": [0, 1, 2, 6, 7, 12, 16, 25, 29, 32, 36, 46, 48], "default": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 23, 24, 25, 26, 28, 30, 31, 35, 36, 37, 46, 49, 55, 57, 58, 59, 60, 63, 64], "set": [0, 2, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 25, 27, 31, 33, 36, 37, 41, 42, 48, 49, 50, 54, 55, 58, 59, 63, 64], "applic": [0, 1, 8, 14, 20, 23, 27, 36, 51, 58, 60, 64], "inform": [0, 1, 2, 6, 8, 12, 16, 18, 20, 23, 32, 37, 38, 40, 46, 48, 49, 50, 61, 62, 63], "rather": [0, 37, 63], "than": [0, 6, 8, 10, 12, 17, 18, 24, 25, 26, 29, 31, 34, 36, 37, 59, 63], "monei": [0, 1, 2, 5, 6, 12, 16, 20, 23, 24, 27, 32, 33], "zero": [0, 2, 7, 8, 16, 24, 25, 26, 29, 30, 64], "amount": [0, 24, 42, 51, 59, 63], "balance_fre": 0, "free": [0, 8, 24, 40, 42, 59, 63], "balance_lock": 0, "lock": [0, 24, 32], "balance_tot": 0, "dict": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 18, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 46, 50], "balances_fre": 0, "balances_lock": [0, 32], "balances_tot": 0, "nautilu": [0, 2, 4, 6, 7, 9, 18, 20, 21, 31, 35, 46, 47, 48, 49, 52, 54, 59, 61, 62, 63, 64, 65], "calculate_balance_lock": 0, "instrument": [0, 1, 2, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 47, 48, 49, 59, 60, 64, 65], "ordersid": [0, 1, 2, 6, 7, 8, 12, 16, 18, 20, 25, 26, 27, 36, 46, 64], "side": [0, 1, 2, 6, 7, 8, 10, 12, 16, 18, 20, 21, 25, 26, 27, 29, 30, 36, 46], "quantiti": [0, 1, 2, 6, 8, 11, 12, 16, 18, 20, 23, 24, 25, 26, 27, 33, 36, 46, 53, 59, 60, 63], "price": [0, 1, 2, 6, 7, 8, 11, 12, 14, 16, 18, 20, 23, 24, 25, 26, 27, 28, 33, 36, 49, 59, 60, 63, 64], "inverse_as_quot": [0, 23], "result": [0, 5, 7, 10, 23, 27, 31, 37, 46, 49, 54, 58, 59, 62, 63, 65], "quot": [0, 1, 2, 6, 7, 8, 11, 14, 16, 18, 20, 23, 27, 32, 33, 36, 47, 49, 55, 59, 62, 63], "standard": [0, 8, 10, 14, 23, 26, 27, 42, 46, 49, 51, 58, 62, 64], "invers": [0, 23, 27], "bui": [0, 1, 2, 6, 8, 12, 16, 18, 19, 20, 25, 26, 27, 46, 64], "sell": [0, 1, 2, 6, 8, 12, 16, 18, 19, 20, 25, 26, 27, 46, 64], "instead": [0, 23, 38], "calculate_commiss": 0, "last_qti": [0, 1, 2, 6, 12, 16, 20], "last_px": [0, 1, 2, 6, 12, 16, 20], "liquiditysid": [0, 1, 2, 6, 12, 16, 20, 26], "liquidity_sid": [0, 1, 2, 6, 12, 16, 20, 26], "commiss": [0, 1, 2, 6, 12, 16, 20, 27, 33], "gener": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 20, 22, 23, 27, 29, 30, 31, 36, 37, 40, 42, 43, 47, 49, 52, 56, 57, 58, 61, 62, 64], "transact": 0, "maker": [0, 1, 2, 6, 12, 16, 20, 23, 64], "taker": [0, 1, 2, 6, 12, 16, 19, 20, 23], "liquid": [0, 1, 2, 6, 8, 12, 16, 19, 20, 23, 26, 62, 64], "calculate_pnl": [0, 27], "orderfil": [0, 1, 2, 6, 12, 16, 20, 26, 27], "posit": [0, 1, 2, 5, 6, 7, 8, 9, 12, 15, 16, 18, 21, 23, 24, 26, 30, 32, 33, 36, 46, 57, 62, 64], "list": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 20, 21, 25, 27, 28, 29, 30, 31, 35, 36, 46, 47, 52, 55, 58], "pnl": [0, 5, 9, 20, 27, 32, 57], "doe": [0, 6, 8, 14, 24, 33, 36, 37, 46, 47, 59, 63], "includ": [0, 2, 4, 6, 8, 9, 10, 11, 12, 18, 20, 21, 26, 27, 29, 30, 33, 36, 38, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 60, 62, 64, 65], "ani": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 46, 47, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65], "clear_balance_lock": 0, "instrumentid": [0, 1, 2, 6, 7, 8, 11, 12, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 32, 33, 36, 46, 52, 62, 64, 65], "instrument_id": [0, 1, 2, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 23, 24, 25, 26, 27, 31, 32, 33, 36, 46, 49, 52, 59, 62, 63, 64, 65], "clear": [0, 1, 6, 7, 15, 25, 32, 36, 37, 59, 63, 64], "event_count": [0, 12, 16, 26, 27, 33], "count": [0, 1, 2, 6, 7, 8, 11, 12, 14, 16, 25, 26, 27, 29, 30, 31, 33], "int": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 46, 54, 65], "all": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 23, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 47, 49, 51, 52, 54, 55, 59, 60, 62, 64, 65], "accountid": [0, 1, 2, 6, 7, 12, 15, 16, 20, 21, 26, 27], "is_cash_account": 0, "is_margin_account": 0, "is_unleverag": 0, "last_ev": [0, 26, 27], "last": [0, 2, 5, 6, 7, 8, 11, 12, 14, 15, 20, 25, 26, 27, 36, 43, 55, 60, 64, 65], "starting_bal": [0, 6, 9, 46, 59], "start": [0, 1, 2, 4, 6, 8, 9, 10, 11, 12, 14, 16, 28, 30, 31, 33, 35, 36, 45, 48, 49, 50, 52, 59, 63], "accounttyp": [0, 1, 2, 6, 12, 16, 19, 20], "update_balance_lock": 0, "updat": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 20, 25, 31, 32, 33, 36, 41, 46, 48, 49, 55, 62, 64], "margin_init": [0, 23, 24, 62], "neg": [0, 6, 8, 10, 12, 14, 17, 20, 23, 24, 25, 26, 27, 29, 33, 36], "0": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 46, 57, 59, 62, 64], "update_bal": 0, "allow_zero": 0, "true": [0, 1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 27, 30, 31, 32, 36, 46, 49, 50, 52, 59, 64], "guarante": [0, 7, 27, 42, 47, 58], "everi": [0, 58, 60, 64], "therefor": [0, 15, 36, 43, 46, 49], "we": [0, 1, 13, 31, 34, 37, 38, 39, 40, 42, 44, 45, 46, 47, 49, 54, 59, 60, 61, 63, 64, 65], "onli": [0, 1, 2, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 20, 25, 26, 29, 31, 32, 33, 35, 36, 39, 46, 47, 49, 52, 55, 58, 59, 60, 62, 63], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "allow": [0, 2, 4, 8, 9, 16, 23, 33, 34, 36, 46, 48, 50, 52, 54, 58, 59, 60, 64], "just": [0, 10, 11, 12, 42, 43, 59, 63], "asset": [0, 2, 6, 9, 12, 14, 16, 23, 24, 47, 49, 62, 63], "empti": [0, 1, 2, 6, 8, 10, 16, 20, 26, 36, 37, 57], "update_commiss": 0, "which": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 25, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "repres": [0, 1, 2, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 46, 62], "credit": 0, "marginaccount": 0, "calculate_margin_init": 0, "calculate_margin_maint": 0, "positionsid": [0, 7, 12, 20, 26, 27, 36], "mainten": [0, 23, 24, 32, 62], "long": [0, 12, 20, 26, 27, 32, 64], "short": [0, 5, 12, 20, 26, 27, 32, 64], "clear_margin": 0, "clear_margin_init": 0, "clear_margin_maint": 0, "default_leverag": [0, 6, 9], "leverag": [0, 6, 9, 47, 60, 64], "decim": [0, 2, 5, 6, 8, 9, 11, 12, 16, 17, 18, 20, 23, 24, 26, 28, 32, 33, 59, 64, 65], "found": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 25, 29, 32, 37, 38, 42, 43, 49, 52, 58, 63, 64], "marginbal": [0, 1, 2, 6, 12, 16, 20, 24], "margin_maint": [0, 23, 24, 62], "margins_init": [0, 32], "margins_maint": [0, 32], "set_default_leverag": 0, "valu": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 34, 36, 37, 42, 43, 46, 48, 49, 50, 57, 59, 60, 62, 63, 64], "typeerror": [0, 6, 7, 8, 9, 12, 15, 16, 18, 33, 34, 35, 36, 58], "1": [0, 1, 2, 4, 6, 8, 9, 10, 14, 18, 19, 23, 25, 31, 33, 36, 41, 46, 49, 54, 57, 60, 64, 65], "set_leverag": 0, "update_margin": 0, "update_margin_init": 0, "update_margin_maint": 0, "object": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 46, 47, 49, 52, 54, 55, 59, 60, 62, 63], "one": [0, 6, 8, 9, 12, 25, 26, 29, 32, 36, 46, 49, 53, 59, 62, 63, 64], "versu": 0, "anoth": [0, 7, 46], "get_rat": 0, "from_curr": [0, 7], "to_curr": [0, 7], "pricetyp": [0, 7, 14, 18, 46, 60], "price_typ": [0, 7, 14, 18, 46], "bid_quot": 0, "ask_quot": 0, "doubl": [0, 5, 6, 7, 8, 10, 12, 14, 16, 20, 23, 24, 25, 26, 27, 28, 38], "dictionari": [0, 1, 2, 4, 7, 9, 12, 15, 18, 20, 21, 23, 24, 25, 26, 27, 31, 36, 48, 50, 62], "bid": [0, 2, 6, 18, 23, 25, 28, 59, 60, 63, 64], "ask": [0, 2, 6, 18, 23, 25, 28, 59, 60, 63, 64], "convert": [0, 1, 5, 7, 8, 10, 15, 18, 31, 34, 36, 48, 50, 51, 59, 63], "convers": [0, 10, 36, 64], "symbol": [0, 2, 6, 21, 23, 26, 27, 49, 50, 51, 62], "length": [0, 6, 8, 9, 10, 14], "note": [0, 2, 4, 5, 6, 7, 8, 9, 10, 14, 18, 25, 27, 29, 36, 50, 63], "insuffici": [0, 57], "data": [0, 3, 5, 7, 8, 9, 10, 12, 14, 15, 23, 30, 31, 34, 35, 36, 42, 47, 48, 50, 51, 55, 57, 58, 62, 65], "rolloverinterestcalcul": 0, "pd": [0, 1, 2, 5, 6, 10, 16, 31, 36, 57, 59, 63, 64], "datafram": [0, 5, 6, 10, 31, 36, 63], "rollov": [0, 6], "interest": [0, 6, 49, 58], "rate_data_csv_path": 0, "term": [0, 8, 49, 59, 61, 63, 64], "csv": [0, 6, 31, 41, 59, 63], "sinc": [0, 2, 4, 8, 9, 14, 47, 55, 61, 62, 65], "1956": 0, "str": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 46, 54, 59, 65], "calc_overnight_r": 0, "date": [0, 6, 23, 64], "forex": [0, 14, 28, 36, 50, 59, 63, 64], "overnight": 0, "rang": [0, 2, 5, 6, 8, 26, 41, 51, 62], "6": [0, 6, 8, 19], "7": [0, 6, 8, 19, 23], "01": [0, 9, 10, 41, 46, 59, 63], "bp": 0, "get_rate_data": 0, "creat": [0, 1, 2, 4, 6, 8, 9, 11, 14, 20, 25, 31, 35, 36, 46, 47, 48, 49, 50, 54, 59, 62, 64], "static": [0, 1, 2, 5, 6, 8, 9, 12, 14, 17, 18, 20, 21, 23, 24, 25, 26, 27, 34, 47, 58], "creation": [0, 9, 20, 49, 55, 64], "register_account_typ": 0, "unicod": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 36], "issuer": [0, 21], "account_cl": 0, "keyerror": [0, 6, 8, 16, 25, 26, 27, 29, 34, 35, 36], "ha": [0, 1, 2, 6, 7, 8, 10, 11, 12, 14, 16, 20, 25, 26, 29, 31, 33, 36, 38, 47, 49, 55, 58, 59, 60, 62, 63, 64, 65], "alreadi": [0, 1, 2, 6, 7, 8, 10, 11, 12, 16, 26, 27, 29, 34, 35, 36, 55, 59, 63, 64, 65], "register_calculated_account": 0, "been": [0, 1, 2, 6, 8, 11, 12, 16, 20, 25, 26, 29, 32, 33, 36, 46, 47, 55, 58, 59, 60, 63, 65], "accountsmanag": 0, "cachefacad": [0, 6, 7, 8, 16, 32, 35, 36], "cach": [0, 1, 2, 6, 8, 9, 11, 12, 16, 30, 32, 33, 35, 36, 45, 46, 55, 58, 62], "loggeradapt": [0, 1, 6, 8, 16, 30, 31, 35, 36], "log": [0, 1, 2, 6, 7, 9, 11, 12, 14, 16, 29, 30, 31, 33, 35, 36, 38, 46, 49, 51, 52, 64], "clock": [0, 1, 2, 6, 11, 12, 16, 29, 32, 33, 35, 36, 52], "function": [0, 2, 4, 6, 8, 9, 10, 14, 25, 32, 37, 40, 42, 47, 49, 51, 54, 56, 58, 59, 64, 65], "read": [0, 4, 6, 7, 8, 16, 30, 31, 32, 35, 36, 38, 44, 46, 53, 56, 58, 59, 61, 62, 63], "logger": [0, 1, 2, 6, 7, 8, 11, 12, 15, 16, 29, 30, 31, 32, 33, 35, 36, 38, 52, 62], "api": [1, 2, 3, 4, 6, 16, 29, 36, 40, 47, 52, 55, 58, 61, 62, 63, 64, 65], "spot": [1, 9, 12, 16, 19, 23, 49, 51, 52, 62, 64], "bet": [1, 19, 47, 48, 51, 62], "betfairdatacli": [1, 48], "loop": [1, 2, 8, 9, 16, 29, 30, 35, 36, 52, 60, 63], "abstracteventloop": [1, 2, 8, 16, 30, 35, 36], "client": [1, 2, 3, 7, 8, 9, 15, 20, 21, 26, 27, 36, 48, 49, 50, 51, 55, 58, 60, 62], "betfaircli": 1, "msgbu": [1, 2, 6, 8, 11, 12, 16, 29, 32, 33, 35, 36, 58], "messagebu": [1, 2, 6, 8, 11, 12, 16, 29, 32, 33, 35, 36, 58], "liveclock": [1, 2, 8, 16, 52], "market_filt": 1, "instrument_provid": [1, 2, 4, 9, 16, 31, 49, 50], "betfairinstrumentprovid": [1, 48], "strict_handl": 1, "livemarketdatacli": [1, 2, 16], "asyncio": [1, 2, 8, 9, 16, 30, 52], "httpclient": [1, 30], "messag": [1, 2, 6, 7, 8, 9, 16, 20, 30, 32, 33, 35, 36, 47, 64], "bu": [1, 2, 6, 8, 11, 12, 16, 32, 33, 35, 36, 47, 58], "market": [1, 6, 7, 8, 11, 12, 14, 18, 20, 21, 23, 24, 25, 27, 32, 36, 46, 47, 48, 49, 50, 51, 55, 60, 62, 63, 65], "filter": [1, 2, 4, 6, 7, 8, 9, 14, 16, 29, 30, 32, 41, 50], "strict": [1, 17], "handl": [1, 2, 6, 8, 9, 11, 12, 14, 16, 17, 24, 29, 31, 35, 36, 39, 40, 43, 47, 49, 52, 65], "mode": [1, 6, 8, 9, 11, 12, 16, 17, 33, 35, 38], "enabl": [1, 6, 33, 42, 45, 60], "request": [1, 2, 6, 8, 10, 11, 16, 26, 29, 30, 36, 49, 50, 51, 60], "datatyp": [1, 2, 6, 8, 11, 16, 18, 31, 36, 49, 52, 54], "data_typ": [1, 2, 6, 8, 11, 16, 18, 31, 36, 49, 52, 54], "uuid4": [1, 2, 6, 7, 8, 10, 11, 12, 16, 20, 26, 35, 52], "correlation_id": [1, 2, 6, 10, 11, 16, 52], "subscript": [1, 2, 6, 8, 11, 16, 36, 49], "correl": [1, 2, 6, 10, 11, 16, 29], "respons": [1, 2, 6, 10, 11, 12, 16, 29, 33, 42], "subscribe_order_book_delta": [1, 2, 6, 8, 11, 16, 36], "booktyp": [1, 2, 6, 8, 11, 16, 25, 36], "book_typ": [1, 2, 6, 8, 9, 11, 16, 25, 36], "depth": [1, 2, 6, 8, 11, 16, 25, 36], "kwarg": [1, 2, 6, 8, 11, 14, 16, 30, 31, 34, 36], "subscrib": [1, 2, 6, 8, 11, 16, 18, 29, 36, 49, 54, 55, 60, 62], "orderbookdelta": [1, 2, 8, 11, 16, 25, 34, 36, 60], "book": [1, 2, 6, 7, 8, 11, 12, 16, 18, 26, 36, 47, 62, 63, 64], "l1_tbbo": [1, 2, 6, 8, 9, 11, 16, 25, 36], "l2_mbp": [1, 2, 8, 11, 16, 25, 36], "l3_mbo": [1, 2, 8, 11, 16, 25, 36], "maximum": [1, 2, 5, 8, 9, 11, 16, 23, 25, 28, 30, 33, 36, 41, 60, 62], "keyword": [1, 2, 8, 11, 16, 36, 38], "argument": [1, 2, 4, 6, 8, 9, 11, 16, 30, 36, 37, 58, 63], "subscribe_trade_tick": [1, 2, 6, 8, 11, 16, 36], "tradetick": [1, 2, 6, 7, 8, 11, 14, 16, 18, 25, 36, 60, 63], "tick": [1, 2, 6, 7, 8, 9, 11, 14, 16, 19, 23, 25, 27, 32, 36, 46, 47, 49, 55, 59, 60, 62, 63, 64, 65], "subscribe_instru": [1, 2, 6, 8, 11, 16, 36, 62], "subscribe_instrument_status_upd": [1, 2, 6, 8, 11, 16, 36], "instrumentstatusupd": [1, 2, 8, 11, 16, 18, 36], "subscribe_instrument_close_pric": [1, 2, 6, 8, 11, 16, 36], "instrumentclosepric": [1, 2, 8, 11, 16, 18, 36], "unsubscribe_order_book_snapshot": [1, 2, 6, 8, 11, 16, 36], "unsubscrib": [1, 2, 6, 8, 11, 16, 29, 36], "orderbooksnapshot": [1, 2, 8, 11, 16, 25, 34, 36, 60], "unsubscribe_order_book_delta": [1, 2, 6, 8, 11, 16, 36], "connect": [1, 2, 4, 6, 9, 11, 12, 16, 29, 30, 48, 49, 50, 51, 52, 58], "degrad": [1, 2, 6, 8, 11, 12, 16, 33, 36], "compon": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 16, 21, 25, 29, 30, 33, 34, 36, 38, 43, 46, 47, 49, 51, 52, 55, 59, 60, 63], "while": [1, 2, 6, 8, 11, 12, 14, 16, 33, 36, 50], "on_degrad": [1, 2, 6, 8, 11, 12, 16, 33, 36], "except": [1, 2, 6, 8, 10, 11, 12, 16, 25, 33, 36, 38, 43, 46, 52, 65], "rerais": [1, 2, 6, 8, 11, 12, 16, 33, 36], "remain": [1, 2, 6, 8, 11, 12, 16, 33, 36, 38, 53, 64], "do": [1, 2, 6, 8, 11, 12, 16, 29, 33, 36, 37, 46, 49, 52, 54, 58, 59, 63], "overrid": [1, 2, 6, 7, 8, 11, 12, 16, 17, 33, 34, 36, 62], "valid": [1, 2, 4, 6, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 23, 26, 28, 29, 30, 33, 35, 36, 48, 49, 50, 62], "thi": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65], "chang": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 20, 25, 26, 28, 29, 33, 36, 37, 39, 42, 43, 47, 62], "error": [1, 2, 6, 7, 8, 11, 12, 16, 29, 33, 36, 37, 42, 43, 46, 51, 52, 63, 64], "disconnect": [1, 2, 9, 11, 12, 16, 30], "dispos": [1, 2, 6, 8, 11, 12, 16, 33, 35, 36], "on_dispos": [1, 2, 6, 8, 11, 12, 16, 33, 36], "fault": [1, 2, 6, 8, 11, 12, 16, 33, 36], "idempot": [1, 2, 6, 8, 11, 12, 16, 33, 35, 36], "irrevers": [1, 2, 6, 8, 11, 12, 16, 33, 35, 36], "No": [1, 2, 6, 7, 8, 11, 12, 16, 33, 35, 36, 49, 55], "other": [1, 2, 4, 6, 7, 8, 9, 11, 12, 16, 18, 20, 26, 30, 31, 33, 34, 35, 36, 37, 43, 46, 47, 49, 53, 58, 62, 63, 64], "after": [1, 2, 6, 8, 9, 10, 11, 12, 16, 31, 33, 35, 36], "on_fault": [1, 2, 6, 8, 11, 12, 16, 33, 36], "classmethod": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36], "fully_qualified_nam": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36], "cl": [1, 2, 6, 8, 11, 12, 16, 18, 23, 25, 31, 33, 34, 36], "fulli": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36, 40, 43, 47], "qualifi": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36], "name": [1, 2, 4, 5, 6, 8, 9, 11, 12, 14, 16, 17, 18, 21, 23, 25, 28, 29, 31, 33, 35, 36, 37, 45, 46, 50, 51, 52, 59, 60, 63, 65], "refer": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 28, 33, 36, 37, 42, 46, 49, 55, 61, 62, 63, 64, 65], "http": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 33, 36, 38, 41, 45, 46, 49, 59, 63], "www": [1, 2, 4, 5, 6, 8, 9, 11, 12, 14, 16, 18, 20, 21, 23, 24, 25, 33, 36, 41, 59, 63], "python": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 18, 23, 25, 31, 33, 36, 37, 38, 39, 40, 45, 46, 55, 56, 58, 62], "org": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 16, 18, 21, 23, 25, 33, 36, 41, 45], "dev": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36, 39, 45], "pep": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36], "3155": [1, 2, 4, 5, 6, 8, 9, 11, 12, 16, 18, 23, 25, 33, 36], "componentid": [1, 2, 6, 8, 11, 12, 16, 21, 33, 36], "is_connect": [1, 2, 6, 11, 12, 16, 30], "is_degrad": [1, 2, 6, 8, 11, 12, 16, 33, 36], "whether": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 26, 27, 30, 32, 33, 34, 36, 37, 48, 49, 50, 55, 64], "is_dispos": [1, 2, 6, 8, 11, 12, 16, 33, 36], "is_fault": [1, 2, 6, 8, 11, 12, 16, 33, 36], "is_initi": [1, 2, 6, 8, 11, 12, 16, 33, 36], "is_run": [1, 2, 6, 8, 11, 12, 16, 30, 33, 36], "run": [1, 2, 5, 6, 7, 8, 9, 11, 12, 16, 30, 32, 33, 35, 36, 37, 38, 39, 43, 45, 47, 50, 51, 55, 57, 58, 60, 63, 65], "is_stop": [1, 2, 6, 8, 11, 12, 16, 30, 33, 36], "stop": [1, 2, 6, 8, 9, 11, 12, 16, 28, 30, 31, 33, 35, 36, 53], "request_bar": [1, 2, 6, 8, 11, 16, 36], "bartyp": [1, 2, 6, 7, 8, 11, 16, 18, 36], "bar_typ": [1, 2, 6, 7, 8, 11, 16, 18, 36, 59, 65], "limit": [1, 2, 6, 8, 9, 11, 12, 16, 20, 32, 33, 36, 37, 49, 53, 60, 65], "datetim": [1, 2, 5, 6, 8, 9, 11, 12, 14, 16, 20, 23, 26, 36, 59, 63], "from_datetim": [1, 2, 6, 8, 11, 16, 36], "to_datetim": [1, 2, 6, 8, 11, 16, 36], "histor": [1, 2, 6, 8, 11, 16, 36, 47, 49, 51, 58, 59, 60, 63], "bar": [1, 2, 6, 7, 8, 9, 11, 14, 16, 31, 36, 47, 49, 60, 63], "number": [1, 2, 8, 11, 16, 21, 23, 24, 25, 28, 30, 31, 33, 55, 62, 64, 65], "request_instru": [1, 2, 6, 8, 11, 16, 36, 52], "venu": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 20, 21, 23, 26, 27, 30, 32, 36, 47, 49, 51, 52, 55, 58, 62], "request_quote_tick": [1, 2, 6, 8, 11, 16, 36], "quotetick": [1, 2, 6, 7, 8, 11, 14, 16, 18, 32, 36, 46, 59, 60, 63], "request_trade_tick": [1, 2, 6, 8, 11, 16, 36], "reset": [1, 2, 5, 6, 7, 8, 11, 12, 14, 16, 32, 33, 36], "field": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16, 20, 21, 31, 32, 33, 36, 49, 59, 63], "on_reset": [1, 2, 6, 8, 11, 12, 16, 33, 36], "resum": [1, 2, 6, 8, 11, 12, 16, 33, 36], "on_resum": [1, 2, 6, 8, 11, 12, 16, 33, 36], "on_start": [1, 2, 6, 8, 11, 12, 16, 33, 36, 46, 49], "componentst": [1, 2, 6, 8, 11, 12, 16, 33, 36], "on_stop": [1, 2, 6, 8, 11, 12, 16, 33, 36], "subscribe_bar": [1, 2, 6, 8, 11, 16, 36], "subscribe_order_book_snapshot": [1, 2, 6, 8, 11, 16, 36], "level": [1, 2, 3, 6, 9, 10, 11, 16, 21, 28, 30, 35, 36, 37, 40, 42, 43, 46, 47, 49, 51, 52, 56, 60, 61, 64], "A": [1, 2, 5, 7, 8, 9, 10, 11, 14, 16, 24, 25, 26, 29, 31, 36, 41, 46, 50, 52, 58, 60, 62, 64, 65], "subscribe_quote_tick": [1, 2, 6, 8, 11, 16, 36, 46], "subscribe_tick": [1, 2, 6, 8, 11, 16, 36], "ticker": [1, 2, 6, 7, 8, 11, 16, 21, 23, 26, 27, 36, 49], "subscribed_bar": [1, 2, 6, 11, 16], "subscribed_generic_data": [1, 2, 6, 11, 16], "subscribed_instrument_close_pric": [1, 2, 6, 11, 16], "close": [1, 2, 6, 7, 8, 11, 14, 16, 18, 20, 26, 27, 30, 31, 36, 37, 46, 51, 64], "subscribed_instrument_status_upd": [1, 2, 6, 11, 16], "statu": [1, 2, 6, 8, 9, 11, 12, 16, 18, 26, 36, 51], "subscribed_instru": [1, 2, 6, 11, 16], "subscribed_order_book_delta": [1, 2, 6, 11, 16], "delta": [1, 2, 6, 8, 11, 16, 25, 26, 36], "subscribed_order_book_snapshot": [1, 2, 6, 11, 16], "snapshot": [1, 2, 6, 7, 8, 11, 16, 25, 36], "subscribed_quote_tick": [1, 2, 6, 11, 16], "subscribed_tick": [1, 2, 6, 11, 16], "subscribed_trade_tick": [1, 2, 6, 11, 16], "trade": [1, 2, 5, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 40, 47, 48, 49, 50, 51, 54, 55, 57, 58, 63, 64, 65], "trader_id": [1, 2, 6, 8, 9, 11, 12, 15, 16, 20, 26, 27, 29, 33, 35, 36], "trader": [1, 2, 6, 8, 9, 11, 12, 14, 15, 16, 20, 21, 26, 27, 29, 32, 33, 35, 46, 47, 49, 50, 55, 57, 64], "associ": [1, 2, 6, 7, 8, 11, 12, 15, 16, 20, 24, 26, 27, 29, 33, 36, 64], "traderid": [1, 2, 6, 8, 11, 12, 15, 16, 20, 21, 26, 27, 29, 33, 35, 36], "unsubscribe_bar": [1, 2, 6, 8, 11, 16, 36], "unsubscribe_instru": [1, 2, 6, 8, 11, 16, 36], "unsubscribe_instrument_close_pric": [1, 2, 6, 11, 16], "unsubscribe_instrument_status_upd": [1, 2, 6, 11, 16], "unsubscribe_quote_tick": [1, 2, 6, 8, 11, 16, 36], "unsubscribe_tick": [1, 2, 6, 8, 11, 16, 36], "unsubscribe_trade_tick": [1, 2, 6, 8, 11, 16, 36], "rout": [1, 2, 4, 6, 9, 11, 12, 16, 36, 53], "subscriptionstatu": 1, "modul": [1, 2, 8, 10, 14, 36, 40, 46, 47, 58, 59, 63], "qualnam": [1, 2, 8, 14, 36], "boundari": [1, 2, 8, 14, 36, 42, 49, 51, 58], "enum": [1, 10, 14, 36, 46, 49, 52, 64], "instrumentsearch": 1, "ts_event": [1, 2, 6, 8, 10, 11, 12, 16, 18, 20, 23, 25, 36, 54, 59, 63], "ts_init": [1, 2, 6, 8, 10, 11, 12, 18, 20, 23, 25, 26, 27, 31, 36, 52, 54, 59, 63], "search": [1, 10, 50, 59], "unix": [1, 2, 6, 8, 10, 11, 12, 16, 18, 20, 23, 25, 26, 27, 35, 36, 39, 51, 54], "timestamp": [1, 2, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 20, 23, 25, 26, 27, 31, 34, 35, 36, 51, 54, 59, 63, 64], "nanosecond": [1, 2, 6, 8, 10, 11, 12, 15, 16, 18, 20, 23, 25, 26, 27, 30, 35, 36, 47, 51, 54, 60], "occur": [1, 2, 6, 8, 10, 12, 16, 18, 20, 23, 25, 26, 27, 36, 55], "uint64_t": [1, 2, 6, 8, 10, 11, 12, 16, 18, 20, 23, 24, 25, 26, 27, 30, 35, 36], "wa": [1, 2, 4, 6, 8, 9, 10, 11, 12, 16, 18, 19, 20, 23, 25, 26, 27, 35, 36, 37, 47, 58], "bsporderbookdelta": 1, "bsp": 1, "from_dict": [1, 2, 12, 18, 20, 23, 24, 25, 34], "to_dict": [1, 2, 12, 18, 20, 23, 24, 25, 26, 27, 34], "obj": [1, 2, 12, 18, 20, 23, 25, 31, 34], "represent": [1, 2, 4, 8, 9, 12, 18, 20, 23, 24, 25, 26, 27], "action": [1, 8, 25, 30, 36, 51, 55, 62], "add": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 25, 36, 46, 48, 49, 50, 63, 65], "delet": [1, 7, 15, 25, 30, 46], "bookact": [1, 25], "update_id": [1, 25], "uint64": [1, 25], "betfairtick": 1, "last_traded_pric": 1, "traded_volum": 1, "betfairexecutioncli": [1, 48], "liveexecutioncli": [1, 2, 9, 16], "account": [1, 2, 4, 5, 6, 7, 12, 14, 15, 16, 21, 24, 26, 27, 32, 33, 36, 46, 48, 50, 58], "async": [1, 2, 8, 16, 30], "watch_stream": 1, "ensur": [1, 6, 10, 11, 12, 15, 37, 38, 41, 42, 44, 50, 57, 64], "stream": [1, 2, 6, 8, 9, 11, 16, 35, 36, 48, 49, 50, 51, 54, 60], "generate_order_status_report": [1, 2, 16], "client_order_id": [1, 2, 6, 7, 12, 15, 16, 20, 26, 27], "clientorderid": [1, 2, 6, 7, 8, 12, 15, 16, 20, 21, 26, 27, 36], "venue_order_id": [1, 2, 6, 7, 12, 16, 20, 26, 27], "venueorderid": [1, 2, 6, 7, 12, 16, 20, 21, 26, 27, 36], "orderstatusreport": [1, 2, 6, 12, 16], "report": [1, 2, 6, 16, 20, 36, 43, 46], "identifi": [1, 2, 6, 7, 8, 9, 10, 16, 36, 46, 62, 65], "": [1, 2, 8, 9, 15, 16, 20, 26, 37, 38, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 62, 63, 64, 65], "end": [1, 2, 6, 8, 16, 31, 36, 37, 59, 60, 63, 64], "open_onli": [1, 2, 16], "nautilus_trad": [1, 2, 4, 5, 6, 8, 9, 16, 19, 31, 35, 45, 46, 52, 54, 57, 58, 59, 62, 63, 65], "mai": [1, 2, 8, 13, 14, 16, 18, 24, 27, 29, 31, 32, 34, 36, 43, 46, 49, 53, 55, 58, 62, 63], "match": [1, 2, 6, 7, 8, 12, 16, 18, 20, 21, 26, 27, 29, 36, 51, 55, 62], "open": [1, 2, 6, 7, 12, 14, 16, 18, 20, 26, 27, 33, 36, 37, 46, 47, 49, 64], "generate_trade_report": [1, 2, 16], "tradereport": [1, 2, 12, 16], "assign": [1, 2, 6, 7, 12, 16, 18, 20, 21, 24, 26, 27, 29, 36, 55, 64], "generate_position_status_report": [1, 2, 16], "positionstatusreport": [1, 2, 12, 16], "check_account_curr": 1, "check": [1, 7, 8, 9, 10, 11, 12, 16, 18, 25, 26, 33, 36, 37, 39, 43, 46, 49, 54, 55, 62, 63], "against": [1, 26, 36, 45, 64], "handle_order_stream_upd": 1, "raw": [1, 2, 5, 14, 18, 23, 24, 30, 31, 36, 46, 51, 52, 62], "byte": [1, 6, 8, 9, 15, 30, 31, 34, 36], "wait_for_ord": 1, "timeout_second": 1, "10": [1, 8, 9, 16, 19, 41, 45, 59, 64, 65], "get": [1, 7, 8, 30, 40, 49, 62], "befor": [1, 2, 4, 8, 9, 16, 29, 31, 47, 51, 59, 63, 64], "our": [1, 46, 59, 63, 65], "submit_ord": [1, 2, 6, 12, 16, 36, 46, 55], "come": [1, 46, 63], "back": [1, 8, 15, 18, 31, 34, 46, 47, 54, 55], "betid": 1, "As": [1, 37, 49, 54, 59], "precaut": 1, "wait": [1, 8], "up": [1, 8, 9, 12, 14, 16, 17, 24, 25, 36, 38, 43, 46, 49, 54, 59, 60, 62, 63, 65], "ad": [1, 6, 7, 8, 16, 40, 46, 51, 63], "order_id_to_client_order_id": 1, "cancel_all_ord": [1, 2, 6, 12, 16, 36], "command": [1, 2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 33, 36, 38, 39, 43, 52, 55, 58, 65], "cancelallord": [1, 2, 6, 12, 16], "asynchron": [1, 2, 8, 11, 12, 16, 30, 47, 60], "cancel_ord": [1, 2, 6, 12, 16, 36], "cancelord": [1, 2, 6, 12, 16, 20, 36], "generate_account_st": [1, 2, 6, 12, 16], "margin": [1, 2, 6, 9, 12, 16, 19, 20, 23, 24, 32, 46, 49, 59, 60, 64], "info": [1, 2, 6, 8, 9, 11, 12, 16, 20, 23, 26, 27, 35, 46, 49], "publish": [1, 2, 6, 8, 12, 16, 18, 29, 36, 51, 52, 60, 62], "directli": [1, 2, 6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 25, 26, 33, 34, 36, 43, 46, 55, 60], "addit": [1, 2, 6, 12, 16, 20, 23, 37, 42, 46, 47, 55], "implement": [1, 2, 3, 6, 7, 8, 11, 12, 13, 14, 15, 16, 20, 22, 32, 33, 34, 36, 40, 42, 43, 47, 52, 56, 57, 60], "generate_mass_statu": [1, 2, 16], "lookback_min": [1, 2, 16], "executionmassstatu": [1, 2, 12, 16], "mass": [1, 2, 12, 16], "lookback": [1, 2, 9, 16], "generate_order_accept": [1, 2, 6, 12, 16], "strategyid": [1, 2, 6, 7, 8, 12, 15, 16, 20, 21, 26, 27, 36, 65], "strategy_id": [1, 2, 6, 7, 8, 9, 12, 15, 16, 20, 26, 27, 36], "orderaccept": [1, 2, 6, 12, 16, 20], "send": [1, 2, 6, 8, 11, 12, 16, 20, 29, 30, 52, 54], "executionengin": [1, 2, 6, 9, 12, 16, 35, 36, 55], "strategi": [1, 2, 6, 7, 8, 9, 12, 15, 16, 20, 21, 26, 27, 32, 33, 35, 47, 49, 51, 52, 54, 55, 59, 60, 62, 64], "accept": [1, 2, 6, 12, 16, 20, 26, 43], "generate_order_cancel_reject": [1, 2, 6, 12, 16], "reason": [1, 2, 6, 12, 16, 20, 37, 42, 43, 46, 47, 49, 51, 57, 59, 63, 65], "ordercancelreject": [1, 2, 6, 12, 16, 20], "cancel": [1, 2, 6, 8, 12, 16, 20, 26, 33, 36, 51, 53, 55, 64], "reject": [1, 2, 6, 12, 16, 20, 26, 62], "generate_order_cancel": [1, 2, 6, 12, 16], "ordercancel": [1, 2, 6, 12, 16, 20], "generate_order_expir": [1, 2, 6, 12, 16], "orderexpir": [1, 2, 6, 12, 16, 20], "expir": [1, 2, 6, 8, 12, 16, 20, 26], "generate_order_fil": [1, 2, 6, 12, 16], "positionid": [1, 2, 5, 6, 7, 8, 12, 15, 16, 20, 21, 26, 27, 36], "venue_position_id": [1, 2, 6, 12, 16], "tradeid": [1, 2, 6, 12, 16, 18, 20, 21, 26, 27], "trade_id": [1, 2, 6, 12, 16, 18, 20, 26, 27], "order_sid": [1, 2, 6, 8, 12, 16, 20, 26, 36, 46, 64], "ordertyp": [1, 2, 6, 12, 16, 20, 26], "order_typ": [1, 2, 6, 12, 16, 20, 26, 36], "quote_curr": [1, 2, 6, 12, 16, 23, 27], "so": [1, 2, 6, 8, 10, 11, 12, 16, 17, 20, 26, 31, 34, 36, 37, 40, 41, 43, 46, 47, 49, 55, 58, 60, 63], "must": [1, 2, 6, 8, 9, 10, 11, 12, 16, 18, 20, 21, 24, 26, 29, 31, 35, 36, 41, 42, 43, 49, 50, 51, 62, 65], "pass": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 16, 20, 26, 31, 33, 36, 37, 46, 48, 49, 50, 54, 55, 57, 58, 59, 62, 63, 65], "explicitli": [1, 2, 6, 11, 12, 16, 20, 26, 49, 51, 52, 58], "ticket": [1, 2, 6, 12, 16, 37], "here": [1, 2, 6, 8, 10, 12, 16, 36, 37, 38, 40, 46, 47, 52, 56, 61, 65], "otherwis": [1, 2, 6, 8, 12, 16, 20, 36, 62], "engin": [1, 2, 8, 9, 31, 32, 35, 36, 47, 52, 57, 58, 59, 63], "om": [1, 2, 6, 12, 16, 27, 36], "resolut": [1, 2, 6, 12, 16, 47, 60], "averag": [1, 2, 6, 10, 12, 16, 20, 26, 27, 30], "generate_order_modify_reject": [1, 2, 6, 12, 16], "ordermodifyreject": [1, 2, 6, 12, 16, 20], "generate_order_pending_cancel": [1, 2, 6, 12, 16], "orderpendingcancel": [1, 2, 6, 12, 16, 20], "pend": [1, 2, 6, 12, 16, 20, 24, 32, 60], "generate_order_pending_upd": [1, 2, 6, 12, 16], "orderpendingupd": [1, 2, 6, 12, 16, 20], "generate_order_reject": [1, 2, 6, 12, 16], "orderreject": [1, 2, 6, 12, 16, 20], "generate_order_submit": [1, 2, 6, 12, 16], "ordersubmit": [1, 2, 6, 12, 16, 20], "submit": [1, 2, 6, 7, 9, 12, 15, 16, 20, 26, 33, 36, 49, 51, 64], "generate_order_trigg": [1, 2, 6, 12, 16], "ordertrigg": [1, 2, 6, 12, 16, 20], "trigger": [1, 2, 6, 10, 12, 16, 20, 26, 36, 47, 53, 55, 58], "generate_order_upd": [1, 2, 6, 12, 16], "trigger_pric": [1, 2, 6, 8, 12, 16, 20, 26, 36, 49, 64], "venue_order_id_modifi": [1, 2, 6, 12, 16], "orderupd": [1, 2, 6, 12, 16, 20], "modifi": [1, 2, 6, 9, 12, 16, 20, 33, 36, 51, 55], "get_account": [1, 2, 6, 12, 16], "modify_ord": [1, 2, 6, 12, 16, 36], "modifyord": [1, 2, 6, 9, 12, 16, 20, 33, 36], "oms_typ": [1, 2, 6, 7, 9, 12, 16, 36, 46, 59], "manag": [1, 2, 6, 7, 8, 9, 11, 12, 16, 21, 27, 31, 32, 33, 36, 47, 49, 58, 60, 64, 65], "omstyp": [1, 2, 6, 7, 9, 12, 16, 36], "query_ord": [1, 2, 6, 12, 16, 36], "queryord": [1, 2, 6, 12, 16, 36], "submitord": [1, 2, 6, 7, 12, 15, 16, 36, 55], "submit_order_list": [1, 2, 6, 12, 16, 36], "submitorderlist": [1, 2, 6, 7, 12, 15, 16, 36], "get_cached_betfair_cli": 1, "usernam": [1, 4, 48, 50], "password": [1, 4, 48, 50], "app_kei": [1, 48], "cert_dir": [1, 48], "credenti": 1, "exist": [1, 2, 7, 9, 11, 12, 16, 25, 29, 31, 36, 43, 51, 59, 63, 64], "sourc": [1, 2, 4, 6, 13, 18, 42, 47, 59, 61, 63, 65], "betfair_usernam": 1, "env": [1, 45], "var": 1, "betfair_password": 1, "kei": [1, 2, 8, 10, 18, 30, 47, 52], "betfair_app_kei": [1, 48], "ssl": [1, 30, 45], "certif": 1, "directori": [1, 6, 43, 45, 58, 59, 63], "betfair_cert_dir": [1, 48], "get_cached_betfair_instrument_provid": 1, "tupl": [1, 10, 16, 28, 31, 33, 50], "binancehttpcli": [1, 2, 49], "load": [1, 2, 6, 7, 8, 9, 12, 15, 16, 31, 35, 36, 46, 49, 50, 52], "binanceinstrumentprovid": [1, 2, 49, 62], "betfairlivedataclientfactori": [1, 48], "livedataclientfactori": [1, 2, 4, 9, 16], "live": [1, 2, 4, 8, 11, 12, 30, 31, 35, 36, 38, 47, 48, 49, 50, 51, 54, 55, 57, 58, 64, 65], "config": [1, 6, 7, 8, 11, 12, 15, 16, 31, 33, 35, 36, 37, 46, 48, 49, 50, 59, 65], "betfairdataclientconfig": 1, "livelogg": [1, 2, 8, 16], "new": [1, 2, 4, 6, 8, 9, 17, 20, 23, 25, 33, 34, 36, 37, 45, 64], "configur": [1, 2, 4, 6, 7, 8, 9, 11, 12, 15, 16, 33, 35, 36, 38, 52, 55, 57, 60], "betfairliveexecclientfactori": [1, 48], "liveexecclientfactori": [1, 2, 4, 9, 16], "betfairexecclientconfig": 1, "determine_order_pric": 1, "union": [1, 2, 4, 6, 9, 30, 35], "limitord": [1, 8, 26, 64], "marketord": [1, 8, 26, 36, 64], "determin": [1, 8, 9, 23, 29, 31, 36, 60, 63], "correct": [1, 6, 10, 42, 47, 58, 62, 63, 64], "doesn": 1, "t": [1, 6, 8, 29, 37, 38, 46, 49, 58, 59, 64], "min": [1, 2, 46], "max": [1, 16, 30, 33, 41, 57], "param": [1, 14, 20, 51], "order_submit_to_betfair": 1, "bettinginstru": [1, 23, 62], "requir": [1, 6, 8, 20, 23, 24, 26, 31, 38, 45, 46, 49, 54, 55, 58, 59, 62, 63, 64, 65], "order_update_to_betfair": 1, "order_cancel_to_betfair": 1, "order_cancel_all_to_betfair": 1, "parse_handicap": 1, "x": [1, 10, 14, 54, 57, 63], "consist": [1, 10, 11, 12, 37, 47, 49], "variou": [1, 5, 8, 14, 28, 29, 39, 41, 43, 46, 58, 59, 63, 65], "handicap": 1, "instrumentproviderconfig": [1, 2, 4, 8, 9, 49, 50, 52], "instrumentprovid": [1, 2, 8, 9, 16, 31, 52, 62], "mean": [1, 2, 6, 10, 11, 14, 29, 46, 47, 51, 59], "apicli": [1, 2], "load_ids_async": [1, 2, 8], "model": [1, 2, 4, 5, 8, 9, 19, 28, 45, 46, 47, 58, 59, 62, 63, 65], "load_async": [1, 2, 8], "load_all_async": [1, 2, 8, 52, 62], "latest": [1, 2, 8, 13, 38, 45, 46, 61, 62], "load_market": 1, "debug": [1, 8, 9, 11, 12, 16, 33, 35], "interact": [1, 11, 12, 21, 40, 45, 51, 53, 58, 64], "search_instru": 1, "instrument_filt": 1, "within": [1, 6, 7, 8, 12, 13, 14, 16, 18, 19, 20, 33, 36, 42, 43, 47, 49, 52, 54, 58, 64], "get_betting_instru": 1, "market_id": [1, 23], "selection_id": [1, 23], "perform": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 16, 30, 32, 33, 36, 37, 40, 42, 43, 46, 47, 49, 51, 57, 58, 59, 60, 63], "friendli": 1, "lookup": [1, 10], "add_bulk": [1, 2, 8], "bulk": [1, 2, 8, 12, 25, 26, 53, 58], "add_curr": [1, 2, 7, 8, 15], "properti": [1, 2, 5, 6, 8, 12, 16, 19, 20, 23, 26, 35, 51, 62], "held": [1, 2, 7, 8, 26, 33, 36], "string": [1, 2, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 23, 24, 26, 28, 29, 30, 31, 33, 35, 63, 65], "find": [1, 2, 8, 23, 28, 38, 40, 52, 56, 58, 59, 60, 61, 63], "get_al": [1, 2, 8], "map": [1, 2, 8, 11, 12, 16, 17, 18, 20, 25, 28, 31, 34, 40], "immedi": [1, 2, 8, 48, 49, 50, 64], "list_al": [1, 2, 8], "load_al": [1, 2, 4, 8, 9, 49, 50, 52], "load_id": [1, 2, 4, 8, 9, 52], "betfairstreamcli": 1, "logger_adapt": 1, "message_handl": 1, "host": [1, 8, 9, 30], "port": [1, 4, 9, 30, 46, 58], "crlf": [1, 30], "encod": [1, 2, 4, 9, 30, 31], "socketcli": [1, 30], "post_connect": [1, 30], "post": [1, 6, 9, 30, 31, 33, 47, 49], "e": [1, 10, 12, 30, 34, 37, 46, 47, 49, 50, 62], "further": [1, 30, 64, 65], "reconnect": [1, 30], "betfairorderstreamcli": 1, "partition_matched_by_strategy_ref": 1, "include_overall_posit": 1, "customer_strategy_ref": 1, "betfairmarketstreamcli": 1, "callabl": [1, 2, 4, 8, 9, 10, 11, 29, 30, 31, 34, 35, 36], "flatten_tre": 1, "y": [1, 46, 54, 59, 63], "flatten": 1, "nest": 1, "each": [1, 3, 6, 8, 16, 30, 31, 34, 36, 41, 46, 51, 52, 53, 57, 58, 59, 63, 64, 65], "combin": [1, 10, 21, 42, 60, 62], "singl": [1, 2, 6, 7, 8, 9, 12, 16, 18, 21, 25, 29, 31, 32, 36, 41, 46, 58, 59, 60, 62, 63, 65], "chunk": [1, 9, 31, 34, 63], "list_lik": 1, "n": [1, 8, 10, 14, 23, 25, 28, 31], "yield": [1, 31, 37, 59, 63], "success": 1, "size": [1, 8, 9, 11, 14, 16, 18, 23, 25, 27, 46, 59, 60, 62, 63, 64], "l": 1, "binancedataclientconfig": 2, "filter_cal": [2, 4, 9], "log_warn": [2, 4, 9, 49], "routingconfig": [2, 4, 9], "api_kei": [2, 48, 49], "api_secret": [2, 48, 49], "binanceaccounttyp": [2, 49, 52], "base_url_http": [2, 49], "base_url_w": [2, 49], "u": [2, 23, 25, 30, 42, 45, 46, 51, 63], "testnet": [2, 52], "livedataclientconfig": [2, 4, 9], "binancedatacli": [2, 49], "instanc": [2, 4, 6, 8, 9, 11, 12, 15, 16, 21, 31, 32, 33, 34, 35, 36, 46, 54, 55, 59, 63, 65], "public": [2, 8, 12, 26], "binance_api_kei": [2, 49], "binance_testnet_api_kei": [2, 49], "environ": [2, 9, 35, 40, 45, 47, 48, 49, 50, 52, 55, 60], "variabl": [2, 37, 38, 48, 49, 50, 59, 63], "endpoint": [2, 11, 12, 29, 30, 49], "websocket": [2, 3, 47, 49], "construct": [2, 4, 9, 14, 42, 49, 51, 53, 58], "_fields_set": [2, 4, 9], "setstr": [2, 4, 9], "__dict__": [2, 4, 9], "__fields_set__": [2, 4, 9], "trust": [2, 4, 9], "pre": [2, 4, 9, 10, 16, 31, 33, 37, 39, 46, 55], "respect": [2, 4, 9, 43, 60], "behav": [2, 4, 9, 49], "extra": [2, 4, 9, 11, 12, 16, 33, 49], "copi": [2, 4, 8, 9, 46, 52], "abstractsetintstr": [2, 4, 9], "mappingintstrani": [2, 4, 9], "exclud": [2, 4, 9], "dictstrani": [2, 4, 9], "deep": [2, 4, 9], "duplic": [2, 4, 9, 27, 65], "choos": [2, 4, 9, 56, 61, 65], "take": [2, 4, 8, 9, 31, 37, 46, 53, 59, 62, 63, 64], "preced": [2, 4, 9], "over": [2, 4, 6, 9, 14, 20, 37, 46, 49, 59, 60, 63, 65], "you": [2, 4, 8, 9, 29, 31, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "make": [2, 4, 6, 8, 9, 12, 20, 26, 39, 42, 46, 47, 55, 58, 60, 63, 65], "by_alia": [2, 4, 9], "skip_default": [2, 4, 9], "exclude_unset": [2, 4, 9], "exclude_default": [2, 4, 9], "exclude_non": [2, 4, 9], "nautilusconfig": [2, 4, 9], "json": [2, 4, 5, 9, 30, 31, 59, 60, 62, 63], "models_as_dict": [2, 4, 9], "dumps_kwarg": [2, 4, 9], "per": [2, 4, 6, 8, 9, 11, 15, 16, 25, 28, 31, 32, 33, 36, 37, 49, 55, 57, 63, 64], "suppli": [2, 4, 8, 9, 36, 48, 49, 50], "dump": [2, 4, 6, 9], "update_forward_ref": [2, 4, 9], "localn": [2, 4, 9], "try": [2, 4, 9, 46], "forwardref": [2, 4, 9], "globaln": [2, 4, 9], "binanceexecclientconfig": 2, "clock_sync_interval_sec": 2, "900": 2, "liveexecclientconfig": [2, 4, 9, 16], "binanceexecutioncli": [2, 49], "base_ws_http": 2, "15": [2, 59], "intervel": 2, "second": [2, 8, 9, 10, 16, 18, 19, 46, 60], "sync": 2, "server": [2, 4, 30, 43, 46, 65], "get_cached_binance_http_cli": [2, 52], "secret": [2, 52], "base_url": 2, "is_testnet": [2, 52], "is_u": 2, "url": [2, 30], "get_cached_binance_spot_instrument_provid": 2, "binancespotinstrumentprovid": 2, "get_cached_binance_futures_instrument_provid": 2, "binancefuturesinstrumentprovid": [2, 52], "binancelivedataclientfactori": [2, 49], "binancespotdatacli": 2, "binancefuturesdatacli": 2, "binanceliveexecclientfactori": [2, 49], "binancespotexecutioncli": 2, "binancefuturesexecutioncli": 2, "binanceratelimittyp": 2, "binanceratelimitinterv": 2, "interv": [2, 8, 9, 11, 16, 31, 33, 36], "binanceexchangefiltertyp": 2, "binancesymbolfiltertyp": 2, "binanceordersid": 2, "binanceexecutiontyp": 2, "binanceorderstatu": 2, "binancebar": [2, 49], "high": [2, 6, 8, 11, 12, 14, 16, 18, 33, 36, 40, 42, 43, 47, 58, 60], "low": [2, 6, 10, 14, 18, 30, 36, 49, 51], "volum": [2, 6, 11, 18, 19, 25, 49, 60, 63], "quote_volum": [2, 25], "taker_buy_base_volum": 2, "taker_buy_quote_volum": 2, "aggreg": [2, 18, 60], "doc": [2, 9, 37, 40, 46, 49, 51, 61], "github": [2, 6], "io": [2, 38, 46], "apidoc": 2, "en": [2, 8, 10, 21, 38], "kline": 2, "candlestick": 2, "pars": [2, 9, 17, 18, 21, 24, 31, 49, 52, 54, 59, 63], "is_single_pric": [2, 18], "ohlc": [2, 18], "binancetick": [2, 49], "price_chang": 2, "price_change_perc": 2, "weighted_avg_pric": 2, "last_pric": 2, "open_pric": 2, "high_pric": [2, 14], "low_pric": [2, 14], "open_time_m": 2, "close_time_m": 2, "first_id": 2, "last_id": 2, "prev_close_pric": 2, "bid_pric": [2, 59, 63], "bid_qti": 2, "ask_pric": [2, 59, 63], "ask_qti": 2, "24hr": [2, 49], "statist": [2, 47, 58], "percent": 2, "weight": [2, 58], "previou": [2, 14, 36], "millisecond": [2, 8, 9, 10, 16, 31, 36, 51, 60], "first": [2, 26, 29, 31, 34, 38, 44, 45, 46, 47, 49, 54, 60], "time": [2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 25, 26, 29, 30, 31, 36, 41, 42, 43, 46, 47, 49, 57, 58, 60, 63], "futures_usdt": [2, 49, 52], "binancefuturescontracttyp": 2, "deriv": [2, 6, 49, 57], "contract": [2, 6, 23, 24, 42, 49, 50, 62, 64], "binancefuturescontractstatu": 2, "binancefuturesordertyp": 2, "binancefuturespositionsid": 2, "binancefuturestimeinforc": 2, "forc": [2, 8, 12, 20, 26, 47], "binancefuturesworkingtyp": 2, "work": [2, 38, 40, 46, 49, 51, 54, 58, 59, 62, 64, 65], "binancefuturesmargintyp": 2, "binancefuturespositionupdatereason": 2, "binancefutureseventtyp": 2, "binancefuturesmarkpriceupd": 2, "mark": [2, 14, 29, 49, 51, 58, 64], "index": [2, 6, 7, 8, 10, 19, 24, 25, 31, 47, 64], "estimated_settl": 2, "funding_r": 2, "ts_next_fund": 2, "fund": [2, 49], "estim": 2, "settl": [2, 23], "hour": [2, 18, 19, 60], "settlement": [2, 23, 62], "next": [2, 6, 8, 10, 11, 31, 36, 37, 46, 59], "binancespotpermiss": 2, "permiss": [2, 48, 49, 50], "binancespotsymbolstatu": 2, "binancespottimeinforc": 2, "binancespoteventtyp": 2, "binancespotordertyp": 2, "binancespotorderstatu": 2, "brokerag": [3, 30, 51], "lower": [3, 14, 29, 40, 46, 49, 64], "rest": [3, 6, 11, 12, 47, 48, 49], "built": [3, 8, 16, 22, 24, 34, 40, 42, 46, 49, 50, 57, 64, 65], "top": [3, 11, 12, 18, 25, 36, 37, 43, 52], "interactivebrokersdataclientconfig": [4, 50], "trading_mod": 4, "liter": 4, "paper": [4, 58, 60], "001": [4, 9, 21, 65], "gateway_host": 4, "127": 4, "gateway_port": 4, "client_id": [4, 6, 8, 9, 11, 12, 16, 31, 36, 49, 52, 54], "start_gatewai": 4, "read_only_api": 4, "interactivebrokersdatacli": [4, 50], "tws_usernam": [4, 50], "tws_password": [4, 50], "hostnam": 4, "gatewai": [4, 49, 50], "intern": [4, 6, 8, 9, 11, 14, 16, 17, 18, 19, 23, 25, 29, 30, 33, 41, 46, 59, 65], "tw": [4, 50], "docker": [4, 47, 50], "contain": [4, 5, 6, 7, 8, 10, 12, 18, 20, 21, 24, 25, 26, 27, 31, 36, 38, 41, 46, 49, 50, 53, 56, 58, 59, 61, 63], "interactivebrokersexecclientconfig": 4, "interactivebrokersexeccli": 4, "group": [5, 6, 9, 10, 11, 12, 16, 19, 33, 34, 36, 53, 57, 58], "relat": [5, 6, 7, 10, 11, 12, 14, 19, 26, 40, 58, 62], "portfolioanalyz": [5, 32, 57], "track": 5, "metric": [5, 14], "register_statist": [5, 57], "portfoliostatist": [5, 57], "deregister_statist": 5, "deregist": [5, 7, 8, 11, 12, 16, 29, 36], "seri": [5, 10, 41, 57], "calculate_statist": 5, "calcul": [5, 6, 7, 10, 14, 20, 23, 27, 29, 32, 33, 57], "add_posit": [5, 7, 15], "add_trad": 5, "position_id": [5, 7, 12, 15, 20, 26, 27, 36, 46, 55], "realized_pnl": [5, 20, 27, 57], "realiz": [5, 20, 27, 42, 57], "add_return": 5, "float": [5, 6, 9, 14, 16, 23, 24, 28, 33, 46, 57], "entri": [5, 8, 20, 27, 33, 46, 53, 63, 64], "total_pnl": [5, 27], "total_pnl_percentag": 5, "percentag": [5, 8, 10, 23, 33, 62, 64], "get_performance_stats_pnl": 5, "get_performance_stats_return": 5, "get_performance_stats_gener": 5, "get_stats_pnls_format": 5, "backtest": [5, 8, 11, 12, 25, 31, 35, 36, 38, 45, 47, 54, 55, 58, 63, 65], "format": [5, 9, 10, 18, 21, 24, 25, 31, 46, 59, 63], "print": [5, 9, 10, 25], "footer": 5, "get_stats_returns_format": 5, "get_stats_general_format": 5, "reportprovid": 5, "generate_orders_report": [5, 36], "generate_order_fills_report": [5, 36, 46], "generate_positions_report": [5, 36, 46], "generate_account_report": [5, 36, 46], "abstract": [5, 6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 25, 26, 31, 32, 33, 34, 43, 58, 64], "serializ": 5, "primit": [5, 34, 38, 40, 42], "calculate_from_return": 5, "calculate_from_realized_pnl": [5, 57], "calculate_from_ord": 5, "calculate_from_posit": 5, "longratio": 5, "precis": [5, 6, 11, 15, 17, 18, 23, 24, 25, 27, 28], "2": [5, 8, 14, 15, 19, 25, 31, 45, 46], "output": [5, 8, 14, 43, 57], "avglos": 5, "maxlos": 5, "minlos": 5, "minimum": [5, 8, 14, 23, 28, 30, 50, 62], "profitfactor": 5, "annual": 5, "returnsaverag": 5, "returnsaverageloss": 5, "lose": [5, 15, 31], "returnsaveragewin": 5, "returnsvolatil": 5, "period": [5, 14, 21, 37, 62], "252": 5, "downsampl": 5, "daili": [5, 49], "bin": [5, 8, 18], "dai": [5, 8, 12, 14, 18, 19, 20, 26, 36, 60, 64], "riskreturnratio": 5, "sharperatio": 5, "sortinoratio": 5, "winrat": [5, 57], "avgwinn": 5, "maxwinn": 5, "minwinn": 5, "csvtickdataload": 6, "panda": [6, 10, 31, 59, 63], "file": [6, 9, 31, 35, 39, 40, 42, 45, 46, 59], "file_path": 6, "path": [6, 9, 31, 46, 55, 59, 63], "like": [6, 17, 31, 39, 46, 47, 59, 63, 65], "csvbardataload": 6, "tardistradedataload": 6, "tardi": 6, "tardisquotedataload": 6, "parquettickdataload": 6, "parquet": [6, 31, 34, 46, 59, 63], "parquetbardataload": 6, "testinstrumentprovid": [6, 59, 62, 63], "templat": 6, "adabtc_bin": 6, "currencypair": [6, 23, 62], "binanc": [6, 21, 51, 52, 62, 64, 65], "ada": 6, "btc": [6, 50, 64], "btcusdt_bin": 6, "btcusdt": [6, 21, 49, 52, 62, 64], "ethusdt_bin": 6, "ethusdt": [6, 52, 62, 64, 65], "ethusdt_perp_bin": 6, "cryptoperpetu": [6, 23, 62], "perp": [6, 49, 52, 62, 64, 65], "btcusdt_future_bin": 6, "expiri": [6, 23, 26], "cryptofutur": [6, 23, 62], "xbtusd_bitmex": 6, "bitmex": 6, "xbt": 6, "usd": [6, 21, 24, 41, 46, 50, 59, 62, 63, 64], "perpetu": [6, 49, 51, 62, 64], "ethusd_bitmex": 6, "eth": 6, "swap": [6, 19, 23, 62], "default_fx_cci": [6, 59, 62, 63], "testdataprovid": 6, "branch": [6, 13], "develop": [6, 13, 14, 39, 43, 45, 46, 47, 58], "either": [6, 8, 21, 24, 25, 36, 43, 48, 49, 50, 51, 52, 55, 60, 64], "test": [6, 8, 36, 37, 41, 42, 45, 46, 51, 58, 59, 61, 62, 63], "repo": 6, "nautilustrad": [6, 13, 38, 40, 44, 46, 48, 49, 50, 51, 52, 56, 58, 61, 63, 64, 65], "bardatawrangl": 6, "build": [6, 7, 9, 11, 16, 37, 40, 45, 46, 48, 49, 50, 53, 58, 64, 65], "process": [6, 10, 11, 12, 16, 29, 30, 31, 33, 63, 64], "default_volum": 6, "1000000": [6, 24, 59], "ts_init_delta": 6, "dataset": [6, 9, 62], "expect": [6, 10, 18, 21, 30, 35, 36, 38, 42, 46, 51, 57, 58], "column": [6, 31], "simul": [6, 46, 58], "latenc": [6, 30], "quotetickdatawrangl": 6, "give": [6, 29, 36, 47], "bid_siz": [6, 18, 59, 63], "ask_siz": [6, 18, 59, 63], "cannot": [6, 9, 11, 12, 14, 16, 34, 47, 52, 64], "process_bar_data": 6, "bid_data": 6, "ask_data": 6, "random_se": 6, "is_raw": 6, "avail": [6, 8, 9, 28, 36, 38, 45, 46, 48, 49, 50, 52, 60, 62, 63, 64], "random": [6, 10], "seed": [6, 20], "shuffl": 6, "won": [6, 8, 49], "scale": [6, 18], "fix": [6, 12, 17, 18, 20, 21, 24, 36, 47, 64], "tradetickdatawrangl": 6, "backtestdatacli": 6, "clientid": [6, 8, 11, 12, 16, 21, 36, 49, 52, 54], "datacli": [6, 11, 16, 52], "backtestmarketdatacli": 6, "marketdatacli": [6, 11, 16], "backtestengin": [6, 9, 15, 46, 60], "backtestengineconfig": [6, 9, 38, 46, 59], "add_actor": [6, 36], "actor": [6, 9, 35, 36, 47, 49, 52, 54, 58, 60, 62], "add_data": 6, "element": [6, 7], "have": [6, 8, 9, 10, 20, 24, 29, 32, 36, 37, 43, 46, 47, 48, 49, 50, 53, 55, 58, 59, 62, 63, 65], "assum": [6, 8, 10, 38, 49, 58], "same": [6, 8, 16, 20, 29, 36, 42, 47, 51, 55, 60, 62, 65], "vari": [6, 24, 64], "could": [6, 14, 16, 20, 22, 29, 31, 36, 37, 38, 39, 43, 52, 54, 63], "incorrect": 6, "logic": [6, 11, 12, 22, 29, 37, 47, 55, 58, 62], "add_instru": [6, 7, 15], "its": [6, 7, 9, 11, 12, 26, 30, 34, 36, 40, 42, 43, 47, 55, 62, 63], "would": [6, 8, 25, 26, 29, 31, 43, 46, 57, 58, 63, 65], "cash": [6, 9, 12, 16, 19, 23, 46, 50, 60, 62], "invalidconfigur": 6, "add_strategi": [6, 36], "add_venu": 6, "fillmodel": 6, "fill_model": 6, "latencymodel": 6, "latency_model": 6, "frozen_account": [6, 9], "reject_stop_ord": [6, 9], "simulatedexchang": [6, 64], "hedg": [6, 7, 36, 59], "net": [6, 12, 20, 27, 32, 36, 46], "simulationmodul": 6, "frozen": 6, "submiss": [6, 55], "backtest_end": 6, "backtest_start": 6, "change_fill_model": 6, "clear_data": 6, "releas": [6, 7, 13, 35], "resourc": [6, 8, 35, 36], "dump_pickled_data": 6, "pickl": 6, "end_stream": 6, "follow": [6, 8, 14, 24, 30, 37, 38, 39, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64], "sequenc": 6, "turn": [6, 57], "analysi": [6, 9, 14, 58], "get_result": 6, "backtestresult": [6, 46], "instance_id": [6, 8, 9, 16, 35], "uniqu": [6, 8, 9, 10, 18, 21, 25, 62, 65], "iter": [6, 8, 14], "kernel": [6, 9, 58], "nautiluskernel": [6, 9, 35, 58], "list_actor": 6, "list_strategi": 6, "list_venu": 6, "load_pickled_data": 6, "It": [6, 8, 16, 18, 21, 36, 40, 42, 45, 47, 49, 51, 54, 55, 57, 59, 62, 63], "highli": [6, 38, 42, 45, 47], "advis": [6, 51, 55], "obtain": 6, "through": [6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 25, 26, 29, 33, 34, 36, 38, 40, 42, 44, 47, 52, 55, 59, 60, 62, 63], "direct": [6, 14, 20, 27, 29, 64, 65], "access": [6, 7, 42, 47, 51], "assumpt": 6, "inherit": [6, 8, 9, 30, 36, 57, 65], "successfulli": [6, 49], "sort": [6, 8, 10, 31, 59], "prior": [6, 7, 29, 30], "machine_id": [6, 8, 16, 35], "machin": [6, 8, 16, 35, 44, 47], "portfoliofacad": [6, 16, 32, 33, 35, 36], "run_config_id": 6, "At": [6, 50], "utc": [6, 8, 10, 11, 26, 36, 59, 63, 64], "token": 6, "backtestrunconfig": [6, 9, 46, 59], "run_finish": 6, "finish": 6, "run_id": 6, "run_start": 6, "run_stream": 6, "more": [6, 8, 10, 13, 23, 25, 29, 37, 38, 46, 47, 49, 56, 59, 60, 62, 63, 64], "fit": [6, 42], "memori": [6, 9, 40, 42, 47, 58, 63], "util": [6, 37, 40, 47, 55, 58, 60], "batch": [6, 9, 33, 46], "testclock": [6, 8], "financi": [6, 18, 19, 21, 23, 24, 27, 28, 63], "multipl": [6, 14, 25, 34, 37, 46, 47, 59, 60, 63], "enforc": 6, "invalid": [6, 10, 26, 58, 62], "adjust_account": 6, "adjust": [6, 14, 46], "best_ask_pric": [6, 25], "best": [6, 18, 25, 40, 53, 61, 64], "best_bid_pric": [6, 25], "wire": [6, 8, 20, 36, 60, 65], "exec_cli": [6, 9, 48, 49, 50], "backtestexeccli": 6, "get_book": 6, "orderbook": [6, 7, 8, 25, 34, 36], "get_matching_engin": 6, "get_open_ask_ord": 6, "get_open_bid_ord": 6, "get_open_ord": 6, "initialize_account": 6, "is_frozen_account": 6, "now_n": [6, 8], "along": [6, 64], "now": [6, 8, 36, 46, 47, 54, 55, 60, 63], "process_bar": 6, "dynam": [6, 31, 40], "auction": 6, "process_order_book": 6, "orderbookdata": [6, 8, 25, 36], "process_quote_tick": 6, "process_trade_tick": 6, "register_cli": [6, 11, 12, 16], "tradingcommand": [6, 12, 16], "set_fill_model": 6, "set_latency_model": 6, "executioncli": [6, 11, 12, 16, 32, 52, 55], "reconcili": [6, 9, 12, 16, 20], "prob_fill_on_limit": 6, "prob_fill_on_stop": 6, "prob_slippag": 6, "probabilist": 6, "probabl": [6, 18], "slippag": [6, 26], "slip": 6, "is_limit_fil": 6, "indic": [6, 7, 8, 9, 10, 18, 27, 32, 36, 46, 58, 64], "is_slip": 6, "is_stop_fil": 6, "aggress": [6, 26], "base_latency_nano": 6, "nanoseconds_in_millisecond": 6, "insert_latency_nano": 6, "update_latency_nano": 6, "cancel_latency_nano": 6, "o": [6, 47, 52, 59, 63], "1_000_000_000": 6, "insert": [6, 8, 10], "reach": [6, 8, 11, 20, 27, 64], "fxrolloverinterestmodul": 6, "rate_data": 6, "log_diagnost": 6, "diagnost": 6, "out": [6, 8, 11, 12, 15, 16, 46, 47, 49, 57, 63], "register_exchang": 6, "concret": [6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 25, 26, 33, 34, 36], "subclass": [6, 7, 8, 10, 11, 12, 14, 16, 18, 20, 25, 26, 31, 32, 33, 34, 36, 54, 62], "backtestnod": [6, 46, 59, 60], "orchestr": [6, 11, 12, 46], "get_engin": [6, 46], "synchron": [6, 46, 58], "elapsed_tim": 6, "total_ev": 6, "total_ord": 6, "total_posit": 6, "stats_pnl": 6, "stats_return": 6, "complet": [6, 11, 16, 29, 32, 33, 39, 42, 46, 49, 65], "ensure_plot": 6, "func": [6, 31], "decor": 6, "plot": [6, 14], "librari": [6, 8, 40, 42, 45, 47, 58], "instal": [6, 39, 44, 46, 47, 50, 58], "better": [6, 59, 63, 64], "about": [6, 18, 46, 58, 59, 63, 64], "how": [6, 9, 36, 40, 42, 46, 53, 58, 59, 64, 65], "common": [7, 16, 35, 40, 48, 49, 50, 52, 53, 55, 59], "infrastructur": [7, 58, 60], "central": [7, 11, 12, 14, 21, 37, 59, 62, 63], "mani": [7, 8, 11, 12, 22, 30, 31, 38, 42, 46, 47, 49, 58, 59, 60, 63], "cachedatabas": [7, 9, 15], "cacheconfig": [7, 9, 35], "execut": [7, 8, 9, 11, 20, 21, 26, 33, 35, 36, 46, 47, 48, 49, 50, 51, 53, 58, 60, 62], "bypass": [7, 8, 9, 16, 33, 35], "persist": [7, 8, 12, 15, 16, 36, 46, 47, 58, 59, 63], "account_for_venu": 7, "add_account": [7, 15], "add_bar": 7, "add_ord": [7, 15], "replac": [7, 9, 31, 36], "emul": [7, 8, 12, 20, 26, 35], "being": [7, 8, 21, 29, 36, 38, 40, 42, 53, 55, 64, 65], "transform": [7, 34, 55], "add_order_book": 7, "order_book": [7, 8, 36], "virtual": [7, 39, 45], "add_position_id": 7, "add_quote_tick": 7, "add_submit_order_command": [7, 15], "add_submit_order_list_command": [7, 15], "add_tick": 7, "add_trade_tick": 7, "revers": [7, 25], "most": [7, 8, 25, 29, 36, 42, 47, 48, 49, 50, 55, 58, 62], "recent": [7, 8, 36], "bar_capac": [7, 9], "capac": [7, 8, 14, 36], "bar_count": 7, "book_update_count": 7, "Will": [7, 8, 9, 17, 29, 30, 36], "build_index": 7, "re": [7, 10, 29, 39, 40, 43, 46, 47, 49, 64, 65], "cache_account": 7, "cache_command": 7, "cache_curr": 7, "cache_instru": 7, "cache_ord": 7, "cache_posit": 7, "check_integr": [7, 12, 16, 25], "produc": [7, 8, 14, 29, 40, 58, 62], "els": [7, 10, 11, 12, 16, 17, 18, 27, 32, 36, 43, 46], "check_residu": [7, 12, 16, 36], "residu": [7, 9, 12, 16, 36], "warn": [7, 8, 9, 12, 16, 36, 51, 55], "consid": [7, 8, 12, 16, 18, 26, 29, 42, 49, 55, 58, 60, 61], "clear_cach": 7, "without": [7, 8, 21, 36, 46, 47], "rebuild": 7, "clear_index": 7, "client_order_ids_clos": 7, "client_order_ids_emul": 7, "client_order_ids_inflight": 7, "flight": [7, 9, 16, 26], "client_order_ids_open": 7, "delete_strategi": [7, 15], "flush_db": [7, 12, 16], "flush": [7, 9, 12, 15, 16, 31], "perman": [7, 12, 16], "remov": [7, 8, 12, 16, 43, 64], "loss": [7, 8, 12, 16, 33, 53, 64], "get_xrat": 7, "mid": [7, 14, 18, 25, 46, 60, 64], "has_bar": 7, "has_order_book": 7, "has_quote_tick": 7, "has_tick": 7, "has_trade_tick": 7, "correspond": [7, 8, 12, 14, 20, 21, 36, 40, 48, 49, 50, 63], "is_order_clos": 7, "is_order_emul": [7, 55], "is_order_inflight": 7, "is_order_open": 7, "is_position_clos": 7, "is_position_open": 7, "load_account": [7, 15], "load_instru": [7, 15], "load_ord": [7, 15], "load_posit": [7, 15], "load_strategi": [7, 15], "load_submit_order_command": [7, 15], "load_submit_order_list_command": [7, 15], "orderlistid": [7, 12, 15, 20, 21, 26], "order_list_id": [7, 12, 15, 20, 26, 53], "order_exist": 7, "particular": [7, 8, 9, 16, 19, 24, 29, 43, 52, 62], "orders_clos": 7, "orders_closed_count": 7, "orders_emul": [7, 55], "orders_emulated_count": [7, 55], "orders_for_posit": 7, "orders_inflight": 7, "orders_inflight_count": 7, "orders_open": 7, "orders_open_count": 7, "orders_total_count": 7, "position_closed_id": 7, "position_exist": 7, "position_for_ord": 7, "position_open_id": 7, "position_snapshot": 7, "positions_clos": 7, "positions_closed_count": 7, "positions_open": 7, "positions_open_count": 7, "positions_total_count": 7, "quote_tick": [7, 59, 63], "quote_tick_count": 7, "snapshot_posit": 7, "append": [7, 8, 49, 51], "strategy_id_for_ord": 7, "strategy_id_for_posit": 7, "tick_capac": [7, 9], "ticker_count": 7, "trade_tick": 7, "trade_tick_count": 7, "update_account": [7, 15, 32], "update_ord": [7, 15, 32], "update_posit": [7, 15, 32], "update_strategi": [7, 15], "load_curr": [7, 15], "facad": [7, 32], "part": [8, 37, 38, 58, 60, 62, 65], "assembl": [8, 58], "framework": [8, 10, 36, 40, 43, 60], "domain": [8, 10, 18, 19, 20, 22, 24, 36, 58], "concept": [8, 40, 49, 58], "introduc": [8, 40, 47, 61], "abov": [8, 14, 29, 43, 46, 55, 58, 60, 62, 65], "core": [8, 9, 11, 12, 29, 35, 40, 42, 46, 47, 54, 55, 59, 62, 63, 64], "layer": [8, 10, 11, 12, 58, 60], "control": [8, 55], "own": [8, 14, 34, 36, 40, 42, 51], "entir": [8, 10, 11, 12, 25, 36, 43, 47, 55, 57, 62], "stand": [8, 36, 64], "alon": [8, 36], "wai": [8, 15, 22, 29, 36, 41, 46, 47, 49, 51, 53, 54, 55, 58, 60, 62, 64], "usag": [8, 36], "thei": [8, 31, 36, 43, 49, 53, 55, 56, 61, 64], "platform": [8, 11, 12, 13, 14, 19, 26, 33, 36, 42, 45, 47, 49, 55, 56, 58, 60, 61, 62, 64, 65], "attempt": [8, 30, 36, 37, 51, 58], "actorconfig": [8, 9], "deregister_warning_ev": [8, 36], "handle_bar": [8, 14, 36], "on_bar": [8, 36], "individu": [8, 25, 31, 36, 49, 55], "handle_data": [8, 36], "on_data": [8, 36, 49, 54], "handle_ev": [8, 36], "on_ev": [8, 36, 46], "handle_historical_data": [8, 36], "on_historical_data": [8, 36], "handle_instru": [8, 36], "on_instru": [8, 36, 62], "handle_instrument_close_pric": [8, 36], "on_instrument_close_pric": [8, 36], "handle_instrument_status_upd": [8, 36], "on_instrument_status_upd": [8, 36], "handle_order_book": [8, 36], "on_order_book": [8, 36], "handle_order_book_delta": [8, 36], "on_order_book_delta": [8, 36], "handle_quote_tick": [8, 11, 14, 36, 46], "on_quote_tick": [8, 36, 46], "handle_tick": [8, 36], "on_tick": [8, 36], "handle_trade_tick": [8, 11, 14, 36], "on_trade_tick": [8, 36], "handle_venue_status_upd": [8, 36], "venuestatusupd": [8, 18, 36], "on_venue_status_upd": [8, 36], "overridden": [8, 36], "cleanup": [8, 36], "intent": [8, 36, 43], "onc": [8, 11, 21, 26, 29, 36, 39, 55, 59, 63, 64, 65], "session": [8, 30, 36, 43, 57, 64], "recommend": [8, 36, 38, 39, 40, 44, 45, 46, 62], "paus": [8, 36], "done": [8, 36, 63], "publish_data": [8, 36], "publish_sign": [8, 36], "signal": [8, 14, 31, 35, 36, 46], "setup": [8, 36, 46], "register_bas": [8, 36], "register_warning_ev": [8, 36], "infer": [8, 24, 34, 36, 49, 52], "less": [8, 18, 24, 36, 63], "alwai": [8, 36, 37, 58, 62], "dataengin": [8, 9, 11, 16, 18, 35, 36, 54, 62], "request_data": [8, 36], "subscribe_data": [8, 36, 49, 54], "sent": [8, 11, 20, 26, 29, 30, 36, 55], "interval_m": [8, 36], "1000": [8, 9, 30, 36, 46, 65], "maintain": [8, 25, 36, 42, 43, 46, 47, 58], "becaus": [8, 36, 42, 49], "affect": [8, 30, 36], "subscribe_venue_status_upd": [8, 36], "to_importable_config": [8, 36], "importableactorconfig": [8, 9, 35], "import": [8, 9, 19, 35, 36, 37, 40, 46, 52, 54, 57, 58, 62, 63, 64, 65], "unsubscribe_data": [8, 36], "previous": [8, 12, 16, 36], "unsubscribe_venue_status_upd": [8, 36], "activ": [8, 9, 11, 12, 16, 29, 33, 38, 49, 55, 64], "cancel_tim": 8, "label": [8, 10, 54], "local_now": 8, "tzinfo": 8, "tz": [8, 10, 36, 59, 63], "local": [8, 20, 23, 26, 36, 40, 51, 55], "timezon": [8, 10, 36, 41], "target": 8, "awar": [8, 10, 36, 40], "next_time_n": 8, "register_default_handl": 8, "handler": [8, 11, 29, 30, 31, 35, 36, 49, 52, 54], "timeev": 8, "set_time_alert": 8, "alert_tim": 8, "callback": [8, 10, 11, 29, 35, 36, 49, 52], "alert": 8, "set_time_alert_n": 8, "alert_time_n": 8, "set_tim": 8, "timedelta": [8, 9, 11, 16, 33], "start_tim": [8, 9, 59], "stop_tim": 8, "until": [8, 16, 55, 64], "repeat": 8, "indefinit": 8, "set_timer_n": 8, "interval_n": [8, 11], "start_time_n": 8, "stop_time_n": 8, "timer_count": 8, "timer_nam": 8, "wikipedia": [8, 10, 21], "wiki": [8, 10, 21], "unix_tim": 8, "timestamp_m": 8, "m": [8, 10, 59, 63], "timestamp_n": [8, 52], "utc_now": 8, "monoton": [8, 54], "set_offset": 8, "int64_t": [8, 18, 24, 34], "offset_n": 8, "offset": [8, 12, 26], "subsequ": 8, "shouldn": [8, 29], "necessari": [8, 18, 29, 40, 42, 46, 49, 55, 62, 64], "unit": [8, 23, 24, 33, 42, 43], "advance_tim": 8, "to_time_n": 8, "advanc": [8, 29, 47, 64], "timeeventhandl": 8, "chronolog": 8, "component_id": [8, 9], "component_nam": 8, "happen": 8, "constructor": [8, 55, 62, 65], "thu": [8, 18, 47], "pre_initi": 8, "taken": [8, 9, 37, 42, 49], "__name__": [8, 9], "componentfsmfactori": 8, "finit": 8, "get_state_transition_t": 8, "transit": [8, 10, 22, 42], "tabl": [8, 10, 31, 34, 55], "c": [8, 10, 29, 37, 38, 40, 42, 45, 47, 50, 55, 58], "discret": 8, "3": [8, 14, 19, 25, 31, 41, 45], "4": [8, 10, 19, 31], "5": [8, 12, 14, 19, 20, 21, 24, 31, 36, 64], "8": [8, 17, 19, 30, 31], "9": [8, 17, 19, 24, 45], "11": [8, 19], "12": [8, 19, 41, 46], "13": [8, 19], "caus": [8, 43, 49], "componenttrigg": 8, "threshold": [8, 9, 11, 16, 18, 46], "loglevel": [8, 35, 38], "20": [8, 59, 64, 65], "30": [8, 41], "40": 8, "critic": [8, 37, 42, 43, 47], "50": [8, 37, 64], "constant": [8, 10, 14, 58], "logcolor": 8, "normal": [8, 29, 38, 49, 51, 55], "green": 8, "blue": 8, "yellow": 8, "red": 8, "intenum": 8, "as_integer_ratio": 8, "integ": [8, 10, 16, 18, 23, 24, 33], "ratio": [8, 59, 63], "whose": 8, "exactli": [8, 20, 55, 62], "origin": [8, 12, 21, 26, 36, 47, 55], "denomin": [8, 17, 24], "bit_count": 8, "ones": 8, "binari": [8, 45, 47, 58], "absolut": [8, 10, 31], "known": [8, 31, 64], "popul": 8, "0b1101": 8, "bit_length": 8, "bit": [8, 10, 45], "37": 8, "0b100101": 8, "conjug": 8, "complex": [8, 10, 34, 38, 46, 47, 60], "ration": 8, "lowest": [8, 14, 42, 56, 58, 61], "from_byt": 8, "byteord": 8, "big": 8, "sign": [8, 25], "arrai": [8, 10], "hold": [8, 10, 12, 47, 55, 58], "buffer": [8, 9, 16], "protocol": [8, 9, 12, 21, 31, 36], "bytearrai": 8, "exampl": [8, 18, 21, 24, 29, 31, 34, 43, 45, 46, 49, 56, 57, 60, 61, 62, 63, 64, 65], "signific": 8, "begin": [8, 29, 46], "littl": [8, 43, 46], "To": [8, 37, 42, 43, 45, 46, 48, 49, 50, 51, 58, 59], "nativ": [8, 23, 36, 47, 49, 51, 62], "sy": 8, "two": [8, 14, 21, 23, 28, 37, 48, 49, 50, 52, 53, 60, 63, 64, 65], "complement": 8, "imag": [8, 46], "imaginari": 8, "numer": 8, "real": [8, 25, 47, 58, 60], "to_byt": 8, "overflowerror": [8, 17, 24, 25], "orderfactori": [8, 36, 53, 55, 64], "initial_count": 8, "tag": [8, 9, 20, 21, 26, 35, 36, 64], "bracket_limit_entri": 8, "entry_pric": 8, "sl_trigger_pric": 8, "tp_price": 8, "timeinforc": [8, 12, 20, 26, 64], "time_in_forc": [8, 12, 20, 26, 64], "gtc": [8, 12, 20, 26, 64], "expire_tim": [8, 12, 26, 64], "post_onli": [8, 12, 20, 26, 64], "triggertyp": [8, 12, 20, 26, 55, 64], "emulation_trigg": [8, 20, 26, 55], "contingencytyp": [8, 12, 20, 26], "contingency_typ": [8, 12, 20, 26], "ouo": 8, "orderlist": [8, 12, 26, 36], "bracket": 8, "parent": [8, 12, 20, 23, 26, 53, 64], "stopmarket": 8, "child": [8, 12, 26, 53, 64], "profit": [8, 53, 64], "gtd": [8, 12, 20, 26, 47, 64], "well": [8, 10, 26, 29, 38, 46, 58, 62, 63], "tp": 8, "sl": 8, "conting": [8, 12, 20, 26, 47, 55], "tif": 8, "bracket_market_entri": 8, "bracket_stop_limit_entry_stop_limit_tp": 8, "entry_trigger_pric": 8, "tp_trigger_pric": 8, "stoplimit": [8, 20], "reduce_onli": [8, 12, 20, 26, 64], "display_qti": [8, 12, 26, 64], "ioc": [8, 12, 20, 26, 47, 64], "fok": [8, 12, 20, 26, 47, 64], "at_the_open": [8, 12, 20, 26, 47, 64], "at_the_clos": [8, 12, 20, 26, 47, 64], "carri": [8, 12, 20, 26, 57], "reduc": [8, 12, 14, 16, 20, 26, 33, 42, 43, 47, 53, 59], "instruct": [8, 12, 20, 26, 36, 46, 47, 51, 53], "displai": [8, 12, 26, 57], "iceberg": [8, 12, 26, 47, 64], "arbitrari": [8, 20, 26, 46, 57], "delimit": [8, 20, 24, 26, 30], "epoch": [8, 26], "greater": [8, 17, 24, 25, 26, 31, 40, 42], "limit_if_touch": [8, 49, 55, 60, 64], "trigger_typ": [8, 12, 26, 64], "limitiftouchedord": [8, 26], "touch": 8, "lit": [8, 26], "condit": [8, 24, 25, 26, 36, 42, 43, 47, 52, 58, 64], "often": [8, 20, 43, 58, 64, 65], "market_if_touch": [8, 49, 55, 60, 64], "marketiftouchedord": [8, 26, 64], "mit": [8, 26], "market_to_limit": [8, 55, 60, 64], "markettolimitord": [8, 26, 64], "set_count": 8, "stop_limit": [8, 36, 49, 55, 60, 64], "stoplimitord": [8, 26, 64], "stop_market": [8, 49, 53, 55, 60, 64], "stopmarketord": [8, 26, 64], "trailing_stop_limit": [8, 55, 60, 64], "limit_offset": [8, 12, 26, 64], "trailing_offset": [8, 12, 26, 49, 64], "trailingoffsettyp": [8, 12, 26, 64], "trailing_offset_typ": [8, 12, 26, 64], "trailingstoplimitord": [8, 26, 64], "trail": [8, 12, 37], "typic": [8, 14, 26, 52, 62, 63, 64], "trailing_stop_market": [8, 49, 55, 60, 64], "trailingstopmarketord": [8, 26, 64], "clientorderidgener": 8, "identifiergener": 8, "counter": 8, "positionidgener": 8, "flip": 8, "f": [8, 31, 38, 46, 52, 59, 63], "get_count": 8, "level_stdout": 8, "maxsiz": 8, "10000": [8, 9, 64], "stdout": [8, 9, 35], "change_clock": 8, "get_run_task": 8, "task": [8, 16], "is_bypass": [8, 16, 33], "last_block": 8, "block": [8, 9, 16, 31, 40, 42, 43, 63, 64, 65], "register_sink": 8, "sink": [8, 35], "futur": [8, 13, 19, 42, 47, 49, 50, 51, 52, 55, 61, 62, 64], "adapt": [8, 30, 35, 45, 47, 48, 49, 50, 51, 54, 58, 60, 62], "msg": [8, 29, 30], "annot": 8, "record": [8, 30], "ex": [8, 45], "stack": [8, 11, 12, 58], "trace": [8, 38], "get_logg": [8, 16], "encapsul": 8, "log_memori": 8, "nautilus_head": 8, "strip": 8, "coroutin": 8, "infinit": 8, "await": [8, 9, 52, 62], "put": 8, "item": [8, 10, 50], "unlik": 8, "reliabl": [8, 47, 58], "know": [8, 46, 55, 59], "qsize": [8, 9, 16], "your": [8, 37, 40, 44, 45, 46, 48, 49, 50, 51, 54, 57, 58, 63, 65], "thread": [8, 16, 29, 45, 47, 58], "interrupt": 8, "safe": [8, 29, 37, 38, 42, 47, 58], "full": [8, 16, 26, 46, 49, 51, 52, 55, 61, 62, 64], "never": [8, 26, 64], "get_nowait": 8, "queueempti": 8, "peek_back": 8, "pop": 8, "peek_front": 8, "front": 8, "peek_index": 8, "indexerror": 8, "onto": [8, 42, 46], "slot": 8, "put_nowait": 8, "queueful": 8, "to_list": 8, "output_send": 8, "output_drop": 8, "drop": [8, 10], "throttl": 8, "exce": 8, "unbound": 8, "bound": [8, 10], "upstream": 8, "is_limit": 8, "recv_count": 8, "sent_count": [8, 29], "livetim": 8, "deleg": [8, 10, 11, 34], "is_expir": 8, "iterate_next_tim": 8, "hash": [8, 18], "pop_ev": 8, "event_id": [8, 10, 20, 23], "continu": [8, 49, 55], "looptim": 8, "threadtim": 8, "categori": [8, 10, 11, 12, 20, 43], "messagecategori": [8, 10, 11, 12, 20], "bundl": 8, "handle_pi": 8, "wrapper": [8, 18, 31], "factori": [9, 16, 36, 48, 49, 50, 52, 62], "pydant": 9, "basemodel": 9, "positiveint": 9, "dequeu": 9, "cachedatabaseconfig": [9, 15, 35], "localhost": [9, 46], "6379": 9, "redi": [9, 15, 43, 45, 47], "databas": [9, 11, 12, 15, 16, 35, 45, 55, 59, 63], "address": [9, 29, 30, 47], "frozenset": 9, "load_all_instru": 9, "frozendict": 9, "parser": [9, 10, 31, 59], "dataengineconfig": [9, 11, 35], "riskengineconfig": [9, 33, 35], "deny_modify_pending_upd": [9, 16, 33], "max_order_submit_r": [9, 16, 33], "constrainedstr": 9, "100": [9, 10, 28, 43, 49, 64], "00": [9, 24, 64], "max_order_modify_r": [9, 16, 33], "max_notional_per_ord": [9, 16, 33], "riskengin": [9, 16, 33, 35, 36, 55, 62], "risk": [9, 19, 20, 32, 35, 36, 47, 55, 58], "still": [9, 13, 20, 37, 38, 49], "deni": [9, 16, 20, 26, 33, 55], "pending_upd": [9, 16, 26, 33], "notion": [9, 16, 23, 27, 33, 62], "execengineconfig": [9, 12, 35], "load_cach": [9, 12, 16], "allow_cash_posit": [9, 12, 16], "unleverag": [9, 12, 16], "orderemulatorconfig": [9, 35], "orderemul": [9, 35, 55], "streamingconfig": [9, 35], "catalog_path": [9, 46, 59, 63], "fs_protocol": [9, 31], "fs_storage_opt": [9, 31], "flush_interval_m": [9, 31], "replace_exist": 9, "include_typ": [9, 31], "catalog": [9, 46, 58, 63], "feather": [9, 31, 35, 60], "fsspec": [9, 31, 59, 63], "filesystem": [9, 31, 59, 63], "storag": [9, 31, 58, 59, 63], "write": [9, 16, 30, 31, 34, 42, 55, 59, 65], "actor_path": 9, "config_path": [9, 46, 59], "actorfactori": 9, "step": [9, 11, 18, 28, 37, 38, 39, 40, 42, 47, 60], "strategyconfig": [9, 36, 46, 65], "order_id_tag": [9, 36, 65], "becom": [9, 40, 47, 49, 60, 64], "amongst": 9, "see": [9, 38, 46, 49, 50, 54, 55, 58, 59, 62, 63, 65], "importablestrategyconfig": [9, 35, 36, 46, 59], "strategy_path": [9, 46, 59], "strategyfactori": 9, "nautiluskernelconfig": 9, "cache_databas": 9, "data_engin": [9, 16, 35, 36], "risk_engin": [9, 35, 36], "exec_engin": [9, 16, 35, 36], "load_stat": [9, 35], "save_st": [9, 35], "loop_debug": [9, 35], "log_level": [9, 35, 38, 46], "bypass_log": [9, 35], "sandbox": [9, 35, 52, 55, 58, 60], "context": [9, 30, 31, 35, 37, 47, 52, 55, 60, 64], "separ": [9, 13, 21, 24, 31, 35, 37, 45, 46, 49, 52, 59, 62, 63, 65], "hyphen": [9, 21, 35, 65], "save": [9, 16, 35, 36, 46, 63], "node": [9, 35, 46, 48, 49, 50, 58, 59, 60], "backtestvenueconfig": [9, 46, 59], "backtestdataconfig": [9, 31, 46, 59], "data_cl": [9, 46, 59], "catalog_fs_protocol": 9, "catalog_fs_storage_opt": 9, "end_tim": [9, 46, 59], "filter_expr": 9, "metadata": [9, 18, 49, 52, 54], "run_analysi": 9, "batch_size_byt": 9, "extern": [9, 18, 19, 21, 59], "input": [9, 10, 14, 16, 31, 33, 46, 57], "parse_filters_expr": 9, "pyarrow": 9, "express": [9, 10, 23, 27, 47, 60, 64], "chf": 9, "hello": 9, "importableclientconfig": 9, "livedataengineconfig": [9, 16, 35], "livedataengin": [9, 16], "liveriskengineconfig": [9, 16, 35], "liveriskengin": [9, 16], "liveexecengineconfig": [9, 16, 35], "reconciliation_lookback_min": [9, 16], "nonnegativeint": 9, "inflight_check_interval_m": [9, 16], "5000": [9, 64], "inflight_check_threshold_m": [9, 16], "liveexecengin": 9, "minut": [9, 18, 19, 59, 60, 63], "reconcil": [9, 16, 51], "exceed": [9, 20, 62], "beyond": [9, 38, 49, 65], "queue": [9, 16], "livedatacli": [9, 16], "tradingnodeconfig": [9, 16, 38, 48, 49, 50], "data_cli": [9, 48, 49, 50], "timeout_connect": 9, "positivefloat": 9, "timeout_reconcili": 9, "timeout_portfolio": 9, "timeout_disconnect": 9, "timeout_post_stop": 9, "tradingnod": [9, 15, 16, 48, 49, 50, 52, 60], "000": [9, 64], "timeout": [9, 16], "unreal": [9, 20, 27, 32], "final": [9, 39, 43, 48, 49, 50, 63], "shutdown": 9, "validate_importable_data_cli": 9, "v": [9, 33, 46], "resolv": [9, 50], "validate_importable_exec_cli": 9, "throughout": [10, 18, 37, 40, 43, 55, 58, 61], "main": [10, 40, 46, 52, 60, 64, 65], "focu": 10, "effici": [10, 16, 37, 47, 58], "usabl": 10, "form": [10, 14], "design": [10, 14, 16, 22, 40, 42, 43, 47, 51, 52, 54], "philosophi": [10, 40, 47], "finitestatemachin": 10, "entiti": [10, 21, 60], "bisect_left": 10, "lo": 10, "hi": 10, "where": [10, 19, 20, 25, 28, 34, 36, 37, 40, 47, 49, 51, 55, 58, 59, 63, 64, 65], "appear": [10, 63], "rightmost": 10, "arg": [10, 31], "len": [10, 57, 63], "slice": 10, "bisect_right": 10, "iso": [10, 17], "8601": 10, "as_utc_index": 10, "datetimeindex": 10, "as_utc_timestamp": 10, "dt": [10, 59, 63], "dt_to_unix_nano": [10, 59, 63], "accur": [10, 15, 58], "microsecond": 10, "\u03bc": 10, "format_iso8601": 10, "is_datetime_utc": 10, "is_tz_awar": 10, "time_object": 10, "is_tz_naiv": 10, "naiv": 10, "maybe_dt_to_unix_nano": 10, "int64": [10, 15], "maybe_unix_nanos_to_dt": 10, "nano": 10, "micros_to_nano": 10, "micro": 10, "round": [10, 23, 28, 30], "millis_to_nano": 10, "milli": 10, "nanos_to_micro": 10, "nanos_to_milli": 10, "nanos_to_sec": 10, "secs_to_milli": 10, "sec": 10, "secs_to_nano": 10, "unix_nanos_to_dt": 10, "case": [10, 31, 32, 43, 46, 48, 49, 50, 52, 54, 59, 60, 61, 62, 63], "determinist": [10, 47], "state_machin": 10, "state_transition_t": 10, "initial_st": 10, "trigger_pars": 10, "state_pars": 10, "need": [10, 11, 12, 14, 26, 29, 31, 37, 38, 39, 42, 45, 46, 47, 49, 51, 54, 55, 59, 63, 64, 65], "state_str": 10, "invalidstatetrigg": [10, 26], "add_not": [10, 25], "with_traceback": [10, 25], "tb": [10, 25], "__traceback__": [10, 25], "command_id": [10, 11, 12], "document": [10, 12, 13, 16, 42, 49, 53, 56, 58, 61, 64, 65], "document_id": 10, "message_id": 10, "request_id": [10, 11, 52], "response_id": [10, 11], "basis_points_as_percentag": 10, "basis_point": [10, 49, 64], "basi": [10, 49, 61, 64], "point": [10, 12, 24, 25, 29, 37, 49, 55, 58, 64], "fast_mad": 10, "ndarrai": [10, 14], "deviat": [10, 14], "numpi": [10, 37, 45], "fast_mad_with_mean": 10, "fast_mean": 10, "evalu": [10, 37], "10x": 10, "faster": 10, "np": [10, 14], "200": [10, 18, 64], "fast_mean_iter": 10, "next_valu": 10, "current_valu": 10, "expected_length": 10, "drop_left": 10, "left": [10, 43, 56, 58, 61], "fast_std": 10, "std": 10, "fast_std_with_mean": 10, "25x": 10, "pseudo": 10, "univers": [10, 29, 47, 58], "version": [10, 38, 45, 55], "128": 10, "rfc": 10, "4122": 10, "panic": [10, 21], "runtim": [10, 21, 37, 40, 42, 47, 58, 62], "universally_unique_identifi": 10, "tool": [11, 14, 33, 36, 39, 40, 43, 45, 47, 58], "architectur": [11, 12, 43, 45], "somewhat": [11, 12], "mirror": [11, 12], "beneath": [11, 12], "altern": [11, 12, 39, 43, 60], "abl": [11, 12, 20, 29, 42, 46, 47, 51, 54, 60, 65], "written": [11, 12, 47], "due": [11, 12, 20, 47, 50, 54], "reusabl": [11, 12], "help": [11, 12, 32, 33, 36, 38, 40, 47], "baraggreg": [11, 18, 19, 60], "barbuild": 11, "builder": [11, 49], "build_now": 11, "price_precis": [11, 23, 25, 27, 28], "uint8": [11, 17, 24, 25, 27], "set_parti": 11, "partial_bar": 11, "partial": [11, 59, 64], "size_precis": [11, 23, 25, 27], "ts_last": [11, 12, 25, 26, 27], "tickbaraggreg": 11, "timebaraggreg": 11, "timer": 11, "get_start_tim": 11, "next_close_n": 11, "valuebaraggreg": 11, "get_cumulative_valu": 11, "cumul": [11, 14], "volumebaraggreg": 11, "primari": [11, 12, 51], "via": [11, 12, 14, 36, 46, 47, 50, 53, 55, 60], "emploi": [11, 12, 58], "simpl": [11, 12, 46, 47, 59, 63], "fan": [11, 12], "pattern": [11, 12, 29, 36, 58], "datacommand": [11, 16], "datarespons": [11, 16], "ingest": [11, 12, 49, 60, 65], "check_connect": [11, 12, 16], "check_disconnect": [11, 12, 16], "command_count": [11, 12, 16, 33], "data_count": [11, 16], "default_cli": [11, 12, 16], "deregister_cli": [11, 12, 16], "register_default_cli": [11, 12, 16], "overwritten": [11, 12, 16, 17], "register_venue_rout": [11, 12, 16], "registered_cli": [11, 12, 16], "datarequest": [11, 16, 52], "request_count": [11, 16], "response_count": [11, 16], "enough": [11, 20, 38, 47, 50], "get_issu": [12, 21], "orderev": [12, 16, 20, 26, 32], "distribut": [12, 65], "position_id_count": [12, 16], "register_oms_typ": [12, 16], "registr": [12, 16, 29], "report_count": [12, 16], "onix": [12, 20, 21, 24, 36], "biz": [12, 20, 21, 24, 36], "sp2": [12, 20, 24, 36], "msgtype_f_70": 12, "html": [12, 20, 21, 24, 36, 38], "msgtype_g_71": [12, 36], "execalgorithmspecif": [12, 36], "exec_algorithm_spec": [12, 36], "algorithm": [12, 14, 21, 36, 47, 64], "msgtype_d_68": 12, "order_list": [12, 36], "neworderlist": 12, "msgtype_e_69": 12, "has_emulated_ord": 12, "least": [12, 26, 49], "report_id": 12, "those": [12, 47, 52], "add_order_report": 12, "add_position_report": 12, "add_trade_report": 12, "order_report": 12, "position_report": 12, "trade_report": 12, "executionreport": [12, 16], "orderstatu": [12, 26], "order_statu": 12, "filled_qti": [12, 26], "ts_accept": 12, "avg_px": [12, 26], "cancel_reason": 12, "ts_trigger": [12, 26], "leaves_qti": [12, 26], "leav": [12, 26, 64], "position_sid": [12, 26, 36], "flat": [12, 20, 26, 27, 32, 64], "net_qti": [12, 20, 27], "welcom": [13, 37, 40, 44, 47, 56, 61], "cython": [13, 37, 39, 40, 42, 55, 56, 58], "automat": [13, 39, 52, 64], "repositori": 13, "sphinx": 13, "extend": [13, 40, 47, 58], "beta": [13, 49], "phase": [13, 49], "stabl": [13, 45], "master": 13, "discoveri": 14, "idea": [14, 47], "inspir": [14, 47], "proprietari": 14, "adaptivemovingaverag": 14, "period_": 14, "period_alpha_fast": 14, "period_alpha_slow": 14, "movingaverag": 14, "across": [14, 32, 47, 60], "roll": 14, "window": [14, 16, 41, 45, 47], "perri": 14, "kaufman": 14, "nois": [14, 49], "small": [14, 42, 51], "increas": [14, 47, 54], "lag": 14, "efficiencyratio": 14, "fast": [14, 47], "smooth": [14, 42], "slow": 14, "alpha_fast": 14, "extract": [14, 18, 31, 40], "alpha_diff": 14, "alpha": [14, 46], "alpha_slow": 14, "has_input": 14, "warm": 14, "update_raw": 14, "exponentialmovingaverag": 14, "donchianchannel": 14, "three": [14, 36], "line": [14, 30, 31, 37, 38, 43, 46, 59, 61, 63], "compris": [14, 52], "upper": 14, "around": [14, 22, 32, 38], "median": 14, "highest": [14, 29, 47, 56, 58, 61], "area": [14, 37, 43], "middl": 14, "hullmovingaverag": 14, "alan": 14, "extrem": [14, 58, 60], "movingaveragefactori": 14, "ma_typ": 14, "movingaveragetyp": 14, "simplemovingaverag": 14, "weightedmovingaverag": 14, "float64": 14, "averagetruerang": 14, "use_previ": 14, "value_floor": 14, "select": [14, 41, 59, 63], "inner": 14, "boolean": [14, 37], "flag": [14, 15], "update_mid": 14, "floor": 14, "bollingerband": 14, "k": [14, 23, 36, 60, 62], "technic": 14, "trend": 14, "awai": [14, 23, 28, 64], "prefer": [14, 39], "measur": [14, 65], "speed": [14, 47], "thought": 14, "proxi": [14, 25], "fuzzycandl": 14, "candledirect": 14, "candles": 14, "candlebodys": 14, "body_s": 14, "candlewicks": 14, "upper_wick_s": 14, "lower_wick_s": 14, "candl": 14, "bodi": [14, 37], "wick": 14, "overal": [14, 40], "fuzzycandlestick": 14, "threshold1": 14, "threshold2": 14, "threshold3": 14, "threshold4": 14, "fuzzifi": 14, "dimension": 14, "featur": [14, 20, 29, 38, 40, 42, 46, 56], "membership": 14, "vector": [14, 47], "keltnerchannel": 14, "k_multipli": 14, "ma_type_atr": 14, "atr_floor": 14, "envelop": 14, "below": [14, 31, 37, 45, 46, 49, 50, 52, 55, 58, 59, 63, 65], "tradition": [14, 47], "plu": 14, "minu": 14, "multipli": [14, 23, 27, 62], "keltnerposit": 14, "extens": [14, 39, 40, 43, 47, 58], "movingaverageconvergencediverg": [14, 46], "fast_period": [14, 46], "slow_period": [14, 46], "onbalancevolum": 14, "momentum": [14, 65], "value_cumul": 14, "rateofchang": 14, "use_log": 14, "relativestrengthindex": 14, "spreadanalyz": 14, "period_k": 14, "period_d": 14, "oscil": 14, "bought": 14, "sold": 14, "forextrad": 14, "com": [14, 38, 41, 45, 46, 59, 63], "educ": 14, "explain": [14, 37, 42, 46, 61], "d": [14, 59, 63], "value_d": 14, "value_k": 14, "store": [14, 15, 24, 34, 59, 63], "durat": [14, 20, 27], "high_datetim": 14, "low_datetim": 14, "since_high": 14, "since_low": 14, "volatilityratio": 14, "volumeweightedaveragepric": 14, "technologi": [15, 58], "box": [15, 47], "rediscachedatabas": 15, "serial": [15, 31, 58, 60, 62, 65], "17": 15, "digit": [15, 24], "19": 15, "One": [15, 37, 40, 47, 63], "solv": 15, "achiev": [15, 42, 48, 49, 50, 58, 60, 65], "timestamps_as_str": [15, 34], "msgpackseri": [15, 34], "overarch": 16, "uvloop": [16, 47, 60], "interfac": [16, 36, 42, 51, 58], "present": [16, 31], "broker": [16, 45, 46, 51, 53, 58, 64], "intermediari": 16, "possibl": [16, 26, 28, 29, 33, 37, 42, 45, 49, 51, 54, 55, 57, 58, 60, 62, 64, 65], "special": [16, 38, 49], "data_qs": 16, "get_event_loop": [16, 52], "get_run_queue_task": 16, "kill": [16, 64], "abruptli": 16, "message_qs": 16, "liveexecutionengin": 16, "get_inflight_check_task": 16, "reconcile_mass_statu": 16, "reconcile_report": 16, "reconcile_st": 16, "timeout_sec": 16, "max_notionals_per_ord": [16, 33], "set_max_notional_per_ord": [16, 33], "new_valu": [16, 33], "disabl": [16, 33], "invalidoper": [16, 33], "set_trading_st": [16, 33], "tradingst": [16, 33], "trading_st": [16, 33], "network": [16, 47, 58], "is_built": 16, "add_data_client_factori": [16, 48, 49, 50], "liveexecutionclientfactori": 16, "add_exec_client_factori": [16, 48, 49, 50], "gracefulli": 16, "delai": 16, "shut": [16, 55], "down": [16, 28, 55], "executor": [16, 35], "tradingnodebuild": 16, "servic": [16, 30], "build_data_cli": 16, "build_exec_cli": 16, "uint8_t": [17, 18, 24, 25], "uint16_t": 17, "iso4217": 17, "currencytyp": 17, "currency_typ": 17, "medium": [17, 36], "uint16": 17, "4217": 17, "from_str": [17, 18, 21, 24, 46, 59, 62, 63, 64, 65], "unknown": [17, 30], "veri": [17, 46, 54], "cryptocurr": [17, 23, 49, 62], "robust": [17, 37, 47, 57], "is_crypto": 17, "is_fiat": 17, "fiat": [17, 23, 62], "overwrit": 17, "fundament": [18, 20, 24, 42, 64], "barspecif": [18, 60], "rule": [18, 36], "sampl": [18, 59], "check_information_aggreg": 18, "check_threshold_aggreg": 18, "check_time_aggreg": 18, "is_information_aggreg": 18, "driven": [18, 47, 58], "tick_run": [18, 19, 60], "volume_run": [18, 19, 60], "value_run": [18, 19, 60], "is_threshold_aggreg": 18, "tick_imbal": [18, 19, 60], "volume_imbal": [18, 19, 60], "value_imbal": [18, 19, 60], "is_time_aggreg": 18, "week": [18, 60], "month": [18, 41, 59, 60, 63], "bar_spec": 18, "aggregationsourc": [18, 19], "aggregation_sourc": 18, "accordingli": 18, "is_externally_aggreg": 18, "is_internally_aggreg": 18, "spec": [18, 37], "space": [18, 28, 37], "lai": 18, "cost": [18, 23, 27], "exposur": [18, 25, 32], "liabil": 18, "lose_payoff": 18, "stake": 18, "win_payoff": 18, "nautilus_to_bet": 18, "extract_pric": 18, "extract_volum": 18, "from_raw": [18, 24], "raw_bid": 18, "raw_ask": 18, "bid_price_prec": 18, "ask_price_prec": 18, "raw_bid_s": 18, "raw_ask_s": 18, "bid_size_prec": 18, "ask_size_prec": 18, "aggressorsid": [18, 19], "aggressor_sid": 18, "buyer": 18, "seller": 18, "counterparti": [18, 21], "aggressor": [18, 19, 64], "raw_pric": 18, "price_prec": 18, "raw_siz": 18, "size_prec": 18, "close_pric": 18, "instrumentclosetyp": 18, "close_typ": 18, "instrumentstatu": 18, "statusupd": 18, "venuestatu": 18, "hashabl": 18, "content": 18, "themselv": [18, 53, 58], "topic": [18, 29, 36], "genericdata": 18, "wrap": [18, 31, 59], "invest": 19, "vehicl": 19, "similar": [19, 52, 58, 63], "profil": 19, "assetclass": [19, 23], "equiti": [19, 33, 47, 50, 62], "commod": 19, "metal": 19, "energi": 19, "bond": [19, 50], "product": [19, 40, 43, 47, 49, 58], "assettyp": [19, 23], "forward": [19, 40, 47], "cfd": [19, 47, 50], "warrant": 19, "ohlcv": 19, "is_report": 20, "ordstatu": 20, "39": 20, "dure": [20, 37, 40, 57], "tagnum_39": 20, "orderdeni": 20, "unsupport": [20, 51], "denied_reason": 20, "valid_str": 20, "is_bui": [20, 25, 26], "is_sel": [20, 26], "orderiniti": [20, 26, 55], "linked_order_id": [20, 26, 53], "parent_order_id": [20, 26], "had": 20, "emulationtrigg": 20, "link": [20, 26, 47, 53, 58, 63, 64], "positionchang": 20, "opening_order_id": [20, 27], "peak_qti": [20, 27], "avg_px_open": [20, 27], "avg_px_clos": [20, 27], "realized_return": [20, 27], "unrealized_pnl": [20, 27, 32], "ts_open": [20, 27], "positionev": [20, 32, 46], "idt": 20, "peak": [20, 27], "closing_order_id": [20, 27], "duration_n": [20, 27], "ts_close": [20, 27], "positionclos": 20, "positionopen": 20, "correctli": [21, 24, 31, 34, 37, 46, 54, 59, 63], "ib": [21, 45, 50, 51], "d02851908": 21, "firm": [21, 47], "get_id": 21, "execalgorithmid": 21, "tagnum_1003": 21, "charact": [21, 29, 37], "aud": [21, 48, 59, 62, 64], "idealpro": [21, 50, 64], "emacross": [21, 59], "get_tag": 21, "is_extern": 21, "global": [21, 33, 34], "did": 21, "tradabl": [21, 23, 62], "ticker_symbol": 21, "1003": 21, "abbrevi": 21, "tester": 21, "rich": [22, 40, 47, 58, 60], "agnost": [22, 47], "seek": [22, 38, 64], "depend": [23, 27, 36, 39, 45, 47, 49, 59, 62], "venue_nam": 23, "event_type_id": 23, "event_type_nam": 23, "competition_id": 23, "competition_nam": 23, "event_nam": 23, "event_country_cod": 23, "event_open_d": 23, "betting_typ": 23, "market_nam": 23, "market_start_tim": 23, "market_typ": 23, "selection_nam": 23, "selection_handicap": 23, "tick_scheme_nam": 23, "betfair": [23, 50, 51], "min_pric": [23, 28, 62], "max_pric": [23, 28, 62], "asset_class": 23, "asset_typ": 23, "base_from_dict": 23, "base_to_dict": 23, "get_base_curr": 23, "get_settlement_curr": 23, "linear": 23, "quanto": 23, "settlement_curr": 23, "is_invers": [23, 27], "lot_siz": 23, "lot": [23, 40, 47, 62], "board": 23, "make_pric": [23, 62], "make_qti": [23, 62], "make_symbol": 23, "maker_fe": [23, 62], "fee": [23, 64], "max_not": [23, 62], "printabl": 23, "max_quant": [23, 62], "min_not": [23, 62], "min_quant": [23, 62], "native_symbol": 23, "next_ask_pric": [23, 28], "num_tick": 23, "nearest": [23, 28], "move": [23, 28, 64], "scheme": 23, "next_bid_pric": [23, 28], "notional_valu": [23, 27], "price_incr": 23, "increment": [23, 25, 28], "size_incr": 23, "taker_fe": [23, 62], "is_quanto": 23, "underli": [23, 40, 62], "expiry_d": 23, "from_int_c": 23, "deliver": [23, 62], "isin": [23, 50], "secur": [23, 24, 50], "identif": 23, "tick_siz": 23, "strike_pric": 23, "optionkind": 23, "kind": 23, "strike": [23, 50], "act": [23, 40, 43, 46, 49, 54, 64], "marginaccountbal": 24, "money_max": 24, "9_223_372_036": 24, "money_min": 24, "as_decim": 24, "as_doubl": 24, "whitespac": 24, "to_str": 24, "place": [24, 28, 38, 43, 59, 64], "certain": [24, 29, 34, 46, 58, 62, 64], "under": [24, 37, 49, 51, 57], "price_max": 24, "price_min": 24, "whole": 24, "fraction": 24, "from_int": [24, 46, 59, 63, 64], "raw_to_f64": 24, "non": 24, "capabl": [24, 46, 47, 49], "share": [24, 58, 62, 65], "quantity_max": 24, "18_446_744_073": 24, "quantity_min": 24, "qty": 24, "l1orderbook": 25, "l1": [25, 60], "tbbo": 25, "offer": [25, 26, 43, 47, 48, 50, 62, 64], "bookord": 25, "notimpl": 25, "apply_delta": 25, "apply_snapshot": 25, "best_ask_level": 25, "best_ask_qti": 25, "best_bid_level": 25, "best_bid_qti": 25, "bookintegrityerror": 25, "fail": 25, "clear_ask": 25, "clear_bid": 25, "last_update_id": 25, "get_price_for_quote_volum": 25, "get_price_for_volum": 25, "get_quote_volume_for_pric": 25, "get_volume_for_pric": 25, "get_vwap_for_volum": 25, "midpoint": 25, "pprint": 25, "num_level": 25, "show": [25, 59], "spread": 25, "trade_sid": 25, "l2orderbook": 25, "l2": [25, 60], "mbp": 25, "made": [25, 55, 58, 62, 65], "l3orderbook": 25, "l3": [25, 60], "mbo": 25, "signed_s": 25, "update_pric": 25, "update_s": 25, "is_revers": 25, "simulate_order_fil": 25, "depthtyp": 25, "depth_typ": 25, "bulk_add": 25, "simulatedl1orderbook": 25, "simulatedorderbook": 25, "simulatedl2orderbook": 25, "simulatedl3orderbook": 25, "lost": [25, 55], "init_id": 26, "On": [26, 52], "moo": 26, "moc": 26, "closing_sid": 26, "has_pric": 26, "has_trigger_pric": 26, "summari": [26, 27, 38, 64], "descript": [26, 27, 36, 65], "init_ev": 26, "is_aggress": 26, "is_cancel": 26, "is_child_ord": 26, "is_clos": [26, 27], "longer": [26, 37, 43, 55], "status": 26, "is_conting": 26, "is_emul": [26, 55], "is_inflight": 26, "pending_cancel": 26, "is_open": [26, 27], "partially_fil": 26, "is_parent_ord": 26, "is_pass": 26, "passiv": 26, "is_pending_cancel": 26, "is_pending_upd": 26, "is_post_onli": 26, "is_reduce_onli": 26, "last_trade_id": [26, 27], "opposite_sid": 26, "opposit": [26, 27, 46, 64], "side_str": 26, "would_reduce_onli": 26, "position_qti": 26, "givien": 26, "expire_time_n": 26, "loo": 26, "loc": 26, "is_trigg": 26, "init": [26, 45], "cost_curr": 27, "is_long": [27, 46], "is_opposite_sid": 27, "is_short": [27, 46], "In": [27, 31, 42, 46, 47, 49, 52, 63], "side_from_order_sid": 27, "fixedtickschem": 28, "min_tick": 28, "max_tick": 28, "tickschem": 28, "tieredtickschem": 28, "max_ticks_per_ti": 28, "find_tick_index": 28, "get_tick_schem": 28, "list_tick_schem": 28, "register_tick_schem": 28, "tick_schem": 28, "round_down": 28, "round_up": 28, "loos": [29, 58], "coupl": [29, 37, 58, 59, 63], "facilit": [29, 32, 47, 58], "consum": [29, 58], "pub": [29, 58], "sub": [29, 58], "req": [29, 58], "rep": [29, 58], "wildcard": [29, 36], "hierarch": 29, "asterisk": 29, "question": 29, "comp": 29, "anyth": 29, "comput": 29, "mp": 29, "camp": 29, "p": [29, 46], "coop": 29, "has_subscrib": 29, "pub_count": 29, "prioriti": [29, 51, 58], "req_count": 29, "res_count": 29, "higher": [29, 47, 60], "what": [29, 36, 37, 38, 42, 49, 54], "inappropri": 29, "potenti": [29, 31, 40], "effect": [29, 58], "sound": [29, 62], "behaviour": [29, 42, 64], "organ": [29, 32, 62], "assist": [30, 40, 58, 61], "feed": [30, 49, 55], "nameserv": 30, "ttl_dns_cach": 30, "86400": 30, "ssl_context": 30, "sslcontext": 30, "fingerprint": 30, "connector_kwarg": 30, "latency_qs": 30, "dn": 30, "connector": 30, "word": 30, "maxlen": 30, "dequ": 30, "avg_lat": 30, "trip": 30, "factor": [30, 47], "hit": [30, 64], "yet": [30, 36], "header": [30, 31, 45, 63], "clientrespons": 30, "max_lat": 30, "min_lat": 30, "aiohttp": 30, "clientsess": 30, "utf": [30, 31], "carriag": 30, "split": [30, 31, 59, 63], "websocketcli": 30, "max_retry_connect": 30, "pong_msg": 30, "log_send": 30, "log_recv": 30, "web": [30, 46], "pong": 30, "recv": 30, "ws_url": 30, "ws_kwarg": 30, "connection_retry_count": 30, "retri": 30, "post_disconnect": 30, "post_reconnect": 30, "send_json": 30, "unknown_message_count": 30, "retriev": [31, 48, 50, 58], "rawfil": 31, "open_fil": 31, "openfil": 31, "block_siz": 31, "progress": [31, 55, 63], "split_and_seri": 31, "dicts_to_datafram": 31, "frame": 31, "determine_partition_col": 31, "partit": 31, "merge_existing_data": 31, "basedatacatalog": 31, "df": 31, "merg": 31, "simpli": [31, 46, 49, 59, 63, 65], "unchang": 31, "write_t": 31, "parquetdatacatalog": [31, 59, 60], "write_parquet": 31, "abstractfilesystem": 31, "partition_col": 31, "schema": [31, 34], "read_progress": 31, "linepreprocessor": 31, "textread": [31, 59, 63], "attribut": 31, "were": [31, 63], "prepend": [31, 35], "2021": 31, "06": [31, 41, 64], "29t06": 31, "03": [31, 41], "14": 31, "528000": 31, "op": 31, "mcm": 31, "pt": 31, "1624946594395": 31, "mc": 31, "179082386": 31, "rc": 31, "atb": 31, "93": 31, "addition": 31, "want": [31, 42], "someth": [31, 34, 49, 54], "logginglinepreprocessor": 31, "staticmethod": 31, "def": [31, 46, 49, 52, 54, 57, 59, 62, 63, 65], "pre_process": 31, "json_data": 31, "post_process": 31, "instrument_provider_upd": 31, "byteread": 31, "block_pars": [31, 63], "byte_pars": 31, "hook": [31, 39, 58], "ahead": 31, "line_pars": [31, 59, 63], "line_preprocessor": 31, "newlin": 31, "b": [31, 59], "text": [31, 59, 63], "row": [31, 34, 59, 63], "clean": [31, 40, 47, 63], "char": 31, "csvreader": [31, 63], "as_datafram": [31, 63], "purpos": [31, 47, 52, 59, 63, 65], "right": [31, 37, 40, 43, 47, 50], "parquetread": [31, 63], "filemeta": 31, "filenam": 31, "alia": 31, "occurr": 31, "9223372036854775807": 31, "extract_generic_data_client_id": 31, "data_config": [31, 35, 59], "inject": 31, "kw": 31, "abc": 31, "queryabl": 31, "root": [31, 43, 45], "streamingfeatherwrit": [31, 35], "writer": [31, 35], "check_flush": 31, "generate_signal_class": 31, "value_typ": 31, "fleet": [32, 36], "satisfi": 32, "analyz": [32, 57, 58], "initialize_ord": 32, "initialize_posit": 32, "is_completely_flat": 32, "is_flat": 32, "is_net_long": 32, "is_net_short": 32, "net_exposur": 32, "net_posit": 32, "update_quote_tick": 32, "positions": 33, "monitor": 33, "halt": 33, "fixedrisks": 33, "stop_loss": 33, "commission_r": 33, "exchange_r": 33, "hard_limit": 33, "unit_batch_s": 33, "hard": 33, "risk_bp": 33, "xrate": 33, "update_instru": 33, "sizer": 33, "besid": 34, "messagepack": [34, 60], "deseri": 34, "obj_byt": 34, "runtimeerror": [34, 36], "parquetseri": 34, "get_cls_tabl": 34, "get_partition_kei": 34, "get_schema": 34, "list_schema": 34, "register_parquet": 34, "pa": 34, "cls_type": 34, "subset": 34, "miss": 34, "togeth": [34, 41, 49, 53, 64], "go": [34, 46, 59, 63], "register_serializable_object": 34, "cache_config": 35, "cache_database_config": 35, "risk_config": 35, "exec_config": 35, "emulator_config": 35, "streaming_config": 35, "actor_config": 35, "strategy_config": 35, "loop_sig_callback": 35, "threadpoolexecutor": 35, "ts_creat": 35, "add_log_sink": 35, "packag": [36, 39, 45, 46, 47, 60], "major": [36, 47, 58], "economicnewseventfilt": 36, "impact": 36, "news_data": 36, "econom": 36, "letter": 36, "next_ev": 36, "time_now": 36, "newsev": 36, "unfiltered_data_start": 36, "unfiltered_data_end": 36, "prev_ev": 36, "forexsess": 36, "forexsessionfilt": 36, "local_from_utc": 36, "next_end": 36, "mondai": 36, "fridai": 36, "sydnei": 36, "0700": 36, "1600": 36, "australia": 36, "tokyo": 36, "0900": 36, "1800": 36, "asia": 36, "london": 36, "0800": 36, "europ": 36, "york": 36, "1700": 36, "america": 36, "new_york": 36, "next_start": 36, "prev_end": 36, "prev_start": 36, "newsimpact": 36, "ever": [36, 64], "close_all_posit": 36, "close_posit": 36, "indicators_initi": 36, "on_load": 36, "caught": 36, "modif": [36, 39, 55, 64], "on_sav": 36, "order_factori": [36, 46, 64], "register_indicator_for_bar": 36, "register_indicator_for_quote_tick": 36, "register_indicator_for_trade_tick": 36, "registered_ind": 36, "actor_id": 36, "actor_st": 36, "tradingstrategi": 36, "clear_actor": 36, "clear_strategi": 36, "strategy_st": 36, "glob": [36, 59, 63], "codebas": [37, 38, 40, 42, 43, 58, 60], "guid": [37, 39, 44, 45, 46, 51, 53, 54, 56, 58, 59, 64], "convent": [37, 38], "guidelin": 37, "compliant": 37, "opinion": 37, "formatt": [37, 39], "philosoph": 37, "agre": 37, "howev": [37, 38, 40, 43, 45, 46, 47, 49, 63, 64, 65], "sai": 37, "handcraft": 37, "toward": 37, "stylist": 37, "align": 37, "indent": 37, "hang": 37, "vaniti": 37, "off": [37, 58, 59, 63], "parenthesi": 37, "practic": 37, "conserv": 37, "view": [37, 58], "locat": 37, "comma": [37, 63], "long_method_with_many_param": 37, "some_arg1": 37, "some_arg2": 37, "some_arg3": 37, "even": [37, 60, 65], "though": [37, 65], "advantag": [37, 40, 42, 47], "aim": [37, 47, 51, 61], "idiomat": 37, "notabl": 37, "departur": 37, "truthi": 37, "everyth": [37, 46], "collect": [37, 43, 58], "enter": [37, 46, 64], "pyobject": [37, 40], "googl": [37, 42], "discourag": 37, "chanc": 37, "unexpect": 37, "bug": [37, 47], "foo": 37, "g": [37, 46, 49, 62], "some": [37, 38, 40, 42, 46, 49, 51, 53, 54, 58, 61, 62], "might": [37, 47], "said": [37, 49, 51], "aren": 37, "encourag": 37, "feedback": 37, "depart": 37, "appar": 37, "adher": [37, 42], "lint": [37, 39], "ignor": [37, 38], "yaml": 37, "justif": 37, "comment": [37, 43, 64], "subject": [37, 55, 56, 61], "titl": 37, "fewer": 37, "capit": [37, 51], "imper": 37, "voic": 37, "describ": [37, 46, 58], "blank": 37, "keep": [37, 43, 47, 61], "80": 37, "width": 37, "bullet": 37, "relev": 37, "issu": [37, 38, 47, 50], "hyperlink": 37, "guidanc": 38, "languag": [38, 40, 42, 47], "syntax": [38, 39, 40, 47], "bint": 38, "bubbl": 38, "caller": [38, 42], "improv": [38, 58], "vote": 38, "year": 38, "unfortun": 38, "youtrack": 38, "jetbrain": 38, "py": [38, 39, 43, 46, 52], "9476": 38, "readthedoc": 38, "src": 38, "userguid": 38, "involv": [38, 53], "manual": [38, 41, 46, 50, 59, 63], "gdb": 38, "don": [38, 46, 64], "workflow": 38, "understand": [38, 40, 58], "quit": 38, "debugg": 38, "few": 38, "thing": 38, "With": 38, "granular": [38, 47], "verbos": 38, "flow": 38, "visibl": [38, 64], "_log": [38, 46, 52], "pycharm": [39, 43], "profession": [39, 47], "edit": 39, "interpret": [39, 40], "visual": [39, 45], "studio": [39, 45], "pyenv": 39, "poetri": [39, 45], "commit": 39, "auto": 39, "project": [39, 42, 43, 45, 47, 51, 60], "pyx": [39, 40, 52], "pxd": [39, 40], "compil": [39, 40, 42, 45, 47, 58], "valuabl": 40, "contribut": 40, "believ": 40, "job": [40, 47, 55], "power": [40, 47], "eco": 40, "whilst": [40, 42], "overcom": 40, "inher": [40, 47], "shortcom": 40, "lack": [40, 42], "safeti": [40, 47, 65], "alloc": [40, 51], "unless": [40, 43, 51, 58], "world": [40, 47], "straight": [40, 47], "sever": [40, 49, 64], "magnitud": 40, "cours": 40, "introduct": 40, "cpython": [40, 47, 58], "thorough": 40, "review": [40, 44], "familiar": 40, "yourself": 40, "expert": 40, "definit": [40, 42, 49, 62, 63], "test_kit": 41, "folder": [41, 43], "download": [41, 45, 46, 59, 63], "fred": 41, "stlouisf": 41, "usd1mtd156n": 41, "interbank": 41, "oecd": 41, "htm": 41, "fxstreet": 41, "calendar": 41, "gmt": 41, "yearli": 41, "quarter": 41, "stitch": 41, "icon": 41, "xx": 41, "31": 41, "04": 41, "07": 41, "09": 41, "program": [42, 47], "ideal": 42, "mission": [42, 47], "race": 42, "formal": [42, 58], "ownership": [42, 47], "lifetim": 42, "garbag": [42, 47], "collector": [42, 47], "itself": [42, 65], "eventu": [42, 49, 51], "hft": 42, "interoper": 42, "abi": 42, "compat": [42, 51], "cbindgen": [42, 58], "approach": [42, 49], "aid": [42, 43], "elimin": [42, 47], "avoid": [42, 43], "ffi": 42, "pyo3": [42, 47], "abil": [42, 47], "outsid": 42, "great": 42, "care": [42, 64], "facil": 42, "therebi": 42, "shift": 42, "goal": [42, 43], "undefin": 42, "strive": [42, 46], "section": [42, 48, 49, 50, 58], "why": 42, "cover": [42, 43, 54, 56], "invari": 42, "uphold": 42, "meet": [42, 51], "oblig": 42, "rustonomicon": 42, "dark": 42, "art": 42, "unsafeti": 42, "russel": 42, "johnston": 42, "suit": 43, "divid": 43, "broad": 43, "pytest": 43, "click": 43, "subdirectori": 43, "noxfil": 43, "tests_integr": 43, "Or": [43, 55, 62], "tests_perform": 43, "tests_al": 43, "simplifi": 43, "although": [43, 56, 61, 63], "magicmock": 43, "codecov": 43, "expens": 43, "appropri": [43, 45], "induc": 43, "damag": 43, "imposs": 43, "catch": 43, "unrecogn": 43, "ultim": 43, "pragma": 43, "redund": 43, "needless": 43, "assert": [43, 46, 59, 63], "notimplementederror": 43, "kept": 43, "refactor": 43, "benefit": [43, 59], "judici": 43, "restrict": [43, 64], "properli": 44, "Then": [44, 46, 48, 49, 50, 55, 59], "quick": [44, 59, 63], "64": 45, "linux": [45, 47, 60], "maco": [45, 47, 60], "isol": 45, "scipi": 45, "arm": 45, "macbook": 45, "pro": 45, "m1": 45, "appl": 45, "silicon": 45, "stackoverflow": 45, "wheel": [45, 47, 58], "sdist": 45, "pip": [45, 50], "hyperopt": 45, "hyperparamet": 45, "optim": 45, "h": [45, 59, 63], "ll": [45, 48, 49, 50, 59, 63], "rustc": [45, 58], "cargo": 45, "rust": [45, 58], "pyproject": 45, "toml": 45, "rustup": 45, "toolchain": 45, "curl": [45, 46], "proto": 45, "tlsv1": 45, "ssf": 45, "sh": 45, "r": 45, "desktop": 45, "2019": 45, "shell": [45, 47], "home": 45, "powershel": 45, "site": 45, "python3": 45, "clone": 45, "git": 45, "nautechsystem": [45, 46], "cd": 45, "navig": [45, 58], "whl": 45, "detail": [46, 55, 56, 61, 63, 64, 65], "jupyt": 46, "notebook": [46, 59, 63], "fastest": 46, "bear": 46, "mind": 46, "termin": 46, "pull": [46, 59, 63], "ghcr": 46, "jupyterlab": 46, "expos": 46, "8889": 46, "8888": 46, "browser": 46, "prepar": 46, "script": [46, 47], "cell": [46, 59, 63], "apt": 46, "githubusercont": 46, "nautilus_data": 46, "hist_data_to_catalog": 46, "eur": [46, 50, 59, 63], "hand": [46, 63], "macd": 46, "mere": 46, "serv": 46, "macdconfig": 46, "trade_s": [46, 59, 65], "entry_threshold": 46, "00010": 46, "macdstrategi": 46, "__init__": [46, 54, 65], "super": [46, 54, 65], "them": [46, 54, 58, 62], "easier": [46, 47], "later": 46, "conveni": [46, 62], "5d": 46, "check_for_entri": 46, "check_for_exit": 46, "isinst": [46, 49, 54], "again": 46, "ab": 46, "earli": 46, "cross": 46, "exit": 46, "ve": 46, "seem": 46, "minim": [46, 65], "aspect": 46, "ecn": [46, 64], "sim": [46, 59], "basic": [46, 65], "100_000": [46, 59, 63, 64], "as_nautilu": [46, 59], "flexibl": [46, 47, 49, 54, 60, 65], "2020": [46, 59, 63], "05": 46, "fine": 46, "__main__": 46, "26": 46, "etc": [46, 50, 59, 63, 65], "piec": 46, "readi": 46, "offici": 47, "grade": 47, "quantit": 47, "autom": [47, 62], "deploi": [47, 60], "ai": 47, "pariti": 47, "challeng": 47, "research": [47, 58, 59, 63], "softwar": [47, 58, 60], "deploy": [47, 58, 60], "workload": 47, "modular": [47, 51, 54, 58], "frequenc": 47, "simultan": 47, "independ": 47, "oco": [47, 53], "oto": [47, 53], "ident": [47, 49], "arbitrag": 47, "agent": 47, "train": 47, "rl": 47, "ancient": 47, "greek": 47, "sailor": 47, "nau": 47, "ship": 47, "chamber": 47, "growth": 47, "approxim": 47, "logarithm": 47, "spiral": 47, "translat": 47, "aesthet": 47, "conduct": [47, 51], "suitabl": 47, "reimplement": 47, "drive": 47, "java": 47, "proven": 47, "circumv": 47, "decad": 47, "ago": 47, "evolv": 47, "fledg": 47, "orient": 47, "tiob": 47, "popular": 47, "Not": 47, "de": 47, "facto": 47, "lingua": 47, "franca": 47, "scienc": 47, "learn": 47, "artifici": 47, "intellig": 47, "drawback": 47, "especi": [47, 60], "larg": [47, 63, 64], "embed": 47, "ecosystem": 47, "commun": 47, "superset": 47, "mostli": 47, "heavili": 47, "vast": 47, "actual": [47, 50, 58, 63, 65], "pure": [47, 55, 58], "paradigm": 47, "concurr": 47, "blazingli": 47, "compar": 47, "devic": 47, "easili": [47, 63], "increasingli": 47, "bind": [47, 58], "testabl": [47, 58], "catalogu": 48, "omit": [48, 49, 50], "your_betfair_usernam": 48, "your_betfair_password": 48, "your_betfair_app_kei": 48, "your_betfair_cert_dir": 48, "betfair_api_kei": 48, "betfair_api_secret": 48, "confirm": [48, 49, 50], "2017": 49, "largest": 49, "pleas": [49, 65], "unstabl": 49, "exercis": 49, "caution": 49, "assort": 49, "binancewebsocketcli": 49, "necessarili": [49, 62, 64], "stat": [49, 57], "unif": 49, "polici": 49, "clarifi": 49, "ye": [49, 55], "trailing_offet_typ": 49, "activation_pric": 49, "your_binance_api_kei": 49, "your_binance_api_secret": 49, "futures_coin": 49, "binance_api_secret": 49, "binance_testnet_api_secret": 49, "binance_futures_api_kei": 49, "binance_futures_api_secret": 49, "binance_futures_testnet_api_kei": [49, 52], "binance_futures_testnet_api_secret": [49, 52], "usdt": [49, 64], "busd": 49, "stablecoin": 49, "collater": 49, "cluster": 49, "your_binance_testnet_api_kei": 49, "your_binance_testnet_api_secret": 49, "unabl": [49, 59], "enorm": 49, "unnecessari": 49, "ib_insync": 50, "plan": 50, "insid": [50, 55], "interactivebrokersinstrumentprovid": 50, "interactivebrokersexecutioncli": 50, "qualifycontract": 50, "usual": 50, "initialis": 50, "sectyp": 50, "config_nod": 50, "curreci": 50, "stock": 50, "stk": 50, "amd": 50, "smart": 50, "intc": 50, "primaryexchang": 50, "nasdaq": 50, "ibus30": 50, "fut": 50, "globex": 50, "lasttradedateorcontractmonth": 50, "20180921": 50, "opt": [50, 65], "spy": 50, "20170721": 50, "240": 50, "secidtyp": 50, "secid": 50, "us03076kaa60": 50, "paxo": 50, "workstat": 50, "interactivebrokerslivedataclientfactori": 50, "interactivebrokersliveexecclientfactori": 50, "unifi": [51, 62, 64], "heavi": 51, "larger": [51, 53, 60], "sport": [51, 62], "cex": 51, "varieti": [51, 57], "widest": 51, "criteria": 51, "conflict": 51, "clearli": [51, 64], "_m": 51, "suggest": 52, "standalon": 52, "discov": [52, 62], "consumpt": [52, 54], "getenv": 52, "behavior": 52, "anywher": 52, "anytim": 52, "cpdef": 52, "not_non": 52, "cdef": 52, "_handle_instrument_respons": 52, "_clock": 52, "_send_data_req": 52, "_instrument_provid": 52, "_handle_data_respons": 52, "conjunct": [53, 64], "relationship": [53, 64], "natur": 54, "mydatapoint": 54, "z": 54, "some_optional_categori": 54, "my_adapt": 54, "regardless": 55, "bid_ask": [55, 64], "regular": 55, "retain": [55, 62], "easi": 55, "stage": [55, 59], "matchingcor": 55, "treat": 55, "attach": [55, 64], "is_emulated_c": 55, "reli": 55, "crash": [55, 58], "reload": 55, "rememb": 55, "analys": 57, "categor": 57, "calculate_": 57, "win": [57, 58], "precondit": 57, "winner": 57, "loser": 57, "degener": 57, "nan": 57, "tear": 57, "sheet": 57, "head": 57, "techniqu": 58, "ddd": 58, "decis": 58, "compet": 58, "roughli": 58, "compos": 58, "much": [58, 59, 63, 64], "style": 58, "plug": 58, "arriv": 58, "overhead": 58, "switch": 58, "didn": 58, "predict": 58, "Of": 58, "lmax": 58, "award": 58, "disruptor": 58, "articl": 58, "martin": 58, "fowler": 58, "cohes": 58, "nav": [58, 61], "menu": [58, 61], "componentri": 58, "foundat": 58, "nautilus_cor": 58, "resid": 58, "unsaf": 58, "bloat": 58, "docstr": 58, "significantli": 58, "undocu": 58, "third": 58, "parti": 58, "remaind": [59, 64], "shutil": [59, 63], "process_fil": [59, 63], "write_object": [59, 63], "reader": 59, "histdata": [59, 63], "ascii": [59, 63], "data_dir": 59, "By": 59, "raw_fil": 59, "chosen": [59, 63], "hdf5": [59, 63], "compress": [59, 63], "helper": [59, 63], "minimis": [59, 63], "idx": 59, "strptime": [59, 63], "decod": [59, 63], "audusd": [59, 62], "getcwd": [59, 63], "fresh": [59, 63], "rmtree": [59, 63], "mkdir": [59, 63], "glob_path": [59, 63], "zip": [59, 63], "02": [59, 63], "boilerpl": 59, "grid": 59, "venues_config": 59, "from_env": 59, "1580398089820000000": 59, "1580504394501000000": 59, "ema_cross": 59, "emacrossconfig": 59, "fast_ema": 59, "slow_ema": 59, "1_000_000": 59, "subcompon": 60, "nearli": 60, "apach": 60, "arrow": 60, "demo": 60, "benchmark": 60, "dollar": 60, "companion": 61, "truth": 61, "effort": 61, "interchag": 61, "game": 62, "ethereum": 62, "incorrectli": 62, "truncat": 62, "surpris": 62, "binance_http_cli": 62, "live_logg": 62, "flexibli": 62, "upon": 62, "90500": 62, "150": 62, "demand": [62, 64], "input_fil": 63, "histdata_com_ascii_audusd_": 63, "histdata_com_ascii_audusd_t202001": 63, "plain": 63, "hist_data": 63, "sens": [63, 65], "And": 63, "lambda": 63, "shown": [63, 65], "break": 63, "protect": 63, "essenti": 64, "provis": 64, "exact": 64, "explanatori": 64, "brief": 64, "good": 64, "til": 64, "portion": 64, "opg": 64, "particip": 64, "tier": 64, "hidden": 64, "equival": 64, "double_last": 64, "consecut": 64, "double_bid_ask": 64, "last_or_bid_ask": 64, "mid_point": 64, "100bp": 64, "price_ti": 64, "easiest": 64, "simpler": 64, "clariti": 64, "100000": 64, "notic": 64, "currenex": 64, "gbp": 64, "3000": 64, "30010": 64, "middai": 64, "6th": 64, "june": 64, "2022": 64, "50_000": 64, "30000": 64, "06t12": 64, "jpy": 64, "200_000": 64, "30_100": 64, "30_150": 64, "30100": 64, "30150": 64, "take_profit": 64, "ethusd": 64, "coin_m": 64, "trailing_stop": 64, "250": 64, "72000": 64, "71000": 64, "00100": 64, "1_250_000": 64, "00050": 64, "heart": 65, "experi": 65, "discuss": 65, "mystrategi": 65, "fire": 65, "remot": 65, "launch": 65, "mystrategyconfig": 65, "fast_ema_period": 65, "slow_ema_period": 65, "parameter": 65, "thrown": 65, "belong": 65}, "objects": {"nautilus_trader": [[0, 0, 0, "-", "accounting"], [3, 0, 0, "-", "adapters"], [5, 0, 0, "-", "analysis"], [6, 0, 0, "-", "backtest"], [7, 0, 0, "-", "cache"], [8, 0, 0, "-", "common"], [9, 0, 0, "-", "config"], [10, 0, 0, "-", "core"], [11, 0, 0, "-", "data"], [12, 0, 0, "-", "execution"], [14, 0, 0, "-", "indicators"], [15, 0, 0, "-", "infrastructure"], [16, 0, 0, "-", "live"], [22, 0, 0, "-", "model"], [29, 0, 0, "-", "msgbus"], [30, 0, 0, "-", "network"], [31, 0, 0, "-", "persistence"], [32, 0, 0, "-", "portfolio"], [33, 0, 0, "-", "risk"], [34, 0, 0, "-", "serialization"], [35, 0, 0, "-", "system"], [36, 0, 0, "-", "trading"]], "nautilus_trader.accounting.accounts": [[0, 0, 0, "-", "cash"], [0, 0, 0, "-", "margin"]], "nautilus_trader.accounting.accounts.cash": [[0, 1, 1, "", "CashAccount"]], "nautilus_trader.accounting.accounts.cash.CashAccount": [[0, 2, 1, "", "apply"], [0, 2, 1, "", "balance"], [0, 2, 1, "", "balance_free"], [0, 2, 1, "", "balance_locked"], [0, 2, 1, "", "balance_total"], [0, 2, 1, "", "balances"], [0, 2, 1, "", "balances_free"], [0, 2, 1, "", "balances_locked"], [0, 2, 1, "", "balances_total"], [0, 3, 1, "", "base_currency"], [0, 3, 1, "", "calculate_account_state"], [0, 2, 1, "", "calculate_balance_locked"], [0, 2, 1, "", "calculate_commission"], [0, 2, 1, "", "calculate_pnls"], [0, 2, 1, "", "clear_balance_locked"], [0, 2, 1, "", "commission"], [0, 2, 1, "", "commissions"], [0, 2, 1, "", "currencies"], [0, 3, 1, "", "event_count"], [0, 3, 1, "", "events"], [0, 3, 1, "", "id"], [0, 3, 1, "", "is_cash_account"], [0, 3, 1, "", "is_margin_account"], [0, 2, 1, "", "is_unleveraged"], [0, 3, 1, "", "last_event"], [0, 2, 1, "", "starting_balances"], [0, 3, 1, "", "type"], [0, 2, 1, "", "update_balance_locked"], [0, 2, 1, "", "update_balances"], [0, 2, 1, "", "update_commissions"]], "nautilus_trader.accounting.accounts.margin": [[0, 1, 1, "", "MarginAccount"]], "nautilus_trader.accounting.accounts.margin.MarginAccount": [[0, 2, 1, "", "apply"], [0, 2, 1, "", "balance"], [0, 2, 1, "", "balance_free"], [0, 2, 1, "", "balance_locked"], [0, 2, 1, "", "balance_total"], [0, 2, 1, "", "balances"], [0, 2, 1, "", "balances_free"], [0, 2, 1, "", "balances_locked"], [0, 2, 1, "", "balances_total"], [0, 3, 1, "", "base_currency"], [0, 3, 1, "", "calculate_account_state"], [0, 2, 1, "", "calculate_commission"], [0, 2, 1, "", "calculate_margin_init"], [0, 2, 1, "", "calculate_margin_maint"], [0, 2, 1, "", "calculate_pnls"], [0, 2, 1, "", "clear_margin"], [0, 2, 1, "", "clear_margin_init"], [0, 2, 1, "", "clear_margin_maint"], [0, 2, 1, "", "commission"], [0, 2, 1, "", "commissions"], [0, 2, 1, "", "currencies"], [0, 3, 1, "", "default_leverage"], [0, 3, 1, "", "event_count"], [0, 3, 1, "", "events"], [0, 3, 1, "", "id"], [0, 3, 1, "", "is_cash_account"], [0, 3, 1, "", "is_margin_account"], [0, 2, 1, "", "is_unleveraged"], [0, 3, 1, "", "last_event"], [0, 2, 1, "", "leverage"], [0, 2, 1, "", "leverages"], [0, 2, 1, "", "margin"], [0, 2, 1, "", "margin_init"], [0, 2, 1, "", "margin_maint"], [0, 2, 1, "", "margins"], [0, 2, 1, "", "margins_init"], [0, 2, 1, "", "margins_maint"], [0, 2, 1, "", "set_default_leverage"], [0, 2, 1, "", "set_leverage"], [0, 2, 1, "", "starting_balances"], [0, 3, 1, "", "type"], [0, 2, 1, "", "update_balances"], [0, 2, 1, "", "update_commissions"], [0, 2, 1, "", "update_margin"], [0, 2, 1, "", "update_margin_init"], [0, 2, 1, "", "update_margin_maint"]], "nautilus_trader.accounting": [[0, 0, 0, "-", "calculators"], [0, 0, 0, "-", "factory"], [0, 0, 0, "-", "manager"]], "nautilus_trader.accounting.calculators": [[0, 1, 1, "", "ExchangeRateCalculator"], [0, 1, 1, "", "RolloverInterestCalculator"]], "nautilus_trader.accounting.calculators.ExchangeRateCalculator": [[0, 2, 1, "", "get_rate"]], "nautilus_trader.accounting.calculators.RolloverInterestCalculator": [[0, 2, 1, "", "calc_overnight_rate"], [0, 2, 1, "", "get_rate_data"]], "nautilus_trader.accounting.factory": [[0, 1, 1, "", "AccountFactory"]], "nautilus_trader.accounting.factory.AccountFactory": [[0, 2, 1, "", "create"], [0, 2, 1, "", "register_account_type"], [0, 2, 1, "", "register_calculated_account"]], "nautilus_trader.accounting.manager": [[0, 1, 1, "", "AccountsManager"]], "nautilus_trader.adapters": [[1, 0, 0, "-", "betfair"], [2, 0, 0, "-", "binance"], [4, 0, 0, "-", "interactive_brokers"]], "nautilus_trader.adapters.betfair": [[1, 0, 0, "-", "data"], [1, 0, 0, "-", "data_types"], [1, 0, 0, "-", "execution"], [1, 0, 0, "-", "factories"], [1, 0, 0, "-", "parsing"], [1, 0, 0, "-", "providers"], [1, 0, 0, "-", "sockets"], [1, 0, 0, "-", "util"]], "nautilus_trader.adapters.betfair.data": [[1, 1, 1, "", "BetfairDataClient"]], "nautilus_trader.adapters.betfair.data.BetfairDataClient": [[1, 2, 1, "", "connect"], [1, 2, 1, "", "degrade"], [1, 2, 1, "", "disconnect"], [1, 2, 1, "", "dispose"], [1, 2, 1, "", "fault"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "id"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "is_degraded"], [1, 3, 1, "", "is_disposed"], [1, 3, 1, "", "is_faulted"], [1, 3, 1, "", "is_initialized"], [1, 3, 1, "", "is_running"], [1, 3, 1, "", "is_stopped"], [1, 2, 1, "", "request"], [1, 2, 1, "", "request_bars"], [1, 2, 1, "", "request_instrument"], [1, 2, 1, "", "request_instruments"], [1, 2, 1, "", "request_quote_ticks"], [1, 2, 1, "", "request_trade_ticks"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "resume"], [1, 2, 1, "", "start"], [1, 3, 1, "", "state"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "subscribe"], [1, 2, 1, "", "subscribe_bars"], [1, 2, 1, "", "subscribe_instrument"], [1, 2, 1, "", "subscribe_instrument_close_prices"], [1, 2, 1, "", "subscribe_instrument_status_updates"], [1, 2, 1, "", "subscribe_instruments"], [1, 2, 1, "", "subscribe_order_book_deltas"], [1, 2, 1, "", "subscribe_order_book_snapshots"], [1, 2, 1, "", "subscribe_quote_ticks"], [1, 2, 1, "", "subscribe_ticker"], [1, 2, 1, "", "subscribe_trade_ticks"], [1, 2, 1, "", "subscribed_bars"], [1, 2, 1, "", "subscribed_generic_data"], [1, 2, 1, "", "subscribed_instrument_close_prices"], [1, 2, 1, "", "subscribed_instrument_status_updates"], [1, 2, 1, "", "subscribed_instruments"], [1, 2, 1, "", "subscribed_order_book_deltas"], [1, 2, 1, "", "subscribed_order_book_snapshots"], [1, 2, 1, "", "subscribed_quote_ticks"], [1, 2, 1, "", "subscribed_tickers"], [1, 2, 1, "", "subscribed_trade_ticks"], [1, 3, 1, "", "trader_id"], [1, 3, 1, "", "type"], [1, 2, 1, "", "unsubscribe"], [1, 2, 1, "", "unsubscribe_bars"], [1, 2, 1, "", "unsubscribe_instrument"], [1, 2, 1, "", "unsubscribe_instrument_close_prices"], [1, 2, 1, "", "unsubscribe_instrument_status_updates"], [1, 2, 1, "", "unsubscribe_instruments"], [1, 2, 1, "", "unsubscribe_order_book_deltas"], [1, 2, 1, "", "unsubscribe_order_book_snapshots"], [1, 2, 1, "", "unsubscribe_quote_ticks"], [1, 2, 1, "", "unsubscribe_ticker"], [1, 2, 1, "", "unsubscribe_trade_ticks"], [1, 3, 1, "", "venue"]], "nautilus_trader.adapters.betfair.data_types": [[1, 1, 1, "", "BSPOrderBookDelta"], [1, 1, 1, "", "BetfairTicker"], [1, 1, 1, "", "InstrumentSearch"], [1, 1, 1, "", "SubscriptionStatus"]], "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta": [[1, 3, 1, "", "action"], [1, 3, 1, "", "book_type"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "instrument_id"], [1, 3, 1, "", "order"], [1, 2, 1, "", "to_dict"], [1, 3, 1, "", "ts_event"], [1, 3, 1, "", "ts_init"], [1, 3, 1, "", "update_id"]], "nautilus_trader.adapters.betfair.data_types.BetfairTicker": [[1, 2, 1, "", "from_dict"], [1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "instrument_id"], [1, 2, 1, "", "to_dict"], [1, 3, 1, "", "ts_event"], [1, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.betfair.data_types.InstrumentSearch": [[1, 2, 1, "", "fully_qualified_name"], [1, 3, 1, "", "ts_event"], [1, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.betfair.execution": [[1, 1, 1, "", "BetfairExecutionClient"]], "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient": [[1, 3, 1, "", "account_id"], [1, 3, 1, "", "account_type"], [1, 3, 1, "", "base_currency"], [1, 2, 1, "", "cancel_all_orders"], [1, 2, 1, "", "cancel_order"], [1, 2, 1, "", "check_account_currency"], [1, 2, 1, "", "connect"], [1, 2, 1, "", "degrade"], [1, 2, 1, "", "disconnect"], [1, 2, 1, "", "dispose"], [1, 2, 1, "", "fault"], [1, 2, 1, "", "fully_qualified_name"], [1, 2, 1, "", "generate_account_state"], [1, 2, 1, "", "generate_mass_status"], [1, 2, 1, "", "generate_order_accepted"], [1, 2, 1, "", "generate_order_cancel_rejected"], [1, 2, 1, "", "generate_order_canceled"], [1, 2, 1, "", "generate_order_expired"], [1, 2, 1, "", "generate_order_filled"], [1, 2, 1, "", "generate_order_modify_rejected"], [1, 2, 1, "", "generate_order_pending_cancel"], [1, 2, 1, "", "generate_order_pending_update"], [1, 2, 1, "", "generate_order_rejected"], [1, 2, 1, "", "generate_order_status_report"], [1, 2, 1, "", "generate_order_status_reports"], [1, 2, 1, "", "generate_order_submitted"], [1, 2, 1, "", "generate_order_triggered"], [1, 2, 1, "", "generate_order_updated"], [1, 2, 1, "", "generate_position_status_reports"], [1, 2, 1, "", "generate_trade_reports"], [1, 2, 1, "", "get_account"], [1, 2, 1, "", "handle_order_stream_update"], [1, 3, 1, "", "id"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "is_degraded"], [1, 3, 1, "", "is_disposed"], [1, 3, 1, "", "is_faulted"], [1, 3, 1, "", "is_initialized"], [1, 3, 1, "", "is_running"], [1, 3, 1, "", "is_stopped"], [1, 2, 1, "", "modify_order"], [1, 3, 1, "", "oms_type"], [1, 2, 1, "", "query_order"], [1, 2, 1, "", "reset"], [1, 2, 1, "", "resume"], [1, 2, 1, "", "start"], [1, 3, 1, "", "state"], [1, 2, 1, "", "stop"], [1, 2, 1, "", "submit_order"], [1, 2, 1, "", "submit_order_list"], [1, 3, 1, "", "trader_id"], [1, 3, 1, "", "type"], [1, 3, 1, "", "venue"], [1, 2, 1, "", "wait_for_order"], [1, 2, 1, "", "watch_stream"]], "nautilus_trader.adapters.betfair.factories": [[1, 1, 1, "", "BetfairLiveDataClientFactory"], [1, 1, 1, "", "BetfairLiveExecClientFactory"], [1, 4, 1, "", "get_cached_betfair_client"], [1, 4, 1, "", "get_cached_betfair_instrument_provider"]], "nautilus_trader.adapters.betfair.factories.BetfairLiveDataClientFactory": [[1, 2, 1, "", "create"]], "nautilus_trader.adapters.betfair.factories.BetfairLiveExecClientFactory": [[1, 2, 1, "", "create"]], "nautilus_trader.adapters.betfair.parsing": [[1, 4, 1, "", "determine_order_price"], [1, 4, 1, "", "order_cancel_all_to_betfair"], [1, 4, 1, "", "order_cancel_to_betfair"], [1, 4, 1, "", "order_submit_to_betfair"], [1, 4, 1, "", "order_update_to_betfair"], [1, 4, 1, "", "parse_handicap"]], "nautilus_trader.adapters.betfair.providers": [[1, 1, 1, "", "BetfairInstrumentProvider"]], "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider": [[1, 2, 1, "", "add"], [1, 2, 1, "", "add_bulk"], [1, 2, 1, "", "add_currency"], [1, 5, 1, "", "count"], [1, 2, 1, "", "currencies"], [1, 2, 1, "", "currency"], [1, 2, 1, "", "find"], [1, 2, 1, "", "get_all"], [1, 2, 1, "", "get_betting_instrument"], [1, 2, 1, "", "initialize"], [1, 2, 1, "", "list_all"], [1, 2, 1, "", "load"], [1, 2, 1, "", "load_all"], [1, 2, 1, "", "load_all_async"], [1, 2, 1, "", "load_async"], [1, 2, 1, "", "load_ids"], [1, 2, 1, "", "load_ids_async"], [1, 2, 1, "", "load_markets"], [1, 2, 1, "", "search_instruments"], [1, 5, 1, "", "venue"]], "nautilus_trader.adapters.betfair.sockets": [[1, 1, 1, "", "BetfairMarketStreamClient"], [1, 1, 1, "", "BetfairOrderStreamClient"], [1, 1, 1, "", "BetfairStreamClient"]], "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient": [[1, 2, 1, "", "connect"], [1, 2, 1, "", "disconnect"], [1, 3, 1, "", "host"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "port"], [1, 2, 1, "", "post_connection"], [1, 2, 1, "", "reconnect"], [1, 2, 1, "", "send"], [1, 3, 1, "", "ssl"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"]], "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient": [[1, 2, 1, "", "connect"], [1, 2, 1, "", "disconnect"], [1, 3, 1, "", "host"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "port"], [1, 2, 1, "", "post_connection"], [1, 2, 1, "", "reconnect"], [1, 2, 1, "", "send"], [1, 3, 1, "", "ssl"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"]], "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient": [[1, 2, 1, "", "connect"], [1, 2, 1, "", "disconnect"], [1, 3, 1, "", "host"], [1, 3, 1, "", "is_connected"], [1, 3, 1, "", "port"], [1, 2, 1, "", "post_connection"], [1, 2, 1, "", "reconnect"], [1, 2, 1, "", "send"], [1, 3, 1, "", "ssl"], [1, 2, 1, "", "start"], [1, 2, 1, "", "stop"]], "nautilus_trader.adapters.betfair.util": [[1, 4, 1, "", "chunk"], [1, 4, 1, "", "flatten_tree"]], "nautilus_trader.adapters.binance.common": [[2, 0, 0, "-", "enums"], [2, 0, 0, "-", "types"]], "nautilus_trader.adapters.binance.common.enums": [[2, 1, 1, "", "BinanceAccountType"], [2, 1, 1, "", "BinanceExchangeFilterType"], [2, 1, 1, "", "BinanceExecutionType"], [2, 1, 1, "", "BinanceOrderSide"], [2, 1, 1, "", "BinanceOrderStatus"], [2, 1, 1, "", "BinanceRateLimitInterval"], [2, 1, 1, "", "BinanceRateLimitType"], [2, 1, 1, "", "BinanceSymbolFilterType"]], "nautilus_trader.adapters.binance.common.types": [[2, 1, 1, "", "BinanceBar"], [2, 1, 1, "", "BinanceTicker"]], "nautilus_trader.adapters.binance.common.types.BinanceBar": [[2, 3, 1, "", "bar_type"], [2, 3, 1, "", "close"], [2, 2, 1, "", "from_dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "high"], [2, 2, 1, "", "is_single_price"], [2, 3, 1, "", "low"], [2, 3, 1, "", "open"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "ts_event"], [2, 3, 1, "", "ts_init"], [2, 3, 1, "", "volume"]], "nautilus_trader.adapters.binance.common.types.BinanceTicker": [[2, 2, 1, "", "from_dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "instrument_id"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "ts_event"], [2, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.binance": [[2, 0, 0, "-", "config"], [2, 0, 0, "-", "factories"]], "nautilus_trader.adapters.binance.config": [[2, 1, 1, "", "BinanceDataClientConfig"], [2, 1, 1, "", "BinanceExecClientConfig"]], "nautilus_trader.adapters.binance.config.BinanceDataClientConfig": [[2, 2, 1, "", "construct"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "json"], [2, 2, 1, "", "update_forward_refs"]], "nautilus_trader.adapters.binance.config.BinanceExecClientConfig": [[2, 2, 1, "", "construct"], [2, 2, 1, "", "copy"], [2, 2, 1, "", "dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "json"], [2, 2, 1, "", "update_forward_refs"]], "nautilus_trader.adapters.binance.factories": [[2, 1, 1, "", "BinanceLiveDataClientFactory"], [2, 1, 1, "", "BinanceLiveExecClientFactory"], [2, 4, 1, "", "get_cached_binance_futures_instrument_provider"], [2, 4, 1, "", "get_cached_binance_http_client"], [2, 4, 1, "", "get_cached_binance_spot_instrument_provider"]], "nautilus_trader.adapters.binance.factories.BinanceLiveDataClientFactory": [[2, 2, 1, "", "create"]], "nautilus_trader.adapters.binance.factories.BinanceLiveExecClientFactory": [[2, 2, 1, "", "create"]], "nautilus_trader.adapters.binance.futures": [[2, 0, 0, "-", "data"], [2, 0, 0, "-", "enums"], [2, 0, 0, "-", "execution"], [2, 0, 0, "-", "providers"], [2, 0, 0, "-", "types"]], "nautilus_trader.adapters.binance.futures.data": [[2, 1, 1, "", "BinanceFuturesDataClient"]], "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "request"], [2, 2, 1, "", "request_bars"], [2, 2, 1, "", "request_instrument"], [2, 2, 1, "", "request_instruments"], [2, 2, 1, "", "request_quote_ticks"], [2, 2, 1, "", "request_trade_ticks"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "subscribe"], [2, 2, 1, "", "subscribe_bars"], [2, 2, 1, "", "subscribe_instrument"], [2, 2, 1, "", "subscribe_instrument_close_prices"], [2, 2, 1, "", "subscribe_instrument_status_updates"], [2, 2, 1, "", "subscribe_instruments"], [2, 2, 1, "", "subscribe_order_book_deltas"], [2, 2, 1, "", "subscribe_order_book_snapshots"], [2, 2, 1, "", "subscribe_quote_ticks"], [2, 2, 1, "", "subscribe_ticker"], [2, 2, 1, "", "subscribe_trade_ticks"], [2, 2, 1, "", "subscribed_bars"], [2, 2, 1, "", "subscribed_generic_data"], [2, 2, 1, "", "subscribed_instrument_close_prices"], [2, 2, 1, "", "subscribed_instrument_status_updates"], [2, 2, 1, "", "subscribed_instruments"], [2, 2, 1, "", "subscribed_order_book_deltas"], [2, 2, 1, "", "subscribed_order_book_snapshots"], [2, 2, 1, "", "subscribed_quote_ticks"], [2, 2, 1, "", "subscribed_tickers"], [2, 2, 1, "", "subscribed_trade_ticks"], [2, 3, 1, "", "trader_id"], [2, 3, 1, "", "type"], [2, 2, 1, "", "unsubscribe"], [2, 2, 1, "", "unsubscribe_bars"], [2, 2, 1, "", "unsubscribe_instrument"], [2, 2, 1, "", "unsubscribe_instrument_close_prices"], [2, 2, 1, "", "unsubscribe_instrument_status_updates"], [2, 2, 1, "", "unsubscribe_instruments"], [2, 2, 1, "", "unsubscribe_order_book_deltas"], [2, 2, 1, "", "unsubscribe_order_book_snapshots"], [2, 2, 1, "", "unsubscribe_quote_ticks"], [2, 2, 1, "", "unsubscribe_ticker"], [2, 2, 1, "", "unsubscribe_trade_ticks"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.futures.enums": [[2, 1, 1, "", "BinanceFuturesContractStatus"], [2, 1, 1, "", "BinanceFuturesContractType"], [2, 1, 1, "", "BinanceFuturesEventType"], [2, 1, 1, "", "BinanceFuturesMarginType"], [2, 1, 1, "", "BinanceFuturesOrderType"], [2, 1, 1, "", "BinanceFuturesPositionSide"], [2, 1, 1, "", "BinanceFuturesPositionUpdateReason"], [2, 1, 1, "", "BinanceFuturesTimeInForce"], [2, 1, 1, "", "BinanceFuturesWorkingType"]], "nautilus_trader.adapters.binance.futures.execution": [[2, 1, 1, "", "BinanceFuturesExecutionClient"]], "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient": [[2, 3, 1, "", "account_id"], [2, 3, 1, "", "account_type"], [2, 3, 1, "", "base_currency"], [2, 2, 1, "", "cancel_all_orders"], [2, 2, 1, "", "cancel_order"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "generate_account_state"], [2, 2, 1, "", "generate_mass_status"], [2, 2, 1, "", "generate_order_accepted"], [2, 2, 1, "", "generate_order_cancel_rejected"], [2, 2, 1, "", "generate_order_canceled"], [2, 2, 1, "", "generate_order_expired"], [2, 2, 1, "", "generate_order_filled"], [2, 2, 1, "", "generate_order_modify_rejected"], [2, 2, 1, "", "generate_order_pending_cancel"], [2, 2, 1, "", "generate_order_pending_update"], [2, 2, 1, "", "generate_order_rejected"], [2, 2, 1, "", "generate_order_status_report"], [2, 2, 1, "", "generate_order_status_reports"], [2, 2, 1, "", "generate_order_submitted"], [2, 2, 1, "", "generate_order_triggered"], [2, 2, 1, "", "generate_order_updated"], [2, 2, 1, "", "generate_position_status_reports"], [2, 2, 1, "", "generate_trade_reports"], [2, 2, 1, "", "get_account"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "modify_order"], [2, 3, 1, "", "oms_type"], [2, 2, 1, "", "query_order"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "submit_order"], [2, 2, 1, "", "submit_order_list"], [2, 3, 1, "", "trader_id"], [2, 3, 1, "", "type"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.futures.providers": [[2, 1, 1, "", "BinanceFuturesInstrumentProvider"]], "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider": [[2, 2, 1, "", "add"], [2, 2, 1, "", "add_bulk"], [2, 2, 1, "", "add_currency"], [2, 5, 1, "", "count"], [2, 2, 1, "", "currencies"], [2, 2, 1, "", "currency"], [2, 2, 1, "", "find"], [2, 2, 1, "", "get_all"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "list_all"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_all"], [2, 2, 1, "", "load_all_async"], [2, 2, 1, "", "load_async"], [2, 2, 1, "", "load_ids"], [2, 2, 1, "", "load_ids_async"], [2, 5, 1, "", "venue"]], "nautilus_trader.adapters.binance.futures.types": [[2, 1, 1, "", "BinanceFuturesMarkPriceUpdate"]], "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate": [[2, 2, 1, "", "from_dict"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "to_dict"], [2, 3, 1, "", "ts_event"], [2, 3, 1, "", "ts_init"]], "nautilus_trader.adapters.binance.spot": [[2, 0, 0, "-", "data"], [2, 0, 0, "-", "enums"], [2, 0, 0, "-", "execution"], [2, 0, 0, "-", "providers"]], "nautilus_trader.adapters.binance.spot.data": [[2, 1, 1, "", "BinanceSpotDataClient"]], "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "request"], [2, 2, 1, "", "request_bars"], [2, 2, 1, "", "request_instrument"], [2, 2, 1, "", "request_instruments"], [2, 2, 1, "", "request_quote_ticks"], [2, 2, 1, "", "request_trade_ticks"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "subscribe"], [2, 2, 1, "", "subscribe_bars"], [2, 2, 1, "", "subscribe_instrument"], [2, 2, 1, "", "subscribe_instrument_close_prices"], [2, 2, 1, "", "subscribe_instrument_status_updates"], [2, 2, 1, "", "subscribe_instruments"], [2, 2, 1, "", "subscribe_order_book_deltas"], [2, 2, 1, "", "subscribe_order_book_snapshots"], [2, 2, 1, "", "subscribe_quote_ticks"], [2, 2, 1, "", "subscribe_ticker"], [2, 2, 1, "", "subscribe_trade_ticks"], [2, 2, 1, "", "subscribed_bars"], [2, 2, 1, "", "subscribed_generic_data"], [2, 2, 1, "", "subscribed_instrument_close_prices"], [2, 2, 1, "", "subscribed_instrument_status_updates"], [2, 2, 1, "", "subscribed_instruments"], [2, 2, 1, "", "subscribed_order_book_deltas"], [2, 2, 1, "", "subscribed_order_book_snapshots"], [2, 2, 1, "", "subscribed_quote_ticks"], [2, 2, 1, "", "subscribed_tickers"], [2, 2, 1, "", "subscribed_trade_ticks"], [2, 3, 1, "", "trader_id"], [2, 3, 1, "", "type"], [2, 2, 1, "", "unsubscribe"], [2, 2, 1, "", "unsubscribe_bars"], [2, 2, 1, "", "unsubscribe_instrument"], [2, 2, 1, "", "unsubscribe_instrument_close_prices"], [2, 2, 1, "", "unsubscribe_instrument_status_updates"], [2, 2, 1, "", "unsubscribe_instruments"], [2, 2, 1, "", "unsubscribe_order_book_deltas"], [2, 2, 1, "", "unsubscribe_order_book_snapshots"], [2, 2, 1, "", "unsubscribe_quote_ticks"], [2, 2, 1, "", "unsubscribe_ticker"], [2, 2, 1, "", "unsubscribe_trade_ticks"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.spot.enums": [[2, 1, 1, "", "BinanceSpotEventType"], [2, 1, 1, "", "BinanceSpotOrderStatus"], [2, 1, 1, "", "BinanceSpotOrderType"], [2, 1, 1, "", "BinanceSpotPermissions"], [2, 1, 1, "", "BinanceSpotSymbolStatus"], [2, 1, 1, "", "BinanceSpotTimeInForce"]], "nautilus_trader.adapters.binance.spot.execution": [[2, 1, 1, "", "BinanceSpotExecutionClient"]], "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient": [[2, 3, 1, "", "account_id"], [2, 3, 1, "", "account_type"], [2, 3, 1, "", "base_currency"], [2, 2, 1, "", "cancel_all_orders"], [2, 2, 1, "", "cancel_order"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "degrade"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "dispose"], [2, 2, 1, "", "fault"], [2, 2, 1, "", "fully_qualified_name"], [2, 2, 1, "", "generate_account_state"], [2, 2, 1, "", "generate_mass_status"], [2, 2, 1, "", "generate_order_accepted"], [2, 2, 1, "", "generate_order_cancel_rejected"], [2, 2, 1, "", "generate_order_canceled"], [2, 2, 1, "", "generate_order_expired"], [2, 2, 1, "", "generate_order_filled"], [2, 2, 1, "", "generate_order_modify_rejected"], [2, 2, 1, "", "generate_order_pending_cancel"], [2, 2, 1, "", "generate_order_pending_update"], [2, 2, 1, "", "generate_order_rejected"], [2, 2, 1, "", "generate_order_status_report"], [2, 2, 1, "", "generate_order_status_reports"], [2, 2, 1, "", "generate_order_submitted"], [2, 2, 1, "", "generate_order_triggered"], [2, 2, 1, "", "generate_order_updated"], [2, 2, 1, "", "generate_position_status_reports"], [2, 2, 1, "", "generate_trade_reports"], [2, 2, 1, "", "get_account"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_connected"], [2, 3, 1, "", "is_degraded"], [2, 3, 1, "", "is_disposed"], [2, 3, 1, "", "is_faulted"], [2, 3, 1, "", "is_initialized"], [2, 3, 1, "", "is_running"], [2, 3, 1, "", "is_stopped"], [2, 2, 1, "", "modify_order"], [2, 3, 1, "", "oms_type"], [2, 2, 1, "", "query_order"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "resume"], [2, 2, 1, "", "start"], [2, 3, 1, "", "state"], [2, 2, 1, "", "stop"], [2, 2, 1, "", "submit_order"], [2, 2, 1, "", "submit_order_list"], [2, 3, 1, "", "trader_id"], [2, 3, 1, "", "type"], [2, 3, 1, "", "venue"]], "nautilus_trader.adapters.binance.spot.providers": [[2, 1, 1, "", "BinanceSpotInstrumentProvider"]], "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider": [[2, 2, 1, "", "add"], [2, 2, 1, "", "add_bulk"], [2, 2, 1, "", "add_currency"], [2, 5, 1, "", "count"], [2, 2, 1, "", "currencies"], [2, 2, 1, "", "currency"], [2, 2, 1, "", "find"], [2, 2, 1, "", "get_all"], [2, 2, 1, "", "initialize"], [2, 2, 1, "", "list_all"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_all"], [2, 2, 1, "", "load_all_async"], [2, 2, 1, "", "load_async"], [2, 2, 1, "", "load_ids"], [2, 2, 1, "", "load_ids_async"], [2, 5, 1, "", "venue"]], "nautilus_trader.adapters.interactive_brokers": [[4, 0, 0, "-", "config"]], "nautilus_trader.adapters.interactive_brokers.config": [[4, 1, 1, "", "InteractiveBrokersDataClientConfig"], [4, 1, 1, "", "InteractiveBrokersExecClientConfig"]], "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig": [[4, 2, 1, "", "construct"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "update_forward_refs"]], "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig": [[4, 2, 1, "", "construct"], [4, 2, 1, "", "copy"], [4, 2, 1, "", "dict"], [4, 2, 1, "", "fully_qualified_name"], [4, 2, 1, "", "json"], [4, 2, 1, "", "update_forward_refs"]], "nautilus_trader.analysis": [[5, 0, 0, "-", "analyzer"], [5, 0, 0, "-", "reporter"], [5, 0, 0, "-", "statistic"]], "nautilus_trader.analysis.analyzer": [[5, 1, 1, "", "PortfolioAnalyzer"]], "nautilus_trader.analysis.analyzer.PortfolioAnalyzer": [[5, 2, 1, "", "add_positions"], [5, 2, 1, "", "add_return"], [5, 2, 1, "", "add_trade"], [5, 2, 1, "", "calculate_statistics"], [5, 5, 1, "", "currencies"], [5, 2, 1, "", "deregister_statistic"], [5, 2, 1, "", "deregister_statistics"], [5, 2, 1, "", "get_performance_stats_general"], [5, 2, 1, "", "get_performance_stats_pnls"], [5, 2, 1, "", "get_performance_stats_returns"], [5, 2, 1, "", "get_stats_general_formatted"], [5, 2, 1, "", "get_stats_pnls_formatted"], [5, 2, 1, "", "get_stats_returns_formatted"], [5, 2, 1, "", "realized_pnls"], [5, 2, 1, "", "register_statistic"], [5, 2, 1, "", "reset"], [5, 2, 1, "", "returns"], [5, 2, 1, "", "statistic"], [5, 2, 1, "", "total_pnl"], [5, 2, 1, "", "total_pnl_percentage"]], "nautilus_trader.analysis.reporter": [[5, 1, 1, "", "ReportProvider"]], "nautilus_trader.analysis.reporter.ReportProvider": [[5, 2, 1, "", "generate_account_report"], [5, 2, 1, "", "generate_order_fills_report"], [5, 2, 1, "", "generate_orders_report"], [5, 2, 1, "", "generate_positions_report"]], "nautilus_trader.analysis.statistic": [[5, 1, 1, "", "PortfolioStatistic"]], "nautilus_trader.analysis.statistic.PortfolioStatistic": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics": [[5, 0, 0, "-", "expectancy"], [5, 0, 0, "-", "long_ratio"], [5, 0, 0, "-", "loser_avg"], [5, 0, 0, "-", "loser_max"], [5, 0, 0, "-", "loser_min"], [5, 0, 0, "-", "profit_factor"], [5, 0, 0, "-", "returns_avg"], [5, 0, 0, "-", "returns_avg_loss"], [5, 0, 0, "-", "returns_avg_win"], [5, 0, 0, "-", "returns_volatility"], [5, 0, 0, "-", "risk_return_ratio"], [5, 0, 0, "-", "sharpe_ratio"], [5, 0, 0, "-", "sortino_ratio"], [5, 0, 0, "-", "win_rate"], [5, 0, 0, "-", "winner_avg"], [5, 0, 0, "-", "winner_max"], [5, 0, 0, "-", "winner_min"]], "nautilus_trader.analysis.statistics.expectancy": [[5, 1, 1, "", "Expectancy"]], "nautilus_trader.analysis.statistics.expectancy.Expectancy": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.long_ratio": [[5, 1, 1, "", "LongRatio"]], "nautilus_trader.analysis.statistics.long_ratio.LongRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.loser_avg": [[5, 1, 1, "", "AvgLoser"]], "nautilus_trader.analysis.statistics.loser_avg.AvgLoser": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.loser_max": [[5, 1, 1, "", "MaxLoser"]], "nautilus_trader.analysis.statistics.loser_max.MaxLoser": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.loser_min": [[5, 1, 1, "", "MinLoser"]], "nautilus_trader.analysis.statistics.loser_min.MinLoser": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.profit_factor": [[5, 1, 1, "", "ProfitFactor"]], "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_avg": [[5, 1, 1, "", "ReturnsAverage"]], "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_avg_loss": [[5, 1, 1, "", "ReturnsAverageLoss"]], "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_avg_win": [[5, 1, 1, "", "ReturnsAverageWin"]], "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.returns_volatility": [[5, 1, 1, "", "ReturnsVolatility"]], "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.risk_return_ratio": [[5, 1, 1, "", "RiskReturnRatio"]], "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.sharpe_ratio": [[5, 1, 1, "", "SharpeRatio"]], "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.sortino_ratio": [[5, 1, 1, "", "SortinoRatio"]], "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.win_rate": [[5, 1, 1, "", "WinRate"]], "nautilus_trader.analysis.statistics.win_rate.WinRate": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.winner_avg": [[5, 1, 1, "", "AvgWinner"]], "nautilus_trader.analysis.statistics.winner_avg.AvgWinner": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.winner_max": [[5, 1, 1, "", "MaxWinner"]], "nautilus_trader.analysis.statistics.winner_max.MaxWinner": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.analysis.statistics.winner_min": [[5, 1, 1, "", "MinWinner"]], "nautilus_trader.analysis.statistics.winner_min.MinWinner": [[5, 2, 1, "", "calculate_from_orders"], [5, 2, 1, "", "calculate_from_positions"], [5, 2, 1, "", "calculate_from_realized_pnls"], [5, 2, 1, "", "calculate_from_returns"], [5, 2, 1, "", "fully_qualified_name"], [5, 5, 1, "", "name"]], "nautilus_trader.backtest.data": [[6, 0, 0, "-", "loaders"], [6, 0, 0, "-", "providers"], [6, 0, 0, "-", "wranglers"]], "nautilus_trader.backtest.data.loaders": [[6, 1, 1, "", "CSVBarDataLoader"], [6, 1, 1, "", "CSVTickDataLoader"], [6, 1, 1, "", "ParquetBarDataLoader"], [6, 1, 1, "", "ParquetTickDataLoader"], [6, 1, 1, "", "TardisQuoteDataLoader"], [6, 1, 1, "", "TardisTradeDataLoader"]], "nautilus_trader.backtest.data.loaders.CSVBarDataLoader": [[6, 2, 1, "", "load"]], "nautilus_trader.backtest.data.loaders.CSVTickDataLoader": [[6, 2, 1, "", "load"]], "nautilus_trader.backtest.data.loaders.ParquetBarDataLoader": [[6, 2, 1, "", "load"]], "nautilus_trader.backtest.data.loaders.ParquetTickDataLoader": [[6, 2, 1, "", "load"]], "nautilus_trader.backtest.data.loaders.TardisQuoteDataLoader": [[6, 2, 1, "", "load"]], "nautilus_trader.backtest.data.loaders.TardisTradeDataLoader": [[6, 2, 1, "", "load"]], "nautilus_trader.backtest.data.providers": [[6, 1, 1, "", "TestDataProvider"], [6, 1, 1, "", "TestInstrumentProvider"]], "nautilus_trader.backtest.data.providers.TestInstrumentProvider": [[6, 2, 1, "", "adabtc_binance"], [6, 2, 1, "", "btcusdt_binance"], [6, 2, 1, "", "btcusdt_future_binance"], [6, 2, 1, "", "default_fx_ccy"], [6, 2, 1, "", "ethusd_bitmex"], [6, 2, 1, "", "ethusdt_binance"], [6, 2, 1, "", "ethusdt_perp_binance"], [6, 2, 1, "", "xbtusd_bitmex"]], "nautilus_trader.backtest.data.wranglers": [[6, 1, 1, "", "BarDataWrangler"], [6, 1, 1, "", "QuoteTickDataWrangler"], [6, 1, 1, "", "TradeTickDataWrangler"]], "nautilus_trader.backtest.data.wranglers.BarDataWrangler": [[6, 2, 1, "", "process"]], "nautilus_trader.backtest.data.wranglers.QuoteTickDataWrangler": [[6, 2, 1, "", "process"], [6, 2, 1, "", "process_bar_data"]], "nautilus_trader.backtest.data.wranglers.TradeTickDataWrangler": [[6, 2, 1, "", "process"]], "nautilus_trader.backtest": [[6, 0, 0, "-", "data_client"], [6, 0, 0, "-", "engine"], [6, 0, 0, "-", "exchange"], [6, 0, 0, "-", "execution_client"], [6, 0, 0, "-", "models"], [6, 0, 0, "-", "modules"], [6, 0, 0, "-", "node"], [6, 0, 0, "-", "results"]], "nautilus_trader.backtest.data_client": [[6, 1, 1, "", "BacktestDataClient"], [6, 1, 1, "", "BacktestMarketDataClient"]], "nautilus_trader.backtest.data_client.BacktestDataClient": [[6, 2, 1, "", "degrade"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_connected"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "request"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscribe"], [6, 2, 1, "", "subscribed_generic_data"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 2, 1, "", "unsubscribe"], [6, 3, 1, "", "venue"]], "nautilus_trader.backtest.data_client.BacktestMarketDataClient": [[6, 2, 1, "", "degrade"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_connected"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "request"], [6, 2, 1, "", "request_bars"], [6, 2, 1, "", "request_instrument"], [6, 2, 1, "", "request_instruments"], [6, 2, 1, "", "request_quote_ticks"], [6, 2, 1, "", "request_trade_ticks"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "subscribe"], [6, 2, 1, "", "subscribe_bars"], [6, 2, 1, "", "subscribe_instrument"], [6, 2, 1, "", "subscribe_instrument_close_prices"], [6, 2, 1, "", "subscribe_instrument_status_updates"], [6, 2, 1, "", "subscribe_instruments"], [6, 2, 1, "", "subscribe_order_book_deltas"], [6, 2, 1, "", "subscribe_order_book_snapshots"], [6, 2, 1, "", "subscribe_quote_ticks"], [6, 2, 1, "", "subscribe_ticker"], [6, 2, 1, "", "subscribe_trade_ticks"], [6, 2, 1, "", "subscribed_bars"], [6, 2, 1, "", "subscribed_generic_data"], [6, 2, 1, "", "subscribed_instrument_close_prices"], [6, 2, 1, "", "subscribed_instrument_status_updates"], [6, 2, 1, "", "subscribed_instruments"], [6, 2, 1, "", "subscribed_order_book_deltas"], [6, 2, 1, "", "subscribed_order_book_snapshots"], [6, 2, 1, "", "subscribed_quote_ticks"], [6, 2, 1, "", "subscribed_tickers"], [6, 2, 1, "", "subscribed_trade_ticks"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 2, 1, "", "unsubscribe"], [6, 2, 1, "", "unsubscribe_bars"], [6, 2, 1, "", "unsubscribe_instrument"], [6, 2, 1, "", "unsubscribe_instrument_close_prices"], [6, 2, 1, "", "unsubscribe_instrument_status_updates"], [6, 2, 1, "", "unsubscribe_instruments"], [6, 2, 1, "", "unsubscribe_order_book_deltas"], [6, 2, 1, "", "unsubscribe_order_book_snapshots"], [6, 2, 1, "", "unsubscribe_quote_ticks"], [6, 2, 1, "", "unsubscribe_ticker"], [6, 2, 1, "", "unsubscribe_trade_ticks"], [6, 3, 1, "", "venue"]], "nautilus_trader.backtest.engine": [[6, 1, 1, "", "BacktestEngine"]], "nautilus_trader.backtest.engine.BacktestEngine": [[6, 2, 1, "", "add_actor"], [6, 2, 1, "", "add_actors"], [6, 2, 1, "", "add_data"], [6, 2, 1, "", "add_instrument"], [6, 2, 1, "", "add_strategies"], [6, 2, 1, "", "add_strategy"], [6, 2, 1, "", "add_venue"], [6, 3, 1, "", "backtest_end"], [6, 3, 1, "", "backtest_start"], [6, 3, 1, "", "cache"], [6, 2, 1, "", "change_fill_model"], [6, 2, 1, "", "clear_data"], [6, 3, 1, "", "data"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "dump_pickled_data"], [6, 2, 1, "", "end_streaming"], [6, 2, 1, "", "get_result"], [6, 3, 1, "", "instance_id"], [6, 3, 1, "", "iteration"], [6, 3, 1, "", "kernel"], [6, 2, 1, "", "list_actors"], [6, 2, 1, "", "list_strategies"], [6, 2, 1, "", "list_venues"], [6, 2, 1, "", "load_pickled_data"], [6, 3, 1, "", "machine_id"], [6, 3, 1, "", "portfolio"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "run"], [6, 3, 1, "", "run_config_id"], [6, 3, 1, "", "run_finished"], [6, 3, 1, "", "run_id"], [6, 3, 1, "", "run_started"], [6, 2, 1, "", "run_streaming"], [6, 3, 1, "", "trader"], [6, 3, 1, "", "trader_id"]], "nautilus_trader.backtest.exchange": [[6, 1, 1, "", "SimulatedExchange"]], "nautilus_trader.backtest.exchange.SimulatedExchange": [[6, 3, 1, "", "account_type"], [6, 2, 1, "", "add_instrument"], [6, 2, 1, "", "adjust_account"], [6, 3, 1, "", "base_currency"], [6, 2, 1, "", "best_ask_price"], [6, 2, 1, "", "best_bid_price"], [6, 3, 1, "", "book_type"], [6, 3, 1, "", "cache"], [6, 3, 1, "", "default_leverage"], [6, 3, 1, "", "exec_client"], [6, 3, 1, "", "fill_model"], [6, 2, 1, "", "get_account"], [6, 2, 1, "", "get_book"], [6, 2, 1, "", "get_books"], [6, 2, 1, "", "get_matching_engines"], [6, 2, 1, "", "get_open_ask_orders"], [6, 2, 1, "", "get_open_bid_orders"], [6, 2, 1, "", "get_open_orders"], [6, 3, 1, "", "id"], [6, 2, 1, "", "initialize_account"], [6, 3, 1, "", "instruments"], [6, 3, 1, "", "is_frozen_account"], [6, 3, 1, "", "latency_model"], [6, 3, 1, "", "leverages"], [6, 3, 1, "", "modules"], [6, 3, 1, "", "msgbus"], [6, 3, 1, "", "oms_type"], [6, 2, 1, "", "process"], [6, 2, 1, "", "process_bar"], [6, 2, 1, "", "process_order_book"], [6, 2, 1, "", "process_quote_tick"], [6, 2, 1, "", "process_trade_tick"], [6, 2, 1, "", "register_client"], [6, 3, 1, "", "reject_stop_orders"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "send"], [6, 2, 1, "", "set_fill_model"], [6, 2, 1, "", "set_latency_model"], [6, 3, 1, "", "starting_balances"]], "nautilus_trader.backtest.execution_client": [[6, 1, 1, "", "BacktestExecClient"]], "nautilus_trader.backtest.execution_client.BacktestExecClient": [[6, 3, 1, "", "account_id"], [6, 3, 1, "", "account_type"], [6, 3, 1, "", "base_currency"], [6, 2, 1, "", "cancel_all_orders"], [6, 2, 1, "", "cancel_order"], [6, 2, 1, "", "degrade"], [6, 2, 1, "", "dispose"], [6, 2, 1, "", "fault"], [6, 2, 1, "", "fully_qualified_name"], [6, 2, 1, "", "generate_account_state"], [6, 2, 1, "", "generate_order_accepted"], [6, 2, 1, "", "generate_order_cancel_rejected"], [6, 2, 1, "", "generate_order_canceled"], [6, 2, 1, "", "generate_order_expired"], [6, 2, 1, "", "generate_order_filled"], [6, 2, 1, "", "generate_order_modify_rejected"], [6, 2, 1, "", "generate_order_pending_cancel"], [6, 2, 1, "", "generate_order_pending_update"], [6, 2, 1, "", "generate_order_rejected"], [6, 2, 1, "", "generate_order_submitted"], [6, 2, 1, "", "generate_order_triggered"], [6, 2, 1, "", "generate_order_updated"], [6, 2, 1, "", "get_account"], [6, 3, 1, "", "id"], [6, 3, 1, "", "is_connected"], [6, 3, 1, "", "is_degraded"], [6, 3, 1, "", "is_disposed"], [6, 3, 1, "", "is_faulted"], [6, 3, 1, "", "is_initialized"], [6, 3, 1, "", "is_running"], [6, 3, 1, "", "is_stopped"], [6, 2, 1, "", "modify_order"], [6, 3, 1, "", "oms_type"], [6, 2, 1, "", "query_order"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "resume"], [6, 2, 1, "", "start"], [6, 3, 1, "", "state"], [6, 2, 1, "", "stop"], [6, 2, 1, "", "submit_order"], [6, 2, 1, "", "submit_order_list"], [6, 3, 1, "", "trader_id"], [6, 3, 1, "", "type"], [6, 3, 1, "", "venue"]], "nautilus_trader.backtest.models": [[6, 1, 1, "", "FillModel"], [6, 1, 1, "", "LatencyModel"]], "nautilus_trader.backtest.models.FillModel": [[6, 2, 1, "", "is_limit_filled"], [6, 2, 1, "", "is_slipped"], [6, 2, 1, "", "is_stop_filled"], [6, 3, 1, "", "prob_fill_on_limit"], [6, 3, 1, "", "prob_fill_on_stop"], [6, 3, 1, "", "prob_slippage"]], "nautilus_trader.backtest.models.LatencyModel": [[6, 3, 1, "", "base_latency_nanos"], [6, 3, 1, "", "cancel_latency_nanos"], [6, 3, 1, "", "insert_latency_nanos"], [6, 3, 1, "", "update_latency_nanos"]], "nautilus_trader.backtest.modules": [[6, 1, 1, "", "FXRolloverInterestModule"], [6, 1, 1, "", "SimulationModule"]], "nautilus_trader.backtest.modules.FXRolloverInterestModule": [[6, 2, 1, "", "log_diagnostics"], [6, 2, 1, "", "process"], [6, 2, 1, "", "register_exchange"], [6, 2, 1, "", "reset"]], "nautilus_trader.backtest.modules.SimulationModule": [[6, 2, 1, "", "log_diagnostics"], [6, 2, 1, "", "process"], [6, 2, 1, "", "register_exchange"], [6, 2, 1, "", "reset"]], "nautilus_trader.backtest.node": [[6, 1, 1, "", "BacktestNode"]], "nautilus_trader.backtest.node.BacktestNode": [[6, 5, 1, "", "configs"], [6, 2, 1, "", "get_engine"], [6, 2, 1, "", "get_engines"], [6, 2, 1, "", "run"]], "nautilus_trader.backtest.results": [[6, 1, 1, "", "BacktestResult"], [6, 4, 1, "", "ensure_plotting"]], "nautilus_trader.cache": [[7, 0, 0, "-", "base"], [7, 0, 0, "-", "cache"], [7, 0, 0, "-", "database"]], "nautilus_trader.cache.base": [[7, 1, 1, "", "CacheFacade"]], "nautilus_trader.cache.base.CacheFacade": [[7, 2, 1, "", "account"], [7, 2, 1, "", "account_for_venue"], [7, 2, 1, "", "account_id"], [7, 2, 1, "", "accounts"], [7, 2, 1, "", "bar"], [7, 2, 1, "", "bar_count"], [7, 2, 1, "", "bars"], [7, 2, 1, "", "book_update_count"], [7, 2, 1, "", "client_order_id"], [7, 2, 1, "", "client_order_ids"], [7, 2, 1, "", "client_order_ids_closed"], [7, 2, 1, "", "client_order_ids_emulated"], [7, 2, 1, "", "client_order_ids_inflight"], [7, 2, 1, "", "client_order_ids_open"], [7, 2, 1, "", "get_xrate"], [7, 2, 1, "", "has_bars"], [7, 2, 1, "", "has_order_book"], [7, 2, 1, "", "has_quote_ticks"], [7, 2, 1, "", "has_tickers"], [7, 2, 1, "", "has_trade_ticks"], [7, 2, 1, "", "instrument"], [7, 2, 1, "", "instrument_ids"], [7, 2, 1, "", "instruments"], [7, 2, 1, "", "is_order_closed"], [7, 2, 1, "", "is_order_emulated"], [7, 2, 1, "", "is_order_inflight"], [7, 2, 1, "", "is_order_open"], [7, 2, 1, "", "is_position_closed"], [7, 2, 1, "", "is_position_open"], [7, 2, 1, "", "order"], [7, 2, 1, "", "order_book"], [7, 2, 1, "", "order_exists"], [7, 2, 1, "", "orders"], [7, 2, 1, "", "orders_closed"], [7, 2, 1, "", "orders_closed_count"], [7, 2, 1, "", "orders_emulated"], [7, 2, 1, "", "orders_emulated_count"], [7, 2, 1, "", "orders_for_position"], [7, 2, 1, "", "orders_inflight"], [7, 2, 1, "", "orders_inflight_count"], [7, 2, 1, "", "orders_open"], [7, 2, 1, "", "orders_open_count"], [7, 2, 1, "", "orders_total_count"], [7, 2, 1, "", "position"], [7, 2, 1, "", "position_closed_ids"], [7, 2, 1, "", "position_exists"], [7, 2, 1, "", "position_for_order"], [7, 2, 1, "", "position_id"], [7, 2, 1, "", "position_ids"], [7, 2, 1, "", "position_open_ids"], [7, 2, 1, "", "position_snapshots"], [7, 2, 1, "", "positions"], [7, 2, 1, "", "positions_closed"], [7, 2, 1, "", "positions_closed_count"], [7, 2, 1, "", "positions_open"], [7, 2, 1, "", "positions_open_count"], [7, 2, 1, "", "positions_total_count"], [7, 2, 1, "", "price"], [7, 2, 1, "", "quote_tick"], [7, 2, 1, "", "quote_tick_count"], [7, 2, 1, "", "quote_ticks"], [7, 2, 1, "", "strategy_id_for_order"], [7, 2, 1, "", "strategy_id_for_position"], [7, 2, 1, "", "strategy_ids"], [7, 2, 1, "", "ticker"], [7, 2, 1, "", "ticker_count"], [7, 2, 1, "", "tickers"], [7, 2, 1, "", "trade_tick"], [7, 2, 1, "", "trade_tick_count"], [7, 2, 1, "", "trade_ticks"], [7, 2, 1, "", "venue_order_id"]], "nautilus_trader.cache.cache": [[7, 1, 1, "", "Cache"]], "nautilus_trader.cache.cache.Cache": [[7, 2, 1, "", "account"], [7, 2, 1, "", "account_for_venue"], [7, 2, 1, "", "account_id"], [7, 2, 1, "", "accounts"], [7, 2, 1, "", "add_account"], [7, 2, 1, "", "add_bar"], [7, 2, 1, "", "add_bars"], [7, 2, 1, "", "add_currency"], [7, 2, 1, "", "add_instrument"], [7, 2, 1, "", "add_order"], [7, 2, 1, "", "add_order_book"], [7, 2, 1, "", "add_position"], [7, 2, 1, "", "add_position_id"], [7, 2, 1, "", "add_quote_tick"], [7, 2, 1, "", "add_quote_ticks"], [7, 2, 1, "", "add_submit_order_command"], [7, 2, 1, "", "add_submit_order_list_command"], [7, 2, 1, "", "add_ticker"], [7, 2, 1, "", "add_trade_tick"], [7, 2, 1, "", "add_trade_ticks"], [7, 2, 1, "", "bar"], [7, 3, 1, "", "bar_capacity"], [7, 2, 1, "", "bar_count"], [7, 2, 1, "", "bars"], [7, 2, 1, "", "book_update_count"], [7, 2, 1, "", "build_index"], [7, 2, 1, "", "cache_accounts"], [7, 2, 1, "", "cache_commands"], [7, 2, 1, "", "cache_currencies"], [7, 2, 1, "", "cache_instruments"], [7, 2, 1, "", "cache_orders"], [7, 2, 1, "", "cache_positions"], [7, 2, 1, "", "check_integrity"], [7, 2, 1, "", "check_residuals"], [7, 2, 1, "", "clear_cache"], [7, 2, 1, "", "clear_index"], [7, 2, 1, "", "client_order_id"], [7, 2, 1, "", "client_order_ids"], [7, 2, 1, "", "client_order_ids_closed"], [7, 2, 1, "", "client_order_ids_emulated"], [7, 2, 1, "", "client_order_ids_inflight"], [7, 2, 1, "", "client_order_ids_open"], [7, 2, 1, "", "delete_strategy"], [7, 2, 1, "", "flush_db"], [7, 2, 1, "", "get_xrate"], [7, 2, 1, "", "has_bars"], [7, 2, 1, "", "has_order_book"], [7, 2, 1, "", "has_quote_ticks"], [7, 2, 1, "", "has_tickers"], [7, 2, 1, "", "has_trade_ticks"], [7, 2, 1, "", "instrument"], [7, 2, 1, "", "instrument_ids"], [7, 2, 1, "", "instruments"], [7, 2, 1, "", "is_order_closed"], [7, 2, 1, "", "is_order_emulated"], [7, 2, 1, "", "is_order_inflight"], [7, 2, 1, "", "is_order_open"], [7, 2, 1, "", "is_position_closed"], [7, 2, 1, "", "is_position_open"], [7, 2, 1, "", "load_account"], [7, 2, 1, "", "load_instrument"], [7, 2, 1, "", "load_order"], [7, 2, 1, "", "load_position"], [7, 2, 1, "", "load_strategy"], [7, 2, 1, "", "load_submit_order_command"], [7, 2, 1, "", "load_submit_order_list_command"], [7, 2, 1, "", "order"], [7, 2, 1, "", "order_book"], [7, 2, 1, "", "order_exists"], [7, 2, 1, "", "orders"], [7, 2, 1, "", "orders_closed"], [7, 2, 1, "", "orders_closed_count"], [7, 2, 1, "", "orders_emulated"], [7, 2, 1, "", "orders_emulated_count"], [7, 2, 1, "", "orders_for_position"], [7, 2, 1, "", "orders_inflight"], [7, 2, 1, "", "orders_inflight_count"], [7, 2, 1, "", "orders_open"], [7, 2, 1, "", "orders_open_count"], [7, 2, 1, "", "orders_total_count"], [7, 2, 1, "", "position"], [7, 2, 1, "", "position_closed_ids"], [7, 2, 1, "", "position_exists"], [7, 2, 1, "", "position_for_order"], [7, 2, 1, "", "position_id"], [7, 2, 1, "", "position_ids"], [7, 2, 1, "", "position_open_ids"], [7, 2, 1, "", "position_snapshots"], [7, 2, 1, "", "positions"], [7, 2, 1, "", "positions_closed"], [7, 2, 1, "", "positions_closed_count"], [7, 2, 1, "", "positions_open"], [7, 2, 1, "", "positions_open_count"], [7, 2, 1, "", "positions_total_count"], [7, 2, 1, "", "price"], [7, 2, 1, "", "quote_tick"], [7, 2, 1, "", "quote_tick_count"], [7, 2, 1, "", "quote_ticks"], [7, 2, 1, "", "reset"], [7, 2, 1, "", "snapshot_position"], [7, 2, 1, "", "strategy_id_for_order"], [7, 2, 1, "", "strategy_id_for_position"], [7, 2, 1, "", "strategy_ids"], [7, 3, 1, "", "tick_capacity"], [7, 2, 1, "", "ticker"], [7, 2, 1, "", "ticker_count"], [7, 2, 1, "", "tickers"], [7, 2, 1, "", "trade_tick"], [7, 2, 1, "", "trade_tick_count"], [7, 2, 1, "", "trade_ticks"], [7, 2, 1, "", "update_account"], [7, 2, 1, "", "update_order"], [7, 2, 1, "", "update_position"], [7, 2, 1, "", "update_strategy"], [7, 2, 1, "", "venue_order_id"]], "nautilus_trader.cache.database": [[7, 1, 1, "", "CacheDatabase"]], "nautilus_trader.cache.database.CacheDatabase": [[7, 2, 1, "", "add_account"], [7, 2, 1, "", "add_currency"], [7, 2, 1, "", "add_instrument"], [7, 2, 1, "", "add_order"], [7, 2, 1, "", "add_position"], [7, 2, 1, "", "add_submit_order_command"], [7, 2, 1, "", "add_submit_order_list_command"], [7, 2, 1, "", "delete_strategy"], [7, 2, 1, "", "flush"], [7, 2, 1, "", "load_account"], [7, 2, 1, "", "load_accounts"], [7, 2, 1, "", "load_currencies"], [7, 2, 1, "", "load_currency"], [7, 2, 1, "", "load_instrument"], [7, 2, 1, "", "load_instruments"], [7, 2, 1, "", "load_order"], [7, 2, 1, "", "load_orders"], [7, 2, 1, "", "load_position"], [7, 2, 1, "", "load_positions"], [7, 2, 1, "", "load_strategy"], [7, 2, 1, "", "load_submit_order_command"], [7, 2, 1, "", "load_submit_order_commands"], [7, 2, 1, "", "load_submit_order_list_command"], [7, 2, 1, "", "load_submit_order_list_commands"], [7, 2, 1, "", "update_account"], [7, 2, 1, "", "update_order"], [7, 2, 1, "", "update_position"], [7, 2, 1, "", "update_strategy"]], "nautilus_trader.common": [[8, 0, 0, "-", "actor"], [8, 0, 0, "-", "clock"], [8, 0, 0, "-", "component"], [8, 0, 0, "-", "enums"], [8, 0, 0, "-", "factories"], [8, 0, 0, "-", "generators"], [8, 0, 0, "-", "logging"], [8, 0, 0, "-", "providers"], [8, 0, 0, "-", "queue"], [8, 0, 0, "-", "throttler"], [8, 0, 0, "-", "timer"]], "nautilus_trader.common.actor": [[8, 1, 1, "", "Actor"]], "nautilus_trader.common.actor.Actor": [[8, 3, 1, "", "cache"], [8, 3, 1, "", "clock"], [8, 2, 1, "", "degrade"], [8, 2, 1, "", "deregister_warning_event"], [8, 2, 1, "", "dispose"], [8, 2, 1, "", "fault"], [8, 2, 1, "", "fully_qualified_name"], [8, 2, 1, "", "handle_bar"], [8, 2, 1, "", "handle_bars"], [8, 2, 1, "", "handle_data"], [8, 2, 1, "", "handle_event"], [8, 2, 1, "", "handle_historical_data"], [8, 2, 1, "", "handle_instrument"], [8, 2, 1, "", "handle_instrument_close_price"], [8, 2, 1, "", "handle_instrument_status_update"], [8, 2, 1, "", "handle_instruments"], [8, 2, 1, "", "handle_order_book"], [8, 2, 1, "", "handle_order_book_delta"], [8, 2, 1, "", "handle_quote_tick"], [8, 2, 1, "", "handle_quote_ticks"], [8, 2, 1, "", "handle_ticker"], [8, 2, 1, "", "handle_trade_tick"], [8, 2, 1, "", "handle_trade_ticks"], [8, 2, 1, "", "handle_venue_status_update"], [8, 3, 1, "", "id"], [8, 3, 1, "", "is_degraded"], [8, 3, 1, "", "is_disposed"], [8, 3, 1, "", "is_faulted"], [8, 3, 1, "", "is_initialized"], [8, 3, 1, "", "is_running"], [8, 3, 1, "", "is_stopped"], [8, 3, 1, "", "log"], [8, 3, 1, "", "msgbus"], [8, 2, 1, "", "on_bar"], [8, 2, 1, "", "on_data"], [8, 2, 1, "", "on_degrade"], [8, 2, 1, "", "on_dispose"], [8, 2, 1, "", "on_event"], [8, 2, 1, "", "on_fault"], [8, 2, 1, "", "on_historical_data"], [8, 2, 1, "", "on_instrument"], [8, 2, 1, "", "on_instrument_close_price"], [8, 2, 1, "", "on_instrument_status_update"], [8, 2, 1, "", "on_order_book"], [8, 2, 1, "", "on_order_book_delta"], [8, 2, 1, "", "on_quote_tick"], [8, 2, 1, "", "on_reset"], [8, 2, 1, "", "on_resume"], [8, 2, 1, "", "on_start"], [8, 2, 1, "", "on_stop"], [8, 2, 1, "", "on_ticker"], [8, 2, 1, "", "on_trade_tick"], [8, 2, 1, "", "on_venue_status_update"], [8, 2, 1, "", "publish_data"], [8, 2, 1, "", "publish_signal"], [8, 2, 1, "", "register_base"], [8, 2, 1, "", "register_warning_event"], [8, 2, 1, "", "request_bars"], [8, 2, 1, "", "request_data"], [8, 2, 1, "", "request_instrument"], [8, 2, 1, "", "request_instruments"], [8, 2, 1, "", "request_quote_ticks"], [8, 2, 1, "", "request_trade_ticks"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "resume"], [8, 2, 1, "", "start"], [8, 3, 1, "", "state"], [8, 2, 1, "", "stop"], [8, 2, 1, "", "subscribe_bars"], [8, 2, 1, "", "subscribe_data"], [8, 2, 1, "", "subscribe_instrument"], [8, 2, 1, "", "subscribe_instrument_close_prices"], [8, 2, 1, "", "subscribe_instrument_status_updates"], [8, 2, 1, "", "subscribe_instruments"], [8, 2, 1, "", "subscribe_order_book_deltas"], [8, 2, 1, "", "subscribe_order_book_snapshots"], [8, 2, 1, "", "subscribe_quote_ticks"], [8, 2, 1, "", "subscribe_ticker"], [8, 2, 1, "", "subscribe_trade_ticks"], [8, 2, 1, "", "subscribe_venue_status_updates"], [8, 2, 1, "", "to_importable_config"], [8, 3, 1, "", "trader_id"], [8, 3, 1, "", "type"], [8, 2, 1, "", "unsubscribe_bars"], [8, 2, 1, "", "unsubscribe_data"], [8, 2, 1, "", "unsubscribe_instrument"], [8, 2, 1, "", "unsubscribe_instruments"], [8, 2, 1, "", "unsubscribe_order_book_deltas"], [8, 2, 1, "", "unsubscribe_order_book_snapshots"], [8, 2, 1, "", "unsubscribe_quote_ticks"], [8, 2, 1, "", "unsubscribe_ticker"], [8, 2, 1, "", "unsubscribe_trade_ticks"], [8, 2, 1, "", "unsubscribe_venue_status_updates"]], "nautilus_trader.common.clock": [[8, 1, 1, "", "Clock"], [8, 1, 1, "", "LiveClock"], [8, 1, 1, "", "TestClock"]], "nautilus_trader.common.clock.Clock": [[8, 2, 1, "", "cancel_timer"], [8, 2, 1, "", "cancel_timers"], [8, 2, 1, "", "local_now"], [8, 2, 1, "", "next_time_ns"], [8, 2, 1, "", "register_default_handler"], [8, 2, 1, "", "set_time_alert"], [8, 2, 1, "", "set_time_alert_ns"], [8, 2, 1, "", "set_timer"], [8, 2, 1, "", "set_timer_ns"], [8, 3, 1, "", "timer_count"], [8, 3, 1, "", "timer_names"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "timestamp_ms"], [8, 2, 1, "", "timestamp_ns"], [8, 2, 1, "", "utc_now"]], "nautilus_trader.common.clock.LiveClock": [[8, 2, 1, "", "cancel_timer"], [8, 2, 1, "", "cancel_timers"], [8, 2, 1, "", "local_now"], [8, 2, 1, "", "next_time_ns"], [8, 2, 1, "", "register_default_handler"], [8, 2, 1, "", "set_offset"], [8, 2, 1, "", "set_time_alert"], [8, 2, 1, "", "set_time_alert_ns"], [8, 2, 1, "", "set_timer"], [8, 2, 1, "", "set_timer_ns"], [8, 3, 1, "", "timer_count"], [8, 3, 1, "", "timer_names"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "timestamp_ms"], [8, 2, 1, "", "timestamp_ns"], [8, 2, 1, "", "utc_now"]], "nautilus_trader.common.clock.TestClock": [[8, 2, 1, "", "advance_time"], [8, 2, 1, "", "cancel_timer"], [8, 2, 1, "", "cancel_timers"], [8, 2, 1, "", "local_now"], [8, 2, 1, "", "next_time_ns"], [8, 2, 1, "", "register_default_handler"], [8, 2, 1, "", "set_time"], [8, 2, 1, "", "set_time_alert"], [8, 2, 1, "", "set_time_alert_ns"], [8, 2, 1, "", "set_timer"], [8, 2, 1, "", "set_timer_ns"], [8, 3, 1, "", "timer_count"], [8, 3, 1, "", "timer_names"], [8, 2, 1, "", "timestamp"], [8, 2, 1, "", "timestamp_ms"], [8, 2, 1, "", "timestamp_ns"], [8, 2, 1, "", "utc_now"]], "nautilus_trader.common.component": [[8, 1, 1, "", "Component"], [8, 1, 1, "", "ComponentFSMFactory"]], "nautilus_trader.common.component.Component": [[8, 2, 1, "", "degrade"], [8, 2, 1, "", "dispose"], [8, 2, 1, "", "fault"], [8, 2, 1, "", "fully_qualified_name"], [8, 3, 1, "", "id"], [8, 3, 1, "", "is_degraded"], [8, 3, 1, "", "is_disposed"], [8, 3, 1, "", "is_faulted"], [8, 3, 1, "", "is_initialized"], [8, 3, 1, "", "is_running"], [8, 3, 1, "", "is_stopped"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "resume"], [8, 2, 1, "", "start"], [8, 3, 1, "", "state"], [8, 2, 1, "", "stop"], [8, 3, 1, "", "trader_id"], [8, 3, 1, "", "type"]], "nautilus_trader.common.component.ComponentFSMFactory": [[8, 2, 1, "", "get_state_transition_table"]], "nautilus_trader.common.enums": [[8, 1, 1, "", "ComponentState"], [8, 1, 1, "", "ComponentTrigger"], [8, 1, 1, "", "LogColor"], [8, 1, 1, "", "LogLevel"]], "nautilus_trader.common.enums.ComponentState": [[8, 2, 1, "", "as_integer_ratio"], [8, 2, 1, "", "bit_count"], [8, 2, 1, "", "bit_length"], [8, 2, 1, "", "conjugate"], [8, 3, 1, "", "denominator"], [8, 2, 1, "", "from_bytes"], [8, 3, 1, "", "imag"], [8, 3, 1, "", "numerator"], [8, 3, 1, "", "real"], [8, 2, 1, "", "to_bytes"]], "nautilus_trader.common.enums.ComponentTrigger": [[8, 2, 1, "", "as_integer_ratio"], [8, 2, 1, "", "bit_count"], [8, 2, 1, "", "bit_length"], [8, 2, 1, "", "conjugate"], [8, 3, 1, "", "denominator"], [8, 2, 1, "", "from_bytes"], [8, 3, 1, "", "imag"], [8, 3, 1, "", "numerator"], [8, 3, 1, "", "real"], [8, 2, 1, "", "to_bytes"]], "nautilus_trader.common.enums.LogColor": [[8, 2, 1, "", "as_integer_ratio"], [8, 2, 1, "", "bit_count"], [8, 2, 1, "", "bit_length"], [8, 2, 1, "", "conjugate"], [8, 3, 1, "", "denominator"], [8, 2, 1, "", "from_bytes"], [8, 3, 1, "", "imag"], [8, 3, 1, "", "numerator"], [8, 3, 1, "", "real"], [8, 2, 1, "", "to_bytes"]], "nautilus_trader.common.enums.LogLevel": [[8, 2, 1, "", "as_integer_ratio"], [8, 2, 1, "", "bit_count"], [8, 2, 1, "", "bit_length"], [8, 2, 1, "", "conjugate"], [8, 3, 1, "", "denominator"], [8, 2, 1, "", "from_bytes"], [8, 3, 1, "", "imag"], [8, 3, 1, "", "numerator"], [8, 3, 1, "", "real"], [8, 2, 1, "", "to_bytes"]], "nautilus_trader.common.factories": [[8, 1, 1, "", "OrderFactory"]], "nautilus_trader.common.factories.OrderFactory": [[8, 2, 1, "", "bracket_limit_entry"], [8, 2, 1, "", "bracket_market_entry"], [8, 2, 1, "", "bracket_stop_limit_entry_stop_limit_tp"], [8, 3, 1, "", "count"], [8, 2, 1, "", "limit"], [8, 2, 1, "", "limit_if_touched"], [8, 2, 1, "", "market"], [8, 2, 1, "", "market_if_touched"], [8, 2, 1, "", "market_to_limit"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_count"], [8, 2, 1, "", "stop_limit"], [8, 2, 1, "", "stop_market"], [8, 3, 1, "", "strategy_id"], [8, 3, 1, "", "trader_id"], [8, 2, 1, "", "trailing_stop_limit"], [8, 2, 1, "", "trailing_stop_market"]], "nautilus_trader.common.generators": [[8, 1, 1, "", "ClientOrderIdGenerator"], [8, 1, 1, "", "IdentifierGenerator"], [8, 1, 1, "", "PositionIdGenerator"]], "nautilus_trader.common.generators.ClientOrderIdGenerator": [[8, 3, 1, "", "count"], [8, 2, 1, "", "generate"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_count"]], "nautilus_trader.common.generators.PositionIdGenerator": [[8, 2, 1, "", "generate"], [8, 2, 1, "", "get_count"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "set_count"]], "nautilus_trader.common.logging": [[8, 1, 1, "", "LiveLogger"], [8, 1, 1, "", "Logger"], [8, 1, 1, "", "LoggerAdapter"], [8, 4, 1, "", "log_memory"], [8, 4, 1, "", "nautilus_header"]], "nautilus_trader.common.logging.LiveLogger": [[8, 2, 1, "", "change_clock"], [8, 2, 1, "", "get_run_task"], [8, 3, 1, "", "instance_id"], [8, 3, 1, "", "is_bypassed"], [8, 3, 1, "", "is_running"], [8, 3, 1, "", "last_blocked"], [8, 3, 1, "", "machine_id"], [8, 2, 1, "", "register_sink"], [8, 2, 1, "", "start"], [8, 2, 1, "", "stop"], [8, 3, 1, "", "trader_id"]], "nautilus_trader.common.logging.Logger": [[8, 2, 1, "", "change_clock"], [8, 3, 1, "", "instance_id"], [8, 3, 1, "", "is_bypassed"], [8, 3, 1, "", "machine_id"], [8, 2, 1, "", "register_sink"], [8, 3, 1, "", "trader_id"]], "nautilus_trader.common.logging.LoggerAdapter": [[8, 3, 1, "", "component"], [8, 2, 1, "", "critical"], [8, 2, 1, "", "debug"], [8, 2, 1, "", "error"], [8, 2, 1, "", "exception"], [8, 2, 1, "", "get_logger"], [8, 2, 1, "", "info"], [8, 3, 1, "", "instance_id"], [8, 3, 1, "", "is_bypassed"], [8, 3, 1, "", "machine_id"], [8, 3, 1, "", "trader_id"], [8, 2, 1, "", "warning"]], "nautilus_trader.common.providers": [[8, 1, 1, "", "InstrumentProvider"]], "nautilus_trader.common.providers.InstrumentProvider": [[8, 2, 1, "", "add"], [8, 2, 1, "", "add_bulk"], [8, 2, 1, "", "add_currency"], [8, 5, 1, "", "count"], [8, 2, 1, "", "currencies"], [8, 2, 1, "", "currency"], [8, 2, 1, "", "find"], [8, 2, 1, "", "get_all"], [8, 2, 1, "", "initialize"], [8, 2, 1, "", "list_all"], [8, 2, 1, "", "load"], [8, 2, 1, "", "load_all"], [8, 2, 1, "", "load_all_async"], [8, 2, 1, "", "load_async"], [8, 2, 1, "", "load_ids"], [8, 2, 1, "", "load_ids_async"], [8, 5, 1, "", "venue"]], "nautilus_trader.common.queue": [[8, 1, 1, "", "Queue"]], "nautilus_trader.common.queue.Queue": [[8, 3, 1, "", "count"], [8, 2, 1, "", "empty"], [8, 2, 1, "", "full"], [8, 2, 1, "", "get"], [8, 2, 1, "", "get_nowait"], [8, 3, 1, "", "maxsize"], [8, 2, 1, "", "peek_back"], [8, 2, 1, "", "peek_front"], [8, 2, 1, "", "peek_index"], [8, 2, 1, "", "put"], [8, 2, 1, "", "put_nowait"], [8, 2, 1, "", "qsize"], [8, 2, 1, "", "to_list"]], "nautilus_trader.common.throttler": [[8, 1, 1, "", "Throttler"]], "nautilus_trader.common.throttler.Throttler": [[8, 3, 1, "", "interval"], [8, 3, 1, "", "is_limiting"], [8, 3, 1, "", "limit"], [8, 3, 1, "", "name"], [8, 3, 1, "", "qsize"], [8, 3, 1, "", "recv_count"], [8, 2, 1, "", "send"], [8, 3, 1, "", "sent_count"], [8, 2, 1, "", "used"]], "nautilus_trader.common.timer": [[8, 1, 1, "", "LiveTimer"], [8, 1, 1, "", "LoopTimer"], [8, 1, 1, "", "ThreadTimer"], [8, 1, 1, "", "TimeEvent"], [8, 1, 1, "", "TimeEventHandler"]], "nautilus_trader.common.timer.LiveTimer": [[8, 3, 1, "", "callback"], [8, 2, 1, "", "cancel"], [8, 3, 1, "", "interval_ns"], [8, 3, 1, "", "is_expired"], [8, 2, 1, "", "iterate_next_time"], [8, 3, 1, "", "name"], [8, 3, 1, "", "next_time_ns"], [8, 2, 1, "", "pop_event"], [8, 2, 1, "", "repeat"], [8, 3, 1, "", "start_time_ns"], [8, 3, 1, "", "stop_time_ns"]], "nautilus_trader.common.timer.LoopTimer": [[8, 3, 1, "", "callback"], [8, 2, 1, "", "cancel"], [8, 3, 1, "", "interval_ns"], [8, 3, 1, "", "is_expired"], [8, 2, 1, "", "iterate_next_time"], [8, 3, 1, "", "name"], [8, 3, 1, "", "next_time_ns"], [8, 2, 1, "", "pop_event"], [8, 2, 1, "", "repeat"], [8, 3, 1, "", "start_time_ns"], [8, 3, 1, "", "stop_time_ns"]], "nautilus_trader.common.timer.ThreadTimer": [[8, 3, 1, "", "callback"], [8, 2, 1, "", "cancel"], [8, 3, 1, "", "interval_ns"], [8, 3, 1, "", "is_expired"], [8, 2, 1, "", "iterate_next_time"], [8, 3, 1, "", "name"], [8, 3, 1, "", "next_time_ns"], [8, 2, 1, "", "pop_event"], [8, 2, 1, "", "repeat"], [8, 3, 1, "", "start_time_ns"], [8, 3, 1, "", "stop_time_ns"]], "nautilus_trader.common.timer.TimeEvent": [[8, 3, 1, "", "category"], [8, 3, 1, "", "id"], [8, 3, 1, "", "name"], [8, 3, 1, "", "ts_event"], [8, 3, 1, "", "ts_init"]], "nautilus_trader.common.timer.TimeEventHandler": [[8, 3, 1, "", "event"], [8, 2, 1, "", "handle"], [8, 2, 1, "", "handle_py"]], "nautilus_trader.config": [[9, 0, 0, "-", "backtest"], [9, 0, 0, "-", "common"], [9, 0, 0, "-", "live"]], "nautilus_trader.config.backtest": [[9, 1, 1, "", "BacktestDataConfig"], [9, 1, 1, "", "BacktestEngineConfig"], [9, 1, 1, "", "BacktestRunConfig"], [9, 1, 1, "", "BacktestVenueConfig"], [9, 4, 1, "", "parse_filters_expr"]], "nautilus_trader.config.backtest.BacktestDataConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.backtest.BacktestEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.backtest.BacktestRunConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.backtest.BacktestVenueConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common": [[9, 1, 1, "", "ActorConfig"], [9, 1, 1, "", "ActorFactory"], [9, 1, 1, "", "CacheConfig"], [9, 1, 1, "", "CacheDatabaseConfig"], [9, 1, 1, "", "DataEngineConfig"], [9, 1, 1, "", "ExecEngineConfig"], [9, 1, 1, "", "ImportableActorConfig"], [9, 1, 1, "", "ImportableStrategyConfig"], [9, 1, 1, "", "InstrumentProviderConfig"], [9, 1, 1, "", "NautilusConfig"], [9, 1, 1, "", "NautilusKernelConfig"], [9, 1, 1, "", "OrderEmulatorConfig"], [9, 1, 1, "", "RiskEngineConfig"], [9, 1, 1, "", "StrategyConfig"], [9, 1, 1, "", "StrategyFactory"], [9, 1, 1, "", "StreamingConfig"]], "nautilus_trader.config.common.ActorConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.ActorFactory": [[9, 2, 1, "", "create"]], "nautilus_trader.config.common.CacheConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.CacheDatabaseConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.DataEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.ExecEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.ImportableActorConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.ImportableStrategyConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.InstrumentProviderConfig": [[9, 1, 1, "", "Config"], [9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.NautilusConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.NautilusKernelConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.OrderEmulatorConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.RiskEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.StrategyConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.common.StrategyFactory": [[9, 2, 1, "", "create"]], "nautilus_trader.config.common.StreamingConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live": [[9, 1, 1, "", "ImportableClientConfig"], [9, 1, 1, "", "LiveDataClientConfig"], [9, 1, 1, "", "LiveDataEngineConfig"], [9, 1, 1, "", "LiveExecClientConfig"], [9, 1, 1, "", "LiveExecEngineConfig"], [9, 1, 1, "", "LiveRiskEngineConfig"], [9, 1, 1, "", "RoutingConfig"], [9, 1, 1, "", "TradingNodeConfig"]], "nautilus_trader.config.live.ImportableClientConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.LiveDataClientConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.LiveDataEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.LiveExecClientConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.LiveExecEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.LiveRiskEngineConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.RoutingConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"]], "nautilus_trader.config.live.TradingNodeConfig": [[9, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dict"], [9, 2, 1, "", "fully_qualified_name"], [9, 2, 1, "", "json"], [9, 2, 1, "", "update_forward_refs"], [9, 2, 1, "", "validate_importable_data_clients"], [9, 2, 1, "", "validate_importable_exec_clients"]], "nautilus_trader.core": [[10, 0, 0, "-", "collections"], [10, 0, 0, "-", "datetime"], [10, 0, 0, "-", "fsm"], [10, 0, 0, "-", "message"], [10, 0, 0, "-", "stats"], [10, 0, 0, "-", "uuid"]], "nautilus_trader.core.collections": [[10, 4, 1, "", "bisect_left"], [10, 4, 1, "", "bisect_right"]], "nautilus_trader.core.datetime": [[10, 4, 1, "", "as_utc_index"], [10, 4, 1, "", "as_utc_timestamp"], [10, 4, 1, "", "dt_to_unix_nanos"], [10, 4, 1, "", "format_iso8601"], [10, 4, 1, "", "is_datetime_utc"], [10, 4, 1, "", "is_tz_aware"], [10, 4, 1, "", "is_tz_naive"], [10, 4, 1, "", "maybe_dt_to_unix_nanos"], [10, 4, 1, "", "maybe_unix_nanos_to_dt"], [10, 4, 1, "", "micros_to_nanos"], [10, 4, 1, "", "millis_to_nanos"], [10, 4, 1, "", "nanos_to_micros"], [10, 4, 1, "", "nanos_to_millis"], [10, 4, 1, "", "nanos_to_secs"], [10, 4, 1, "", "secs_to_millis"], [10, 4, 1, "", "secs_to_nanos"], [10, 4, 1, "", "unix_nanos_to_dt"]], "nautilus_trader.core.fsm": [[10, 1, 1, "", "FiniteStateMachine"], [10, 6, 1, "", "InvalidStateTrigger"]], "nautilus_trader.core.fsm.FiniteStateMachine": [[10, 3, 1, "", "state"], [10, 3, 1, "", "state_string"], [10, 2, 1, "", "trigger"]], "nautilus_trader.core.fsm.InvalidStateTrigger": [[10, 2, 1, "", "add_note"], [10, 2, 1, "", "with_traceback"]], "nautilus_trader.core.message": [[10, 1, 1, "", "Command"], [10, 1, 1, "", "Document"], [10, 1, 1, "", "Event"], [10, 1, 1, "", "Message"], [10, 1, 1, "", "Request"], [10, 1, 1, "", "Response"]], "nautilus_trader.core.message.Command": [[10, 3, 1, "", "category"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Document": [[10, 3, 1, "", "category"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Event": [[10, 3, 1, "", "category"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_event"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Message": [[10, 3, 1, "", "category"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Request": [[10, 3, 1, "", "callback"], [10, 3, 1, "", "category"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.message.Response": [[10, 3, 1, "", "category"], [10, 3, 1, "", "correlation_id"], [10, 3, 1, "", "id"], [10, 3, 1, "", "ts_init"]], "nautilus_trader.core.stats": [[10, 4, 1, "", "basis_points_as_percentage"], [10, 4, 1, "", "fast_mad"], [10, 4, 1, "", "fast_mad_with_mean"], [10, 4, 1, "", "fast_mean"], [10, 4, 1, "", "fast_mean_iterated"], [10, 4, 1, "", "fast_std"], [10, 4, 1, "", "fast_std_with_mean"]], "nautilus_trader.core.uuid": [[10, 1, 1, "", "UUID4"]], "nautilus_trader.data": [[11, 0, 0, "-", "aggregation"], [11, 0, 0, "-", "client"], [11, 0, 0, "-", "engine"], [11, 0, 0, "-", "messages"]], "nautilus_trader.data.aggregation": [[11, 1, 1, "", "BarAggregator"], [11, 1, 1, "", "BarBuilder"], [11, 1, 1, "", "TickBarAggregator"], [11, 1, 1, "", "TimeBarAggregator"], [11, 1, 1, "", "ValueBarAggregator"], [11, 1, 1, "", "VolumeBarAggregator"]], "nautilus_trader.data.aggregation.BarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.aggregation.BarBuilder": [[11, 2, 1, "", "build"], [11, 2, 1, "", "build_now"], [11, 3, 1, "", "count"], [11, 3, 1, "", "initialized"], [11, 3, 1, "", "price_precision"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "set_partial"], [11, 3, 1, "", "size_precision"], [11, 3, 1, "", "ts_last"], [11, 2, 1, "", "update"]], "nautilus_trader.data.aggregation.TickBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.aggregation.TimeBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "get_start_time"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"], [11, 3, 1, "", "interval"], [11, 3, 1, "", "interval_ns"], [11, 3, 1, "", "next_close_ns"], [11, 2, 1, "", "set_partial"], [11, 2, 1, "", "stop"]], "nautilus_trader.data.aggregation.ValueBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "get_cumulative_value"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.aggregation.VolumeBarAggregator": [[11, 3, 1, "", "bar_type"], [11, 2, 1, "", "handle_quote_tick"], [11, 2, 1, "", "handle_trade_tick"]], "nautilus_trader.data.client": [[11, 1, 1, "", "DataClient"], [11, 1, 1, "", "MarketDataClient"]], "nautilus_trader.data.client.DataClient": [[11, 2, 1, "", "degrade"], [11, 2, 1, "", "dispose"], [11, 2, 1, "", "fault"], [11, 2, 1, "", "fully_qualified_name"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_connected"], [11, 3, 1, "", "is_degraded"], [11, 3, 1, "", "is_disposed"], [11, 3, 1, "", "is_faulted"], [11, 3, 1, "", "is_initialized"], [11, 3, 1, "", "is_running"], [11, 3, 1, "", "is_stopped"], [11, 2, 1, "", "request"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "resume"], [11, 2, 1, "", "start"], [11, 3, 1, "", "state"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "subscribe"], [11, 2, 1, "", "subscribed_generic_data"], [11, 3, 1, "", "trader_id"], [11, 3, 1, "", "type"], [11, 2, 1, "", "unsubscribe"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.client.MarketDataClient": [[11, 2, 1, "", "degrade"], [11, 2, 1, "", "dispose"], [11, 2, 1, "", "fault"], [11, 2, 1, "", "fully_qualified_name"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_connected"], [11, 3, 1, "", "is_degraded"], [11, 3, 1, "", "is_disposed"], [11, 3, 1, "", "is_faulted"], [11, 3, 1, "", "is_initialized"], [11, 3, 1, "", "is_running"], [11, 3, 1, "", "is_stopped"], [11, 2, 1, "", "request"], [11, 2, 1, "", "request_bars"], [11, 2, 1, "", "request_instrument"], [11, 2, 1, "", "request_instruments"], [11, 2, 1, "", "request_quote_ticks"], [11, 2, 1, "", "request_trade_ticks"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "resume"], [11, 2, 1, "", "start"], [11, 3, 1, "", "state"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "subscribe"], [11, 2, 1, "", "subscribe_bars"], [11, 2, 1, "", "subscribe_instrument"], [11, 2, 1, "", "subscribe_instrument_close_prices"], [11, 2, 1, "", "subscribe_instrument_status_updates"], [11, 2, 1, "", "subscribe_instruments"], [11, 2, 1, "", "subscribe_order_book_deltas"], [11, 2, 1, "", "subscribe_order_book_snapshots"], [11, 2, 1, "", "subscribe_quote_ticks"], [11, 2, 1, "", "subscribe_ticker"], [11, 2, 1, "", "subscribe_trade_ticks"], [11, 2, 1, "", "subscribed_bars"], [11, 2, 1, "", "subscribed_generic_data"], [11, 2, 1, "", "subscribed_instrument_close_prices"], [11, 2, 1, "", "subscribed_instrument_status_updates"], [11, 2, 1, "", "subscribed_instruments"], [11, 2, 1, "", "subscribed_order_book_deltas"], [11, 2, 1, "", "subscribed_order_book_snapshots"], [11, 2, 1, "", "subscribed_quote_ticks"], [11, 2, 1, "", "subscribed_tickers"], [11, 2, 1, "", "subscribed_trade_ticks"], [11, 3, 1, "", "trader_id"], [11, 3, 1, "", "type"], [11, 2, 1, "", "unsubscribe"], [11, 2, 1, "", "unsubscribe_bars"], [11, 2, 1, "", "unsubscribe_instrument"], [11, 2, 1, "", "unsubscribe_instrument_close_prices"], [11, 2, 1, "", "unsubscribe_instrument_status_updates"], [11, 2, 1, "", "unsubscribe_instruments"], [11, 2, 1, "", "unsubscribe_order_book_deltas"], [11, 2, 1, "", "unsubscribe_order_book_snapshots"], [11, 2, 1, "", "unsubscribe_quote_ticks"], [11, 2, 1, "", "unsubscribe_ticker"], [11, 2, 1, "", "unsubscribe_trade_ticks"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.engine": [[11, 1, 1, "", "DataEngine"]], "nautilus_trader.data.engine.DataEngine": [[11, 2, 1, "", "check_connected"], [11, 2, 1, "", "check_disconnected"], [11, 3, 1, "", "command_count"], [11, 3, 1, "", "data_count"], [11, 3, 1, "", "debug"], [11, 3, 1, "", "default_client"], [11, 2, 1, "", "degrade"], [11, 2, 1, "", "deregister_client"], [11, 2, 1, "", "dispose"], [11, 2, 1, "", "execute"], [11, 2, 1, "", "fault"], [11, 2, 1, "", "fully_qualified_name"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_degraded"], [11, 3, 1, "", "is_disposed"], [11, 3, 1, "", "is_faulted"], [11, 3, 1, "", "is_initialized"], [11, 3, 1, "", "is_running"], [11, 3, 1, "", "is_stopped"], [11, 2, 1, "", "process"], [11, 2, 1, "", "register_client"], [11, 2, 1, "", "register_default_client"], [11, 2, 1, "", "register_venue_routing"], [11, 3, 1, "", "registered_clients"], [11, 2, 1, "", "request"], [11, 3, 1, "", "request_count"], [11, 2, 1, "", "reset"], [11, 2, 1, "", "response"], [11, 3, 1, "", "response_count"], [11, 2, 1, "", "resume"], [11, 2, 1, "", "start"], [11, 3, 1, "", "state"], [11, 2, 1, "", "stop"], [11, 2, 1, "", "subscribed_bars"], [11, 2, 1, "", "subscribed_generic_data"], [11, 2, 1, "", "subscribed_instrument_close_prices"], [11, 2, 1, "", "subscribed_instrument_status_updates"], [11, 2, 1, "", "subscribed_instruments"], [11, 2, 1, "", "subscribed_order_book_deltas"], [11, 2, 1, "", "subscribed_order_book_snapshots"], [11, 2, 1, "", "subscribed_quote_ticks"], [11, 2, 1, "", "subscribed_tickers"], [11, 2, 1, "", "subscribed_trade_ticks"], [11, 3, 1, "", "trader_id"], [11, 3, 1, "", "type"]], "nautilus_trader.data.messages": [[11, 1, 1, "", "DataCommand"], [11, 1, 1, "", "DataRequest"], [11, 1, 1, "", "DataResponse"], [11, 1, 1, "", "Subscribe"], [11, 1, 1, "", "Unsubscribe"]], "nautilus_trader.data.messages.DataCommand": [[11, 3, 1, "", "category"], [11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.DataRequest": [[11, 3, 1, "", "callback"], [11, 3, 1, "", "category"], [11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.DataResponse": [[11, 3, 1, "", "category"], [11, 3, 1, "", "client_id"], [11, 3, 1, "", "correlation_id"], [11, 3, 1, "", "data"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.Subscribe": [[11, 3, 1, "", "category"], [11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.data.messages.Unsubscribe": [[11, 3, 1, "", "category"], [11, 3, 1, "", "client_id"], [11, 3, 1, "", "data_type"], [11, 3, 1, "", "id"], [11, 3, 1, "", "ts_init"], [11, 3, 1, "", "venue"]], "nautilus_trader.execution": [[12, 0, 0, "-", "client"], [12, 0, 0, "-", "engine"], [12, 0, 0, "-", "messages"], [12, 0, 0, "-", "reports"]], "nautilus_trader.execution.client": [[12, 1, 1, "", "ExecutionClient"]], "nautilus_trader.execution.client.ExecutionClient": [[12, 3, 1, "", "account_id"], [12, 3, 1, "", "account_type"], [12, 3, 1, "", "base_currency"], [12, 2, 1, "", "cancel_all_orders"], [12, 2, 1, "", "cancel_order"], [12, 2, 1, "", "degrade"], [12, 2, 1, "", "dispose"], [12, 2, 1, "", "fault"], [12, 2, 1, "", "fully_qualified_name"], [12, 2, 1, "", "generate_account_state"], [12, 2, 1, "", "generate_order_accepted"], [12, 2, 1, "", "generate_order_cancel_rejected"], [12, 2, 1, "", "generate_order_canceled"], [12, 2, 1, "", "generate_order_expired"], [12, 2, 1, "", "generate_order_filled"], [12, 2, 1, "", "generate_order_modify_rejected"], [12, 2, 1, "", "generate_order_pending_cancel"], [12, 2, 1, "", "generate_order_pending_update"], [12, 2, 1, "", "generate_order_rejected"], [12, 2, 1, "", "generate_order_submitted"], [12, 2, 1, "", "generate_order_triggered"], [12, 2, 1, "", "generate_order_updated"], [12, 2, 1, "", "get_account"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_connected"], [12, 3, 1, "", "is_degraded"], [12, 3, 1, "", "is_disposed"], [12, 3, 1, "", "is_faulted"], [12, 3, 1, "", "is_initialized"], [12, 3, 1, "", "is_running"], [12, 3, 1, "", "is_stopped"], [12, 2, 1, "", "modify_order"], [12, 3, 1, "", "oms_type"], [12, 2, 1, "", "query_order"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "resume"], [12, 2, 1, "", "start"], [12, 3, 1, "", "state"], [12, 2, 1, "", "stop"], [12, 2, 1, "", "submit_order"], [12, 2, 1, "", "submit_order_list"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "type"], [12, 3, 1, "", "venue"]], "nautilus_trader.execution.engine": [[12, 1, 1, "", "ExecutionEngine"]], "nautilus_trader.execution.engine.ExecutionEngine": [[12, 3, 1, "", "allow_cash_positions"], [12, 2, 1, "", "check_connected"], [12, 2, 1, "", "check_disconnected"], [12, 2, 1, "", "check_integrity"], [12, 2, 1, "", "check_residuals"], [12, 3, 1, "", "command_count"], [12, 3, 1, "", "debug"], [12, 3, 1, "", "default_client"], [12, 2, 1, "", "degrade"], [12, 2, 1, "", "deregister_client"], [12, 2, 1, "", "dispose"], [12, 3, 1, "", "event_count"], [12, 2, 1, "", "execute"], [12, 2, 1, "", "fault"], [12, 2, 1, "", "flush_db"], [12, 2, 1, "", "fully_qualified_name"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_degraded"], [12, 3, 1, "", "is_disposed"], [12, 3, 1, "", "is_faulted"], [12, 3, 1, "", "is_initialized"], [12, 3, 1, "", "is_running"], [12, 3, 1, "", "is_stopped"], [12, 2, 1, "", "load_cache"], [12, 2, 1, "", "position_id_count"], [12, 2, 1, "", "process"], [12, 2, 1, "", "register_client"], [12, 2, 1, "", "register_default_client"], [12, 2, 1, "", "register_oms_type"], [12, 2, 1, "", "register_venue_routing"], [12, 3, 1, "", "registered_clients"], [12, 3, 1, "", "report_count"], [12, 2, 1, "", "reset"], [12, 2, 1, "", "resume"], [12, 2, 1, "", "start"], [12, 3, 1, "", "state"], [12, 2, 1, "", "stop"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "type"]], "nautilus_trader.execution.messages": [[12, 1, 1, "", "CancelAllOrders"], [12, 1, 1, "", "CancelOrder"], [12, 1, 1, "", "ModifyOrder"], [12, 1, 1, "", "QueryOrder"], [12, 1, 1, "", "SubmitOrder"], [12, 1, 1, "", "SubmitOrderList"], [12, 1, 1, "", "TradingCommand"]], "nautilus_trader.execution.messages.CancelAllOrders": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "order_side"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.messages.CancelOrder": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "client_order_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.messages.ModifyOrder": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "client_order_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "price"], [12, 3, 1, "", "quantity"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "trigger_price"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.messages.QueryOrder": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "client_order_id"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.messages.SubmitOrder": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "exec_algorithm_spec"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "order"], [12, 3, 1, "", "position_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.messages.SubmitOrderList": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "exec_algorithm_specs"], [12, 2, 1, "", "from_dict"], [12, 3, 1, "", "has_emulated_order"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "order_list"], [12, 3, 1, "", "position_id"], [12, 3, 1, "", "strategy_id"], [12, 2, 1, "", "to_dict"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.messages.TradingCommand": [[12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "strategy_id"], [12, 3, 1, "", "trader_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports": [[12, 1, 1, "", "ExecutionMassStatus"], [12, 1, 1, "", "ExecutionReport"], [12, 1, 1, "", "OrderStatusReport"], [12, 1, 1, "", "PositionStatusReport"], [12, 1, 1, "", "TradeReport"]], "nautilus_trader.execution.reports.ExecutionMassStatus": [[12, 3, 1, "", "account_id"], [12, 2, 1, "", "add_order_reports"], [12, 2, 1, "", "add_position_reports"], [12, 2, 1, "", "add_trade_reports"], [12, 3, 1, "", "category"], [12, 3, 1, "", "client_id"], [12, 3, 1, "", "id"], [12, 2, 1, "", "order_reports"], [12, 2, 1, "", "position_reports"], [12, 2, 1, "", "trade_reports"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue"]], "nautilus_trader.execution.reports.ExecutionReport": [[12, 3, 1, "", "account_id"], [12, 3, 1, "", "category"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "ts_init"]], "nautilus_trader.execution.reports.OrderStatusReport": [[12, 3, 1, "", "account_id"], [12, 3, 1, "", "avg_px"], [12, 3, 1, "", "cancel_reason"], [12, 3, 1, "", "category"], [12, 3, 1, "", "client_order_id"], [12, 3, 1, "", "contingency_type"], [12, 3, 1, "", "display_qty"], [12, 3, 1, "", "expire_time"], [12, 3, 1, "", "filled_qty"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "leaves_qty"], [12, 3, 1, "", "limit_offset"], [12, 3, 1, "", "order_list_id"], [12, 3, 1, "", "order_side"], [12, 3, 1, "", "order_status"], [12, 3, 1, "", "order_type"], [12, 3, 1, "", "post_only"], [12, 3, 1, "", "price"], [12, 3, 1, "", "quantity"], [12, 3, 1, "", "reduce_only"], [12, 3, 1, "", "time_in_force"], [12, 3, 1, "", "trailing_offset"], [12, 3, 1, "", "trailing_offset_type"], [12, 3, 1, "", "trigger_price"], [12, 3, 1, "", "trigger_type"], [12, 3, 1, "", "ts_accepted"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "ts_last"], [12, 3, 1, "", "ts_triggered"], [12, 3, 1, "", "venue_order_id"]], "nautilus_trader.execution.reports.PositionStatusReport": [[12, 3, 1, "", "account_id"], [12, 3, 1, "", "category"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "net_qty"], [12, 3, 1, "", "position_side"], [12, 3, 1, "", "quantity"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "ts_last"], [12, 3, 1, "", "venue_position_id"]], "nautilus_trader.execution.reports.TradeReport": [[12, 3, 1, "", "account_id"], [12, 3, 1, "", "category"], [12, 3, 1, "", "client_order_id"], [12, 3, 1, "", "commission"], [12, 3, 1, "", "id"], [12, 3, 1, "", "instrument_id"], [12, 3, 1, "", "last_px"], [12, 3, 1, "", "last_qty"], [12, 3, 1, "", "liquidity_side"], [12, 3, 1, "", "order_side"], [12, 3, 1, "", "trade_id"], [12, 3, 1, "", "ts_event"], [12, 3, 1, "", "ts_init"], [12, 3, 1, "", "venue_order_id"], [12, 3, 1, "", "venue_position_id"]], "nautilus_trader.indicators": [[14, 0, 0, "-", "atr"], [14, 0, 0, "-", "bollinger_bands"], [14, 0, 0, "-", "donchian_channel"], [14, 0, 0, "-", "efficiency_ratio"], [14, 0, 0, "-", "fuzzy_candlesticks"], [14, 0, 0, "-", "keltner_channel"], [14, 0, 0, "-", "keltner_position"], [14, 0, 0, "-", "macd"], [14, 0, 0, "-", "obv"], [14, 0, 0, "-", "pressure"], [14, 0, 0, "-", "roc"], [14, 0, 0, "-", "rsi"], [14, 0, 0, "-", "spread_analyzer"], [14, 0, 0, "-", "stochastics"], [14, 0, 0, "-", "swings"], [14, 0, 0, "-", "volatility_ratio"], [14, 0, 0, "-", "vwap"]], "nautilus_trader.indicators.atr": [[14, 1, 1, "", "AverageTrueRange"]], "nautilus_trader.indicators.atr.AverageTrueRange": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average": [[14, 0, 0, "-", "ama"], [14, 0, 0, "-", "ema"], [14, 0, 0, "-", "hma"], [14, 0, 0, "-", "ma_factory"], [14, 0, 0, "-", "moving_average"], [14, 0, 0, "-", "sma"], [14, 0, 0, "-", "wma"]], "nautilus_trader.indicators.average.ama": [[14, 1, 1, "", "AdaptiveMovingAverage"]], "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage": [[14, 3, 1, "", "alpha_diff"], [14, 3, 1, "", "alpha_fast"], [14, 3, 1, "", "alpha_slow"], [14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "period_alpha_fast"], [14, 3, 1, "", "period_alpha_slow"], [14, 3, 1, "", "period_er"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.ema": [[14, 1, 1, "", "ExponentialMovingAverage"]], "nautilus_trader.indicators.average.ema.ExponentialMovingAverage": [[14, 3, 1, "", "alpha"], [14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.hma": [[14, 1, 1, "", "HullMovingAverage"]], "nautilus_trader.indicators.average.hma.HullMovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.ma_factory": [[14, 1, 1, "", "MovingAverageFactory"]], "nautilus_trader.indicators.average.ma_factory.MovingAverageFactory": [[14, 2, 1, "", "create"]], "nautilus_trader.indicators.average.moving_average": [[14, 1, 1, "", "MovingAverage"], [14, 1, 1, "", "MovingAverageType"]], "nautilus_trader.indicators.average.moving_average.MovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.sma": [[14, 1, 1, "", "SimpleMovingAverage"]], "nautilus_trader.indicators.average.sma.SimpleMovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.average.wma": [[14, 1, 1, "", "WeightedMovingAverage"]], "nautilus_trader.indicators.average.wma.WeightedMovingAverage": [[14, 3, 1, "", "count"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"], [14, 3, 1, "", "weights"]], "nautilus_trader.indicators.base": [[14, 0, 0, "-", "indicator"]], "nautilus_trader.indicators.base.indicator": [[14, 1, 1, "", "Indicator"]], "nautilus_trader.indicators.base.indicator.Indicator": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"]], "nautilus_trader.indicators.bollinger_bands": [[14, 1, 1, "", "BollingerBands"]], "nautilus_trader.indicators.bollinger_bands.BollingerBands": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "k"], [14, 3, 1, "", "lower"], [14, 3, 1, "", "middle"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "upper"]], "nautilus_trader.indicators.donchian_channel": [[14, 1, 1, "", "DonchianChannel"]], "nautilus_trader.indicators.donchian_channel.DonchianChannel": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "lower"], [14, 3, 1, "", "middle"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "upper"]], "nautilus_trader.indicators.efficiency_ratio": [[14, 1, 1, "", "EfficiencyRatio"]], "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.fuzzy_candlesticks": [[14, 1, 1, "", "FuzzyCandle"], [14, 1, 1, "", "FuzzyCandlesticks"]], "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle": [[14, 3, 1, "", "body_size"], [14, 3, 1, "", "direction"], [14, 3, 1, "", "lower_wick_size"], [14, 3, 1, "", "size"], [14, 3, 1, "", "upper_wick_size"]], "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"], [14, 3, 1, "", "vector"]], "nautilus_trader.indicators.keltner_channel": [[14, 1, 1, "", "KeltnerChannel"]], "nautilus_trader.indicators.keltner_channel.KeltnerChannel": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "k_multiplier"], [14, 3, 1, "", "lower"], [14, 3, 1, "", "middle"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "upper"]], "nautilus_trader.indicators.keltner_position": [[14, 1, 1, "", "KeltnerPosition"]], "nautilus_trader.indicators.keltner_position.KeltnerPosition": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "k_multiplier"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.macd": [[14, 1, 1, "", "MovingAverageConvergenceDivergence"]], "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence": [[14, 3, 1, "", "fast_period"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "price_type"], [14, 2, 1, "", "reset"], [14, 3, 1, "", "slow_period"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.obv": [[14, 1, 1, "", "OnBalanceVolume"]], "nautilus_trader.indicators.obv.OnBalanceVolume": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.pressure": [[14, 1, 1, "", "Pressure"]], "nautilus_trader.indicators.pressure.Pressure": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"], [14, 3, 1, "", "value_cumulative"]], "nautilus_trader.indicators.roc": [[14, 1, 1, "", "RateOfChange"]], "nautilus_trader.indicators.roc.RateOfChange": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.rsi": [[14, 1, 1, "", "RelativeStrengthIndex"]], "nautilus_trader.indicators.rsi.RelativeStrengthIndex": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.spread_analyzer": [[14, 1, 1, "", "SpreadAnalyzer"]], "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer": [[14, 3, 1, "", "average"], [14, 3, 1, "", "capacity"], [14, 3, 1, "", "current"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "instrument_id"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"]], "nautilus_trader.indicators.stochastics": [[14, 1, 1, "", "Stochastics"]], "nautilus_trader.indicators.stochastics.Stochastics": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period_d"], [14, 3, 1, "", "period_k"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value_d"], [14, 3, 1, "", "value_k"]], "nautilus_trader.indicators.swings": [[14, 1, 1, "", "Swings"]], "nautilus_trader.indicators.swings.Swings": [[14, 3, 1, "", "changed"], [14, 3, 1, "", "direction"], [14, 3, 1, "", "duration"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "high_datetime"], [14, 3, 1, "", "high_price"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "length"], [14, 3, 1, "", "low_datetime"], [14, 3, 1, "", "low_price"], [14, 3, 1, "", "name"], [14, 3, 1, "", "period"], [14, 2, 1, "", "reset"], [14, 3, 1, "", "since_high"], [14, 3, 1, "", "since_low"], [14, 2, 1, "", "update_raw"]], "nautilus_trader.indicators.volatility_ratio": [[14, 1, 1, "", "VolatilityRatio"]], "nautilus_trader.indicators.volatility_ratio.VolatilityRatio": [[14, 3, 1, "", "fast_period"], [14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"], [14, 3, 1, "", "slow_period"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.indicators.vwap": [[14, 1, 1, "", "VolumeWeightedAveragePrice"]], "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice": [[14, 2, 1, "", "handle_bar"], [14, 2, 1, "", "handle_quote_tick"], [14, 2, 1, "", "handle_trade_tick"], [14, 3, 1, "", "has_inputs"], [14, 3, 1, "", "initialized"], [14, 3, 1, "", "name"], [14, 2, 1, "", "reset"], [14, 2, 1, "", "update_raw"], [14, 3, 1, "", "value"]], "nautilus_trader.infrastructure": [[15, 0, 0, "-", "cache"]], "nautilus_trader.infrastructure.cache": [[15, 1, 1, "", "RedisCacheDatabase"]], "nautilus_trader.infrastructure.cache.RedisCacheDatabase": [[15, 2, 1, "", "add_account"], [15, 2, 1, "", "add_currency"], [15, 2, 1, "", "add_instrument"], [15, 2, 1, "", "add_order"], [15, 2, 1, "", "add_position"], [15, 2, 1, "", "add_submit_order_command"], [15, 2, 1, "", "add_submit_order_list_command"], [15, 2, 1, "", "delete_strategy"], [15, 2, 1, "", "flush"], [15, 2, 1, "", "load_account"], [15, 2, 1, "", "load_accounts"], [15, 2, 1, "", "load_currencies"], [15, 2, 1, "", "load_currency"], [15, 2, 1, "", "load_instrument"], [15, 2, 1, "", "load_instruments"], [15, 2, 1, "", "load_order"], [15, 2, 1, "", "load_orders"], [15, 2, 1, "", "load_position"], [15, 2, 1, "", "load_positions"], [15, 2, 1, "", "load_strategy"], [15, 2, 1, "", "load_submit_order_command"], [15, 2, 1, "", "load_submit_order_commands"], [15, 2, 1, "", "load_submit_order_list_command"], [15, 2, 1, "", "load_submit_order_list_commands"], [15, 2, 1, "", "update_account"], [15, 2, 1, "", "update_order"], [15, 2, 1, "", "update_position"], [15, 2, 1, "", "update_strategy"]], "nautilus_trader.live": [[16, 0, 0, "-", "data_client"], [16, 0, 0, "-", "data_engine"], [16, 0, 0, "-", "execution_client"], [16, 0, 0, "-", "execution_engine"], [16, 0, 0, "-", "node"], [16, 0, 0, "-", "node_builder"], [16, 0, 0, "-", "risk_engine"]], "nautilus_trader.live.data_client": [[16, 1, 1, "", "LiveDataClient"], [16, 1, 1, "", "LiveMarketDataClient"]], "nautilus_trader.live.data_client.LiveDataClient": [[16, 2, 1, "", "connect"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "request"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "subscribe"], [16, 2, 1, "", "subscribed_generic_data"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"], [16, 2, 1, "", "unsubscribe"], [16, 3, 1, "", "venue"]], "nautilus_trader.live.data_client.LiveMarketDataClient": [[16, 2, 1, "", "connect"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "request"], [16, 2, 1, "", "request_bars"], [16, 2, 1, "", "request_instrument"], [16, 2, 1, "", "request_instruments"], [16, 2, 1, "", "request_quote_ticks"], [16, 2, 1, "", "request_trade_ticks"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "subscribe"], [16, 2, 1, "", "subscribe_bars"], [16, 2, 1, "", "subscribe_instrument"], [16, 2, 1, "", "subscribe_instrument_close_prices"], [16, 2, 1, "", "subscribe_instrument_status_updates"], [16, 2, 1, "", "subscribe_instruments"], [16, 2, 1, "", "subscribe_order_book_deltas"], [16, 2, 1, "", "subscribe_order_book_snapshots"], [16, 2, 1, "", "subscribe_quote_ticks"], [16, 2, 1, "", "subscribe_ticker"], [16, 2, 1, "", "subscribe_trade_ticks"], [16, 2, 1, "", "subscribed_bars"], [16, 2, 1, "", "subscribed_generic_data"], [16, 2, 1, "", "subscribed_instrument_close_prices"], [16, 2, 1, "", "subscribed_instrument_status_updates"], [16, 2, 1, "", "subscribed_instruments"], [16, 2, 1, "", "subscribed_order_book_deltas"], [16, 2, 1, "", "subscribed_order_book_snapshots"], [16, 2, 1, "", "subscribed_quote_ticks"], [16, 2, 1, "", "subscribed_tickers"], [16, 2, 1, "", "subscribed_trade_ticks"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"], [16, 2, 1, "", "unsubscribe"], [16, 2, 1, "", "unsubscribe_bars"], [16, 2, 1, "", "unsubscribe_instrument"], [16, 2, 1, "", "unsubscribe_instrument_close_prices"], [16, 2, 1, "", "unsubscribe_instrument_status_updates"], [16, 2, 1, "", "unsubscribe_instruments"], [16, 2, 1, "", "unsubscribe_order_book_deltas"], [16, 2, 1, "", "unsubscribe_order_book_snapshots"], [16, 2, 1, "", "unsubscribe_quote_ticks"], [16, 2, 1, "", "unsubscribe_ticker"], [16, 2, 1, "", "unsubscribe_trade_ticks"], [16, 3, 1, "", "venue"]], "nautilus_trader.live.data_engine": [[16, 1, 1, "", "LiveDataEngine"]], "nautilus_trader.live.data_engine.LiveDataEngine": [[16, 2, 1, "", "check_connected"], [16, 2, 1, "", "check_disconnected"], [16, 3, 1, "", "command_count"], [16, 2, 1, "", "connect"], [16, 3, 1, "", "data_count"], [16, 2, 1, "", "data_qsize"], [16, 3, 1, "", "debug"], [16, 3, 1, "", "default_client"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "deregister_client"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "execute"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "get_event_loop"], [16, 2, 1, "", "get_run_queue_task"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "kill"], [16, 2, 1, "", "message_qsize"], [16, 2, 1, "", "process"], [16, 2, 1, "", "register_client"], [16, 2, 1, "", "register_default_client"], [16, 2, 1, "", "register_venue_routing"], [16, 3, 1, "", "registered_clients"], [16, 2, 1, "", "request"], [16, 3, 1, "", "request_count"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "response"], [16, 3, 1, "", "response_count"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "subscribed_bars"], [16, 2, 1, "", "subscribed_generic_data"], [16, 2, 1, "", "subscribed_instrument_close_prices"], [16, 2, 1, "", "subscribed_instrument_status_updates"], [16, 2, 1, "", "subscribed_instruments"], [16, 2, 1, "", "subscribed_order_book_deltas"], [16, 2, 1, "", "subscribed_order_book_snapshots"], [16, 2, 1, "", "subscribed_quote_ticks"], [16, 2, 1, "", "subscribed_tickers"], [16, 2, 1, "", "subscribed_trade_ticks"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"]], "nautilus_trader.live.execution_client": [[16, 1, 1, "", "LiveExecutionClient"]], "nautilus_trader.live.execution_client.LiveExecutionClient": [[16, 3, 1, "", "account_id"], [16, 3, 1, "", "account_type"], [16, 3, 1, "", "base_currency"], [16, 2, 1, "", "cancel_all_orders"], [16, 2, 1, "", "cancel_order"], [16, 2, 1, "", "connect"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "generate_account_state"], [16, 2, 1, "", "generate_mass_status"], [16, 2, 1, "", "generate_order_accepted"], [16, 2, 1, "", "generate_order_cancel_rejected"], [16, 2, 1, "", "generate_order_canceled"], [16, 2, 1, "", "generate_order_expired"], [16, 2, 1, "", "generate_order_filled"], [16, 2, 1, "", "generate_order_modify_rejected"], [16, 2, 1, "", "generate_order_pending_cancel"], [16, 2, 1, "", "generate_order_pending_update"], [16, 2, 1, "", "generate_order_rejected"], [16, 2, 1, "", "generate_order_status_report"], [16, 2, 1, "", "generate_order_status_reports"], [16, 2, 1, "", "generate_order_submitted"], [16, 2, 1, "", "generate_order_triggered"], [16, 2, 1, "", "generate_order_updated"], [16, 2, 1, "", "generate_position_status_reports"], [16, 2, 1, "", "generate_trade_reports"], [16, 2, 1, "", "get_account"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_connected"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "modify_order"], [16, 3, 1, "", "oms_type"], [16, 2, 1, "", "query_order"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 2, 1, "", "submit_order"], [16, 2, 1, "", "submit_order_list"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"], [16, 3, 1, "", "venue"]], "nautilus_trader.live.execution_engine": [[16, 1, 1, "", "LiveExecutionEngine"]], "nautilus_trader.live.execution_engine.LiveExecutionEngine": [[16, 3, 1, "", "allow_cash_positions"], [16, 2, 1, "", "check_connected"], [16, 2, 1, "", "check_disconnected"], [16, 2, 1, "", "check_integrity"], [16, 2, 1, "", "check_residuals"], [16, 3, 1, "", "command_count"], [16, 2, 1, "", "connect"], [16, 3, 1, "", "debug"], [16, 3, 1, "", "default_client"], [16, 2, 1, "", "degrade"], [16, 2, 1, "", "deregister_client"], [16, 2, 1, "", "disconnect"], [16, 2, 1, "", "dispose"], [16, 3, 1, "", "event_count"], [16, 2, 1, "", "execute"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "flush_db"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "get_inflight_check_task"], [16, 2, 1, "", "get_run_queue_task"], [16, 3, 1, "", "id"], [16, 3, 1, "", "inflight_check_interval_ms"], [16, 3, 1, "", "inflight_check_threshold_ms"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "kill"], [16, 2, 1, "", "load_cache"], [16, 2, 1, "", "position_id_count"], [16, 2, 1, "", "process"], [16, 2, 1, "", "qsize"], [16, 2, 1, "", "reconcile_mass_status"], [16, 2, 1, "", "reconcile_report"], [16, 2, 1, "", "reconcile_state"], [16, 3, 1, "", "reconciliation"], [16, 3, 1, "", "reconciliation_lookback_mins"], [16, 2, 1, "", "register_client"], [16, 2, 1, "", "register_default_client"], [16, 2, 1, "", "register_oms_type"], [16, 2, 1, "", "register_venue_routing"], [16, 3, 1, "", "registered_clients"], [16, 3, 1, "", "report_count"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "type"]], "nautilus_trader.live.node": [[16, 1, 1, "", "TradingNode"]], "nautilus_trader.live.node.TradingNode": [[16, 2, 1, "", "add_data_client_factory"], [16, 2, 1, "", "add_exec_client_factory"], [16, 2, 1, "", "build"], [16, 5, 1, "", "cache"], [16, 2, 1, "", "dispose"], [16, 2, 1, "", "get_event_loop"], [16, 2, 1, "", "get_logger"], [16, 5, 1, "", "instance_id"], [16, 5, 1, "", "is_built"], [16, 5, 1, "", "is_running"], [16, 5, 1, "", "machine_id"], [16, 5, 1, "", "portfolio"], [16, 2, 1, "", "start"], [16, 2, 1, "", "stop"], [16, 5, 1, "", "trader"], [16, 5, 1, "", "trader_id"]], "nautilus_trader.live.node_builder": [[16, 1, 1, "", "TradingNodeBuilder"]], "nautilus_trader.live.node_builder.TradingNodeBuilder": [[16, 2, 1, "", "add_data_client_factory"], [16, 2, 1, "", "add_exec_client_factory"], [16, 2, 1, "", "build_data_clients"], [16, 2, 1, "", "build_exec_clients"]], "nautilus_trader.live.risk_engine": [[16, 1, 1, "", "LiveRiskEngine"]], "nautilus_trader.live.risk_engine.LiveRiskEngine": [[16, 3, 1, "", "command_count"], [16, 3, 1, "", "debug"], [16, 2, 1, "", "degrade"], [16, 3, 1, "", "deny_modify_pending_update"], [16, 2, 1, "", "dispose"], [16, 3, 1, "", "event_count"], [16, 2, 1, "", "execute"], [16, 2, 1, "", "fault"], [16, 2, 1, "", "fully_qualified_name"], [16, 2, 1, "", "get_event_loop"], [16, 2, 1, "", "get_run_queue_task"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_bypassed"], [16, 3, 1, "", "is_degraded"], [16, 3, 1, "", "is_disposed"], [16, 3, 1, "", "is_faulted"], [16, 3, 1, "", "is_initialized"], [16, 3, 1, "", "is_running"], [16, 3, 1, "", "is_stopped"], [16, 2, 1, "", "kill"], [16, 2, 1, "", "max_notional_per_order"], [16, 2, 1, "", "max_notionals_per_order"], [16, 2, 1, "", "max_order_modify_rate"], [16, 2, 1, "", "max_order_submit_rate"], [16, 2, 1, "", "process"], [16, 2, 1, "", "qsize"], [16, 2, 1, "", "reset"], [16, 2, 1, "", "resume"], [16, 2, 1, "", "set_max_notional_per_order"], [16, 2, 1, "", "set_trading_state"], [16, 2, 1, "", "start"], [16, 3, 1, "", "state"], [16, 2, 1, "", "stop"], [16, 3, 1, "", "trader_id"], [16, 3, 1, "", "trading_state"], [16, 3, 1, "", "type"]], "nautilus_trader.model": [[17, 0, 0, "-", "currency"], [18, 0, 0, "-", "data"], [19, 0, 0, "-", "enums"], [20, 0, 0, "-", "events"], [21, 0, 0, "-", "identifiers"], [23, 0, 0, "-", "instruments"], [24, 0, 0, "-", "objects"], [25, 0, 0, "-", "orderbook"], [26, 0, 0, "-", "orders"], [27, 0, 0, "-", "position"], [28, 0, 0, "-", "tick_scheme"]], "nautilus_trader.model.currency": [[17, 1, 1, "", "Currency"]], "nautilus_trader.model.currency.Currency": [[17, 3, 1, "", "code"], [17, 3, 1, "", "currency_type"], [17, 2, 1, "", "from_str"], [17, 2, 1, "", "is_crypto"], [17, 2, 1, "", "is_fiat"], [17, 3, 1, "", "iso4217"], [17, 3, 1, "", "name"], [17, 3, 1, "", "precision"], [17, 2, 1, "", "register"]], "nautilus_trader.model.data": [[18, 0, 0, "-", "bar"], [18, 0, 0, "-", "base"], [18, 0, 0, "-", "bet"], [18, 0, 0, "-", "tick"], [18, 0, 0, "-", "ticker"], [18, 0, 0, "-", "venue"]], "nautilus_trader.model.data.bar": [[18, 1, 1, "", "Bar"], [18, 1, 1, "", "BarSpecification"], [18, 1, 1, "", "BarType"]], "nautilus_trader.model.data.bar.Bar": [[18, 3, 1, "", "bar_type"], [18, 3, 1, "", "close"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "high"], [18, 2, 1, "", "is_single_price"], [18, 3, 1, "", "low"], [18, 3, 1, "", "open"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"], [18, 3, 1, "", "volume"]], "nautilus_trader.model.data.bar.BarSpecification": [[18, 3, 1, "", "aggregation"], [18, 2, 1, "", "check_information_aggregated"], [18, 2, 1, "", "check_threshold_aggregated"], [18, 2, 1, "", "check_time_aggregated"], [18, 2, 1, "", "from_str"], [18, 2, 1, "", "is_information_aggregated"], [18, 2, 1, "", "is_threshold_aggregated"], [18, 2, 1, "", "is_time_aggregated"], [18, 3, 1, "", "price_type"], [18, 3, 1, "", "step"]], "nautilus_trader.model.data.bar.BarType": [[18, 3, 1, "", "aggregation_source"], [18, 2, 1, "", "from_str"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "is_externally_aggregated"], [18, 2, 1, "", "is_internally_aggregated"], [18, 3, 1, "", "spec"]], "nautilus_trader.model.data.base": [[18, 1, 1, "", "DataType"], [18, 1, 1, "", "GenericData"]], "nautilus_trader.model.data.base.DataType": [[18, 3, 1, "", "metadata"], [18, 3, 1, "", "topic"], [18, 3, 1, "", "type"]], "nautilus_trader.model.data.base.GenericData": [[18, 3, 1, "", "data"], [18, 3, 1, "", "data_type"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.bet": [[18, 1, 1, "", "Bet"], [18, 4, 1, "", "nautilus_to_bet"]], "nautilus_trader.model.data.bet.Bet": [[18, 2, 1, "", "cost"], [18, 2, 1, "", "exposure"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "liability"], [18, 2, 1, "", "lose_payoff"], [18, 2, 1, "", "stake"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "win_payoff"]], "nautilus_trader.model.data.tick": [[18, 1, 1, "", "QuoteTick"], [18, 1, 1, "", "TradeTick"]], "nautilus_trader.model.data.tick.QuoteTick": [[18, 3, 1, "", "ask"], [18, 3, 1, "", "ask_size"], [18, 3, 1, "", "bid"], [18, 3, 1, "", "bid_size"], [18, 2, 1, "", "extract_price"], [18, 2, 1, "", "extract_volume"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_raw"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.tick.TradeTick": [[18, 3, 1, "", "aggressor_side"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_raw"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 3, 1, "", "price"], [18, 3, 1, "", "size"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "trade_id"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.ticker": [[18, 1, 1, "", "Ticker"]], "nautilus_trader.model.data.ticker.Ticker": [[18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue": [[18, 1, 1, "", "InstrumentClosePrice"], [18, 1, 1, "", "InstrumentStatusUpdate"], [18, 1, 1, "", "StatusUpdate"], [18, 1, 1, "", "VenueStatusUpdate"]], "nautilus_trader.model.data.venue.InstrumentClosePrice": [[18, 3, 1, "", "close_price"], [18, 3, 1, "", "close_type"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue.InstrumentStatusUpdate": [[18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "instrument_id"], [18, 3, 1, "", "status"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue.StatusUpdate": [[18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"]], "nautilus_trader.model.data.venue.VenueStatusUpdate": [[18, 2, 1, "", "from_dict"], [18, 2, 1, "", "fully_qualified_name"], [18, 3, 1, "", "status"], [18, 2, 1, "", "to_dict"], [18, 3, 1, "", "ts_event"], [18, 3, 1, "", "ts_init"], [18, 3, 1, "", "venue"]], "nautilus_trader.model.events": [[20, 0, 0, "-", "account"], [20, 0, 0, "-", "order"], [20, 0, 0, "-", "position"]], "nautilus_trader.model.events.account": [[20, 1, 1, "", "AccountState"]], "nautilus_trader.model.events.account.AccountState": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "account_type"], [20, 3, 1, "", "balances"], [20, 3, 1, "", "base_currency"], [20, 3, 1, "", "category"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "info"], [20, 3, 1, "", "is_reported"], [20, 3, 1, "", "margins"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"]], "nautilus_trader.model.events.order": [[20, 1, 1, "", "OrderAccepted"], [20, 1, 1, "", "OrderCancelRejected"], [20, 1, 1, "", "OrderCanceled"], [20, 1, 1, "", "OrderDenied"], [20, 1, 1, "", "OrderEvent"], [20, 1, 1, "", "OrderExpired"], [20, 1, 1, "", "OrderFilled"], [20, 1, 1, "", "OrderInitialized"], [20, 1, 1, "", "OrderModifyRejected"], [20, 1, 1, "", "OrderPendingCancel"], [20, 1, 1, "", "OrderPendingUpdate"], [20, 1, 1, "", "OrderRejected"], [20, 1, 1, "", "OrderSubmitted"], [20, 1, 1, "", "OrderTriggered"], [20, 1, 1, "", "OrderUpdated"]], "nautilus_trader.model.events.order.OrderAccepted": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderCancelRejected": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reason"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderCanceled": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderDenied": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reason"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderEvent": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderExpired": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderFilled": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 3, 1, "", "commission"], [20, 3, 1, "", "currency"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "info"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "is_buy"], [20, 3, 1, "", "is_sell"], [20, 3, 1, "", "last_px"], [20, 3, 1, "", "last_qty"], [20, 3, 1, "", "liquidity_side"], [20, 3, 1, "", "order_side"], [20, 3, 1, "", "order_type"], [20, 3, 1, "", "position_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trade_id"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderInitialized": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 3, 1, "", "contingency_type"], [20, 3, 1, "", "emulation_trigger"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "linked_order_ids"], [20, 3, 1, "", "options"], [20, 3, 1, "", "order_list_id"], [20, 3, 1, "", "order_type"], [20, 3, 1, "", "parent_order_id"], [20, 3, 1, "", "post_only"], [20, 3, 1, "", "quantity"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "reduce_only"], [20, 3, 1, "", "side"], [20, 3, 1, "", "strategy_id"], [20, 3, 1, "", "tags"], [20, 3, 1, "", "time_in_force"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderModifyRejected": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reason"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderPendingCancel": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderPendingUpdate": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderRejected": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reason"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderSubmitted": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderTriggered": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.order.OrderUpdated": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "category"], [20, 3, 1, "", "client_order_id"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "price"], [20, 3, 1, "", "quantity"], [20, 3, 1, "", "reconciliation"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "trigger_price"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "venue_order_id"]], "nautilus_trader.model.events.position": [[20, 1, 1, "", "PositionChanged"], [20, 1, 1, "", "PositionClosed"], [20, 1, 1, "", "PositionEvent"], [20, 1, 1, "", "PositionOpened"]], "nautilus_trader.model.events.position.PositionChanged": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "avg_px_close"], [20, 3, 1, "", "avg_px_open"], [20, 3, 1, "", "category"], [20, 3, 1, "", "closing_order_id"], [20, 2, 1, "", "create"], [20, 3, 1, "", "currency"], [20, 3, 1, "", "duration_ns"], [20, 3, 1, "", "entry"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "last_px"], [20, 3, 1, "", "last_qty"], [20, 3, 1, "", "net_qty"], [20, 3, 1, "", "opening_order_id"], [20, 3, 1, "", "peak_qty"], [20, 3, 1, "", "position_id"], [20, 3, 1, "", "quantity"], [20, 3, 1, "", "realized_pnl"], [20, 3, 1, "", "realized_return"], [20, 3, 1, "", "side"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_closed"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "ts_opened"], [20, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.events.position.PositionClosed": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "avg_px_close"], [20, 3, 1, "", "avg_px_open"], [20, 3, 1, "", "category"], [20, 3, 1, "", "closing_order_id"], [20, 2, 1, "", "create"], [20, 3, 1, "", "currency"], [20, 3, 1, "", "duration_ns"], [20, 3, 1, "", "entry"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "last_px"], [20, 3, 1, "", "last_qty"], [20, 3, 1, "", "net_qty"], [20, 3, 1, "", "opening_order_id"], [20, 3, 1, "", "peak_qty"], [20, 3, 1, "", "position_id"], [20, 3, 1, "", "quantity"], [20, 3, 1, "", "realized_pnl"], [20, 3, 1, "", "realized_return"], [20, 3, 1, "", "side"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_closed"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "ts_opened"], [20, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.events.position.PositionEvent": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "avg_px_close"], [20, 3, 1, "", "avg_px_open"], [20, 3, 1, "", "category"], [20, 3, 1, "", "closing_order_id"], [20, 3, 1, "", "currency"], [20, 3, 1, "", "duration_ns"], [20, 3, 1, "", "entry"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "last_px"], [20, 3, 1, "", "last_qty"], [20, 3, 1, "", "net_qty"], [20, 3, 1, "", "opening_order_id"], [20, 3, 1, "", "peak_qty"], [20, 3, 1, "", "position_id"], [20, 3, 1, "", "quantity"], [20, 3, 1, "", "realized_pnl"], [20, 3, 1, "", "realized_return"], [20, 3, 1, "", "side"], [20, 3, 1, "", "strategy_id"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_closed"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "ts_opened"], [20, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.events.position.PositionOpened": [[20, 3, 1, "", "account_id"], [20, 3, 1, "", "avg_px_close"], [20, 3, 1, "", "avg_px_open"], [20, 3, 1, "", "category"], [20, 3, 1, "", "closing_order_id"], [20, 2, 1, "", "create"], [20, 3, 1, "", "currency"], [20, 3, 1, "", "duration_ns"], [20, 3, 1, "", "entry"], [20, 2, 1, "", "from_dict"], [20, 3, 1, "", "id"], [20, 3, 1, "", "instrument_id"], [20, 3, 1, "", "last_px"], [20, 3, 1, "", "last_qty"], [20, 3, 1, "", "net_qty"], [20, 3, 1, "", "opening_order_id"], [20, 3, 1, "", "peak_qty"], [20, 3, 1, "", "position_id"], [20, 3, 1, "", "quantity"], [20, 3, 1, "", "realized_pnl"], [20, 3, 1, "", "realized_return"], [20, 3, 1, "", "side"], [20, 3, 1, "", "strategy_id"], [20, 2, 1, "", "to_dict"], [20, 3, 1, "", "trader_id"], [20, 3, 1, "", "ts_closed"], [20, 3, 1, "", "ts_event"], [20, 3, 1, "", "ts_init"], [20, 3, 1, "", "ts_opened"], [20, 3, 1, "", "unrealized_pnl"]], "nautilus_trader.model.identifiers": [[21, 1, 1, "", "AccountId"], [21, 1, 1, "", "ClientId"], [21, 1, 1, "", "ClientOrderId"], [21, 1, 1, "", "ComponentId"], [21, 1, 1, "", "ExecAlgorithmId"], [21, 1, 1, "", "Identifier"], [21, 1, 1, "", "InstrumentId"], [21, 1, 1, "", "OrderListId"], [21, 1, 1, "", "PositionId"], [21, 1, 1, "", "StrategyId"], [21, 1, 1, "", "Symbol"], [21, 1, 1, "", "TradeId"], [21, 1, 1, "", "TraderId"], [21, 1, 1, "", "Venue"], [21, 1, 1, "", "VenueOrderId"]], "nautilus_trader.model.identifiers.AccountId": [[21, 2, 1, "", "get_id"], [21, 2, 1, "", "get_issuer"], [21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ClientId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ClientOrderId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ComponentId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.ExecAlgorithmId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.Identifier": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.InstrumentId": [[21, 2, 1, "", "from_str"], [21, 3, 1, "", "symbol"], [21, 3, 1, "", "value"], [21, 3, 1, "", "venue"]], "nautilus_trader.model.identifiers.OrderListId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.PositionId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.StrategyId": [[21, 2, 1, "", "get_tag"], [21, 2, 1, "", "is_external"], [21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.Symbol": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.TradeId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.TraderId": [[21, 2, 1, "", "get_tag"], [21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.Venue": [[21, 3, 1, "", "value"]], "nautilus_trader.model.identifiers.VenueOrderId": [[21, 3, 1, "", "value"]], "nautilus_trader.model.instruments": [[23, 0, 0, "-", "base"], [23, 0, 0, "-", "betting"], [23, 0, 0, "-", "crypto_future"], [23, 0, 0, "-", "crypto_perpetual"], [23, 0, 0, "-", "currency_pair"], [23, 0, 0, "-", "equity"], [23, 0, 0, "-", "future"], [23, 0, 0, "-", "option"]], "nautilus_trader.model.instruments.base": [[23, 1, 1, "", "Instrument"]], "nautilus_trader.model.instruments.base.Instrument": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.betting": [[23, 1, 1, "", "BettingInstrument"]], "nautilus_trader.model.instruments.betting.BettingInstrument": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 2, 1, "", "make_symbol"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.crypto_future": [[23, 1, 1, "", "CryptoFuture"]], "nautilus_trader.model.instruments.crypto_future.CryptoFuture": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 3, 1, "", "expiry_date"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "settlement_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "underlying"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.crypto_perpetual": [[23, 1, 1, "", "CryptoPerpetual"]], "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 3, 1, "", "base_currency"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "is_quanto"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "settlement_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.currency_pair": [[23, 1, 1, "", "CurrencyPair"]], "nautilus_trader.model.instruments.currency_pair.CurrencyPair": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 3, 1, "", "base_currency"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.equity": [[23, 1, 1, "", "Equity"]], "nautilus_trader.model.instruments.equity.Equity": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.future": [[23, 1, 1, "", "Future"]], "nautilus_trader.model.instruments.future.Future": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 3, 1, "", "expiry_date"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "underlying"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.instruments.option": [[23, 1, 1, "", "Option"]], "nautilus_trader.model.instruments.option.Option": [[23, 3, 1, "", "asset_class"], [23, 3, 1, "", "asset_type"], [23, 2, 1, "", "base_from_dict"], [23, 2, 1, "", "base_to_dict"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "fully_qualified_name"], [23, 2, 1, "", "get_base_currency"], [23, 2, 1, "", "get_settlement_currency"], [23, 3, 1, "", "id"], [23, 3, 1, "", "info"], [23, 3, 1, "", "is_inverse"], [23, 3, 1, "", "lot_size"], [23, 2, 1, "", "make_price"], [23, 2, 1, "", "make_qty"], [23, 3, 1, "", "maker_fee"], [23, 3, 1, "", "margin_init"], [23, 3, 1, "", "margin_maint"], [23, 3, 1, "", "max_notional"], [23, 3, 1, "", "max_price"], [23, 3, 1, "", "max_quantity"], [23, 3, 1, "", "min_notional"], [23, 3, 1, "", "min_price"], [23, 3, 1, "", "min_quantity"], [23, 3, 1, "", "multiplier"], [23, 3, 1, "", "native_symbol"], [23, 2, 1, "", "next_ask_price"], [23, 2, 1, "", "next_bid_price"], [23, 2, 1, "", "notional_value"], [23, 3, 1, "", "price_increment"], [23, 3, 1, "", "price_precision"], [23, 3, 1, "", "quote_currency"], [23, 3, 1, "", "size_increment"], [23, 3, 1, "", "size_precision"], [23, 3, 1, "", "symbol"], [23, 3, 1, "", "taker_fee"], [23, 3, 1, "", "tick_scheme_name"], [23, 2, 1, "", "to_dict"], [23, 3, 1, "", "ts_event"], [23, 3, 1, "", "ts_init"], [23, 3, 1, "", "venue"]], "nautilus_trader.model.objects": [[24, 1, 1, "", "AccountBalance"], [24, 1, 1, "", "MarginBalance"], [24, 1, 1, "", "Money"], [24, 1, 1, "", "Price"], [24, 1, 1, "", "Quantity"]], "nautilus_trader.model.objects.AccountBalance": [[24, 3, 1, "", "currency"], [24, 3, 1, "", "free"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "locked"], [24, 2, 1, "", "to_dict"], [24, 3, 1, "", "total"]], "nautilus_trader.model.objects.MarginBalance": [[24, 3, 1, "", "currency"], [24, 2, 1, "", "from_dict"], [24, 3, 1, "", "initial"], [24, 3, 1, "", "instrument_id"], [24, 3, 1, "", "maintenance"], [24, 2, 1, "", "to_dict"]], "nautilus_trader.model.objects.Money": [[24, 2, 1, "", "as_decimal"], [24, 2, 1, "", "as_double"], [24, 2, 1, "", "from_raw"], [24, 2, 1, "", "from_str"], [24, 2, 1, "", "to_str"]], "nautilus_trader.model.objects.Price": [[24, 2, 1, "", "as_decimal"], [24, 2, 1, "", "as_double"], [24, 2, 1, "", "from_int"], [24, 2, 1, "", "from_raw"], [24, 2, 1, "", "from_str"], [24, 3, 1, "", "precision"], [24, 2, 1, "", "raw_to_f64"]], "nautilus_trader.model.objects.Quantity": [[24, 2, 1, "", "as_decimal"], [24, 2, 1, "", "as_double"], [24, 2, 1, "", "from_int"], [24, 2, 1, "", "from_raw"], [24, 2, 1, "", "from_str"], [24, 3, 1, "", "precision"], [24, 2, 1, "", "raw_to_f64"], [24, 2, 1, "", "to_str"], [24, 2, 1, "", "zero"]], "nautilus_trader.model.orderbook": [[25, 0, 0, "-", "book"], [25, 0, 0, "-", "data"], [25, 0, 0, "-", "error"], [25, 0, 0, "-", "ladder"], [25, 0, 0, "-", "level"], [25, 0, 0, "-", "simulated"]], "nautilus_trader.model.orderbook.book": [[25, 1, 1, "", "L1OrderBook"], [25, 1, 1, "", "L2OrderBook"], [25, 1, 1, "", "L3OrderBook"], [25, 1, 1, "", "OrderBook"]], "nautilus_trader.model.orderbook.book.L1OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orderbook.book.L2OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orderbook.book.L3OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orderbook.book.OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orderbook.data": [[25, 1, 1, "", "BookOrder"], [25, 1, 1, "", "OrderBookData"], [25, 1, 1, "", "OrderBookDelta"], [25, 1, 1, "", "OrderBookDeltas"], [25, 1, 1, "", "OrderBookSnapshot"]], "nautilus_trader.model.orderbook.data.BookOrder": [[25, 2, 1, "", "exposure"], [25, 2, 1, "", "from_dict"], [25, 3, 1, "", "id"], [25, 3, 1, "", "price"], [25, 3, 1, "", "side"], [25, 2, 1, "", "signed_size"], [25, 3, 1, "", "size"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "update_id"], [25, 2, 1, "", "update_price"], [25, 2, 1, "", "update_size"]], "nautilus_trader.model.orderbook.data.OrderBookData": [[25, 3, 1, "", "book_type"], [25, 2, 1, "", "fully_qualified_name"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "ts_event"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "update_id"]], "nautilus_trader.model.orderbook.data.OrderBookDelta": [[25, 3, 1, "", "action"], [25, 3, 1, "", "book_type"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "fully_qualified_name"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "order"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "ts_event"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "update_id"]], "nautilus_trader.model.orderbook.data.OrderBookDeltas": [[25, 3, 1, "", "book_type"], [25, 3, 1, "", "deltas"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "fully_qualified_name"], [25, 3, 1, "", "instrument_id"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "ts_event"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "update_id"]], "nautilus_trader.model.orderbook.data.OrderBookSnapshot": [[25, 3, 1, "", "asks"], [25, 3, 1, "", "bids"], [25, 3, 1, "", "book_type"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "fully_qualified_name"], [25, 3, 1, "", "instrument_id"], [25, 2, 1, "", "to_dict"], [25, 3, 1, "", "ts_event"], [25, 3, 1, "", "ts_init"], [25, 3, 1, "", "update_id"]], "nautilus_trader.model.orderbook.error": [[25, 6, 1, "", "BookIntegrityError"]], "nautilus_trader.model.orderbook.error.BookIntegrityError": [[25, 2, 1, "", "add_note"], [25, 2, 1, "", "with_traceback"]], "nautilus_trader.model.orderbook.ladder": [[25, 1, 1, "", "Ladder"]], "nautilus_trader.model.orderbook.ladder.Ladder": [[25, 2, 1, "", "add"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "depth"], [25, 2, 1, "", "exposures"], [25, 3, 1, "", "is_reversed"], [25, 3, 1, "", "levels"], [25, 3, 1, "", "price_precision"], [25, 2, 1, "", "prices"], [25, 2, 1, "", "simulate_order_fills"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "top"], [25, 2, 1, "", "update"], [25, 2, 1, "", "volumes"]], "nautilus_trader.model.orderbook.level": [[25, 1, 1, "", "Level"]], "nautilus_trader.model.orderbook.level.Level": [[25, 2, 1, "", "add"], [25, 2, 1, "", "bulk_add"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "exposure"], [25, 3, 1, "", "orders"], [25, 3, 1, "", "price"], [25, 2, 1, "", "update"], [25, 2, 1, "", "volume"]], "nautilus_trader.model.orderbook.simulated": [[25, 1, 1, "", "SimulatedL1OrderBook"], [25, 1, 1, "", "SimulatedL2OrderBook"], [25, 1, 1, "", "SimulatedL3OrderBook"]], "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook": [[25, 2, 1, "", "add"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "apply_delta"], [25, 2, 1, "", "apply_deltas"], [25, 2, 1, "", "apply_snapshot"], [25, 3, 1, "", "asks"], [25, 2, 1, "", "best_ask_level"], [25, 2, 1, "", "best_ask_price"], [25, 2, 1, "", "best_ask_qty"], [25, 2, 1, "", "best_bid_level"], [25, 2, 1, "", "best_bid_price"], [25, 2, 1, "", "best_bid_qty"], [25, 3, 1, "", "bids"], [25, 2, 1, "", "check_integrity"], [25, 2, 1, "", "clear"], [25, 2, 1, "", "clear_asks"], [25, 2, 1, "", "clear_bids"], [25, 3, 1, "", "count"], [25, 2, 1, "", "create"], [25, 2, 1, "", "delete"], [25, 2, 1, "", "get_price_for_quote_volume"], [25, 2, 1, "", "get_price_for_volume"], [25, 2, 1, "", "get_quote_volume_for_price"], [25, 2, 1, "", "get_volume_for_price"], [25, 2, 1, "", "get_vwap_for_volume"], [25, 3, 1, "", "instrument_id"], [25, 3, 1, "", "last_update_id"], [25, 2, 1, "", "midpoint"], [25, 2, 1, "", "pprint"], [25, 3, 1, "", "price_precision"], [25, 3, 1, "", "size_precision"], [25, 2, 1, "", "spread"], [25, 2, 1, "", "trade_side"], [25, 3, 1, "", "ts_last"], [25, 3, 1, "", "type"], [25, 2, 1, "", "update"]], "nautilus_trader.model.orders": [[26, 0, 0, "-", "base"], [26, 0, 0, "-", "limit"], [26, 0, 0, "-", "limit_if_touched"], [26, 0, 0, "-", "list"], [26, 0, 0, "-", "market"], [26, 0, 0, "-", "market_if_touched"], [26, 0, 0, "-", "market_to_limit"], [26, 0, 0, "-", "stop_limit"], [26, 0, 0, "-", "stop_market"], [26, 0, 0, "-", "trailing_stop_limit"], [26, 0, 0, "-", "trailing_stop_market"]], "nautilus_trader.model.orders.base": [[26, 1, 1, "", "Order"]], "nautilus_trader.model.orders.base.Order": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.limit": [[26, 1, 1, "", "LimitOrder"]], "nautilus_trader.model.orders.limit.LimitOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "display_qty"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "price"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.limit_if_touched": [[26, 1, 1, "", "LimitIfTouchedOrder"]], "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "display_qty"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "is_triggered"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "price"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "trigger_price"], [26, 3, 1, "", "trigger_type"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "ts_triggered"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.list": [[26, 1, 1, "", "OrderList"]], "nautilus_trader.model.orders.list.OrderList": [[26, 3, 1, "", "first"], [26, 3, 1, "", "id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "orders"], [26, 3, 1, "", "ts_init"]], "nautilus_trader.model.orders.market": [[26, 1, 1, "", "MarketOrder"]], "nautilus_trader.model.orders.market.MarketOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.market_if_touched": [[26, 1, 1, "", "MarketIfTouchedOrder"]], "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "trigger_price"], [26, 3, 1, "", "trigger_type"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.market_to_limit": [[26, 1, 1, "", "MarketToLimitOrder"]], "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "display_qty"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "price"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.stop_limit": [[26, 1, 1, "", "StopLimitOrder"]], "nautilus_trader.model.orders.stop_limit.StopLimitOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "display_qty"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "is_triggered"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "price"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "trigger_price"], [26, 3, 1, "", "trigger_type"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "ts_triggered"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.stop_market": [[26, 1, 1, "", "StopMarketOrder"]], "nautilus_trader.model.orders.stop_market.StopMarketOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "trigger_price"], [26, 3, 1, "", "trigger_type"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.trailing_stop_limit": [[26, 1, 1, "", "TrailingStopLimitOrder"]], "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "display_qty"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "is_triggered"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "limit_offset"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "price"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "trailing_offset"], [26, 3, 1, "", "trailing_offset_type"], [26, 3, 1, "", "trigger_price"], [26, 3, 1, "", "trigger_type"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "ts_triggered"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.orders.trailing_stop_market": [[26, 1, 1, "", "TrailingStopMarketOrder"]], "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder": [[26, 3, 1, "", "account_id"], [26, 2, 1, "", "apply"], [26, 3, 1, "", "avg_px"], [26, 3, 1, "", "client_order_id"], [26, 2, 1, "", "closing_side"], [26, 3, 1, "", "contingency_type"], [26, 3, 1, "", "emulation_trigger"], [26, 3, 1, "", "event_count"], [26, 3, 1, "", "events"], [26, 3, 1, "", "expire_time"], [26, 3, 1, "", "expire_time_ns"], [26, 3, 1, "", "filled_qty"], [26, 3, 1, "", "has_price"], [26, 3, 1, "", "has_trigger_price"], [26, 2, 1, "", "info"], [26, 3, 1, "", "init_event"], [26, 3, 1, "", "init_id"], [26, 3, 1, "", "instrument_id"], [26, 3, 1, "", "is_aggressive"], [26, 3, 1, "", "is_buy"], [26, 3, 1, "", "is_canceled"], [26, 3, 1, "", "is_child_order"], [26, 3, 1, "", "is_closed"], [26, 3, 1, "", "is_contingency"], [26, 3, 1, "", "is_emulated"], [26, 3, 1, "", "is_inflight"], [26, 3, 1, "", "is_open"], [26, 3, 1, "", "is_parent_order"], [26, 3, 1, "", "is_passive"], [26, 3, 1, "", "is_pending_cancel"], [26, 3, 1, "", "is_pending_update"], [26, 3, 1, "", "is_post_only"], [26, 3, 1, "", "is_reduce_only"], [26, 3, 1, "", "is_sell"], [26, 3, 1, "", "last_event"], [26, 3, 1, "", "last_trade_id"], [26, 3, 1, "", "leaves_qty"], [26, 3, 1, "", "linked_order_ids"], [26, 3, 1, "", "liquidity_side"], [26, 2, 1, "", "opposite_side"], [26, 3, 1, "", "order_list_id"], [26, 3, 1, "", "order_type"], [26, 3, 1, "", "parent_order_id"], [26, 3, 1, "", "position_id"], [26, 3, 1, "", "quantity"], [26, 3, 1, "", "side"], [26, 3, 1, "", "side_string"], [26, 3, 1, "", "slippage"], [26, 3, 1, "", "status"], [26, 3, 1, "", "strategy_id"], [26, 3, 1, "", "symbol"], [26, 3, 1, "", "tags"], [26, 3, 1, "", "time_in_force"], [26, 2, 1, "", "to_dict"], [26, 3, 1, "", "trade_ids"], [26, 3, 1, "", "trader_id"], [26, 3, 1, "", "trailing_offset"], [26, 3, 1, "", "trailing_offset_type"], [26, 3, 1, "", "trigger_price"], [26, 3, 1, "", "trigger_type"], [26, 3, 1, "", "ts_init"], [26, 3, 1, "", "ts_last"], [26, 3, 1, "", "venue"], [26, 3, 1, "", "venue_order_id"], [26, 3, 1, "", "venue_order_ids"], [26, 2, 1, "", "would_reduce_only"]], "nautilus_trader.model.position": [[27, 1, 1, "", "Position"]], "nautilus_trader.model.position.Position": [[27, 3, 1, "", "account_id"], [27, 2, 1, "", "apply"], [27, 3, 1, "", "avg_px_close"], [27, 3, 1, "", "avg_px_open"], [27, 3, 1, "", "base_currency"], [27, 2, 1, "", "calculate_pnl"], [27, 3, 1, "", "client_order_ids"], [27, 3, 1, "", "closing_order_id"], [27, 2, 1, "", "commissions"], [27, 3, 1, "", "cost_currency"], [27, 3, 1, "", "duration_ns"], [27, 3, 1, "", "entry"], [27, 3, 1, "", "event_count"], [27, 3, 1, "", "events"], [27, 3, 1, "", "id"], [27, 2, 1, "", "info"], [27, 3, 1, "", "instrument_id"], [27, 3, 1, "", "is_closed"], [27, 3, 1, "", "is_inverse"], [27, 3, 1, "", "is_long"], [27, 3, 1, "", "is_open"], [27, 2, 1, "", "is_opposite_side"], [27, 3, 1, "", "is_short"], [27, 3, 1, "", "last_event"], [27, 3, 1, "", "last_trade_id"], [27, 3, 1, "", "multiplier"], [27, 3, 1, "", "net_qty"], [27, 2, 1, "", "notional_value"], [27, 3, 1, "", "opening_order_id"], [27, 3, 1, "", "peak_qty"], [27, 3, 1, "", "price_precision"], [27, 3, 1, "", "quantity"], [27, 3, 1, "", "quote_currency"], [27, 3, 1, "", "realized_pnl"], [27, 3, 1, "", "realized_return"], [27, 3, 1, "", "side"], [27, 2, 1, "", "side_from_order_side"], [27, 3, 1, "", "size_precision"], [27, 3, 1, "", "strategy_id"], [27, 3, 1, "", "symbol"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "total_pnl"], [27, 3, 1, "", "trade_ids"], [27, 3, 1, "", "trader_id"], [27, 3, 1, "", "ts_closed"], [27, 3, 1, "", "ts_init"], [27, 3, 1, "", "ts_last"], [27, 3, 1, "", "ts_opened"], [27, 2, 1, "", "unrealized_pnl"], [27, 3, 1, "", "venue"], [27, 3, 1, "", "venue_order_ids"]], "nautilus_trader.model.tick_scheme": [[28, 0, 0, "-", "base"]], "nautilus_trader.model.tick_scheme.base": [[28, 1, 1, "", "TickScheme"], [28, 4, 1, "", "get_tick_scheme"], [28, 4, 1, "", "list_tick_schemes"], [28, 4, 1, "", "register_tick_scheme"], [28, 4, 1, "", "round_down"], [28, 4, 1, "", "round_up"]], "nautilus_trader.model.tick_scheme.base.TickScheme": [[28, 3, 1, "", "max_price"], [28, 3, 1, "", "min_price"], [28, 3, 1, "", "name"], [28, 2, 1, "", "next_ask_price"], [28, 2, 1, "", "next_bid_price"]], "nautilus_trader.model.tick_scheme.implementations": [[28, 0, 0, "-", "fixed"], [28, 0, 0, "-", "tiered"]], "nautilus_trader.model.tick_scheme.implementations.fixed": [[28, 1, 1, "", "FixedTickScheme"]], "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme": [[28, 3, 1, "", "increment"], [28, 3, 1, "", "max_price"], [28, 3, 1, "", "min_price"], [28, 3, 1, "", "name"], [28, 2, 1, "", "next_ask_price"], [28, 2, 1, "", "next_bid_price"], [28, 3, 1, "", "price_precision"]], "nautilus_trader.model.tick_scheme.implementations.tiered": [[28, 1, 1, "", "TieredTickScheme"]], "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme": [[28, 2, 1, "", "find_tick_index"], [28, 3, 1, "", "max_price"], [28, 3, 1, "", "min_price"], [28, 3, 1, "", "name"], [28, 2, 1, "", "next_ask_price"], [28, 2, 1, "", "next_bid_price"]], "nautilus_trader.msgbus": [[29, 0, 0, "-", "bus"], [29, 0, 0, "-", "subscription"]], "nautilus_trader.msgbus.bus": [[29, 1, 1, "", "MessageBus"]], "nautilus_trader.msgbus.bus.MessageBus": [[29, 2, 1, "", "deregister"], [29, 2, 1, "", "endpoints"], [29, 2, 1, "", "has_subscribers"], [29, 3, 1, "", "pub_count"], [29, 2, 1, "", "publish"], [29, 2, 1, "", "register"], [29, 3, 1, "", "req_count"], [29, 2, 1, "", "request"], [29, 3, 1, "", "res_count"], [29, 2, 1, "", "response"], [29, 2, 1, "", "send"], [29, 3, 1, "", "sent_count"], [29, 2, 1, "", "subscribe"], [29, 2, 1, "", "subscriptions"], [29, 2, 1, "", "topics"], [29, 3, 1, "", "trader_id"], [29, 2, 1, "", "unsubscribe"]], "nautilus_trader.msgbus.subscription": [[29, 1, 1, "", "Subscription"]], "nautilus_trader.msgbus.subscription.Subscription": [[29, 3, 1, "", "handler"], [29, 3, 1, "", "priority"], [29, 3, 1, "", "topic"]], "nautilus_trader.network": [[30, 0, 0, "-", "http"], [30, 0, 0, "-", "socket"], [30, 0, 0, "-", "websocket"]], "nautilus_trader.network.http": [[30, 1, 1, "", "HttpClient"]], "nautilus_trader.network.http.HttpClient": [[30, 2, 1, "", "avg_latency"], [30, 2, 1, "", "connect"], [30, 3, 1, "", "connected"], [30, 2, 1, "", "delete"], [30, 2, 1, "", "disconnect"], [30, 2, 1, "", "get"], [30, 2, 1, "", "max_latency"], [30, 2, 1, "", "min_latency"], [30, 2, 1, "", "post"], [30, 2, 1, "", "request"], [30, 3, 1, "", "session"]], "nautilus_trader.network.socket": [[30, 1, 1, "", "SocketClient"]], "nautilus_trader.network.socket.SocketClient": [[30, 2, 1, "", "connect"], [30, 2, 1, "", "disconnect"], [30, 3, 1, "", "host"], [30, 3, 1, "", "is_connected"], [30, 3, 1, "", "port"], [30, 2, 1, "", "post_connection"], [30, 2, 1, "", "reconnect"], [30, 2, 1, "", "send"], [30, 3, 1, "", "ssl"], [30, 2, 1, "", "start"], [30, 2, 1, "", "stop"]], "nautilus_trader.network.websocket": [[30, 1, 1, "", "WebSocketClient"]], "nautilus_trader.network.websocket.WebSocketClient": [[30, 2, 1, "", "close"], [30, 2, 1, "", "connect"], [30, 3, 1, "", "connection_retry_count"], [30, 2, 1, "", "disconnect"], [30, 3, 1, "", "is_connected"], [30, 3, 1, "", "is_running"], [30, 3, 1, "", "is_stopping"], [30, 3, 1, "", "max_retry_connection"], [30, 2, 1, "", "post_connection"], [30, 2, 1, "", "post_disconnection"], [30, 2, 1, "", "post_reconnection"], [30, 2, 1, "", "receive"], [30, 2, 1, "", "reconnect"], [30, 2, 1, "", "send"], [30, 2, 1, "", "send_json"], [30, 2, 1, "", "start"], [30, 3, 1, "", "unknown_message_count"]], "nautilus_trader.persistence": [[31, 0, 0, "-", "batching"], [31, 0, 0, "-", "catalog"], [31, 0, 0, "-", "streaming"]], "nautilus_trader.persistence.batching": [[31, 1, 1, "", "FileMeta"], [31, 4, 1, "", "extract_generic_data_client_ids"]], "nautilus_trader.persistence.batching.FileMeta": [[31, 3, 1, "", "client_id"], [31, 2, 1, "", "count"], [31, 3, 1, "", "datatype"], [31, 3, 1, "", "end"], [31, 3, 1, "", "filename"], [31, 2, 1, "", "index"], [31, 3, 1, "", "instrument_id"], [31, 3, 1, "", "start"]], "nautilus_trader.persistence.catalog": [[31, 1, 1, "", "BaseDataCatalog"], [31, 1, 1, "", "ParquetDataCatalog"]], "nautilus_trader.persistence.external": [[31, 0, 0, "-", "core"], [31, 0, 0, "-", "readers"]], "nautilus_trader.persistence.external.core": [[31, 1, 1, "", "RawFile"], [31, 4, 1, "", "determine_partition_cols"], [31, 4, 1, "", "dicts_to_dataframes"], [31, 4, 1, "", "merge_existing_data"], [31, 4, 1, "", "read_progress"], [31, 4, 1, "", "split_and_serialize"], [31, 4, 1, "", "write_parquet"], [31, 4, 1, "", "write_tables"]], "nautilus_trader.persistence.external.readers": [[31, 1, 1, "", "ByteReader"], [31, 1, 1, "", "CSVReader"], [31, 1, 1, "", "LinePreprocessor"], [31, 1, 1, "", "ParquetReader"], [31, 1, 1, "", "Reader"], [31, 1, 1, "", "TextReader"]], "nautilus_trader.persistence.streaming": [[31, 1, 1, "", "StreamingFeatherWriter"], [31, 4, 1, "", "generate_signal_class"]], "nautilus_trader.persistence.streaming.StreamingFeatherWriter": [[31, 2, 1, "", "check_flush"], [31, 2, 1, "", "close"], [31, 2, 1, "", "flush"], [31, 2, 1, "", "write"]], "nautilus_trader.portfolio": [[32, 0, 0, "-", "base"], [32, 0, 0, "-", "portfolio"]], "nautilus_trader.portfolio.base": [[32, 1, 1, "", "PortfolioFacade"]], "nautilus_trader.portfolio.base.PortfolioFacade": [[32, 2, 1, "", "account"], [32, 3, 1, "", "analyzer"], [32, 2, 1, "", "balances_locked"], [32, 3, 1, "", "initialized"], [32, 2, 1, "", "is_completely_flat"], [32, 2, 1, "", "is_flat"], [32, 2, 1, "", "is_net_long"], [32, 2, 1, "", "is_net_short"], [32, 2, 1, "", "margins_init"], [32, 2, 1, "", "margins_maint"], [32, 2, 1, "", "net_exposure"], [32, 2, 1, "", "net_exposures"], [32, 2, 1, "", "net_position"], [32, 2, 1, "", "unrealized_pnl"], [32, 2, 1, "", "unrealized_pnls"]], "nautilus_trader.portfolio.portfolio": [[32, 1, 1, "", "Portfolio"]], "nautilus_trader.portfolio.portfolio.Portfolio": [[32, 2, 1, "", "account"], [32, 3, 1, "", "analyzer"], [32, 2, 1, "", "balances_locked"], [32, 2, 1, "", "initialize_orders"], [32, 2, 1, "", "initialize_positions"], [32, 3, 1, "", "initialized"], [32, 2, 1, "", "is_completely_flat"], [32, 2, 1, "", "is_flat"], [32, 2, 1, "", "is_net_long"], [32, 2, 1, "", "is_net_short"], [32, 2, 1, "", "margins_init"], [32, 2, 1, "", "margins_maint"], [32, 2, 1, "", "net_exposure"], [32, 2, 1, "", "net_exposures"], [32, 2, 1, "", "net_position"], [32, 2, 1, "", "reset"], [32, 2, 1, "", "unrealized_pnl"], [32, 2, 1, "", "unrealized_pnls"], [32, 2, 1, "", "update_account"], [32, 2, 1, "", "update_order"], [32, 2, 1, "", "update_position"], [32, 2, 1, "", "update_quote_tick"]], "nautilus_trader.risk": [[33, 0, 0, "-", "engine"], [33, 0, 0, "-", "sizing"]], "nautilus_trader.risk.engine": [[33, 1, 1, "", "RiskEngine"]], "nautilus_trader.risk.engine.RiskEngine": [[33, 3, 1, "", "command_count"], [33, 3, 1, "", "debug"], [33, 2, 1, "", "degrade"], [33, 3, 1, "", "deny_modify_pending_update"], [33, 2, 1, "", "dispose"], [33, 3, 1, "", "event_count"], [33, 2, 1, "", "execute"], [33, 2, 1, "", "fault"], [33, 2, 1, "", "fully_qualified_name"], [33, 3, 1, "", "id"], [33, 3, 1, "", "is_bypassed"], [33, 3, 1, "", "is_degraded"], [33, 3, 1, "", "is_disposed"], [33, 3, 1, "", "is_faulted"], [33, 3, 1, "", "is_initialized"], [33, 3, 1, "", "is_running"], [33, 3, 1, "", "is_stopped"], [33, 2, 1, "", "max_notional_per_order"], [33, 2, 1, "", "max_notionals_per_order"], [33, 2, 1, "", "max_order_modify_rate"], [33, 2, 1, "", "max_order_submit_rate"], [33, 2, 1, "", "process"], [33, 2, 1, "", "reset"], [33, 2, 1, "", "resume"], [33, 2, 1, "", "set_max_notional_per_order"], [33, 2, 1, "", "set_trading_state"], [33, 2, 1, "", "start"], [33, 3, 1, "", "state"], [33, 2, 1, "", "stop"], [33, 3, 1, "", "trader_id"], [33, 3, 1, "", "trading_state"], [33, 3, 1, "", "type"]], "nautilus_trader.risk.sizing": [[33, 1, 1, "", "FixedRiskSizer"], [33, 1, 1, "", "PositionSizer"]], "nautilus_trader.risk.sizing.FixedRiskSizer": [[33, 2, 1, "", "calculate"], [33, 3, 1, "", "instrument"], [33, 2, 1, "", "update_instrument"]], "nautilus_trader.risk.sizing.PositionSizer": [[33, 2, 1, "", "calculate"], [33, 3, 1, "", "instrument"], [33, 2, 1, "", "update_instrument"]], "nautilus_trader.serialization.arrow": [[34, 0, 0, "-", "serializer"]], "nautilus_trader.serialization.arrow.serializer": [[34, 1, 1, "", "ParquetSerializer"], [34, 4, 1, "", "get_cls_table"], [34, 4, 1, "", "get_partition_keys"], [34, 4, 1, "", "get_schema"], [34, 4, 1, "", "list_schemas"], [34, 4, 1, "", "register_parquet"]], "nautilus_trader.serialization.arrow.serializer.ParquetSerializer": [[34, 2, 1, "", "deserialize"], [34, 2, 1, "", "serialize"]], "nautilus_trader.serialization": [[34, 0, 0, "-", "base"]], "nautilus_trader.serialization.base": [[34, 1, 1, "", "Serializer"], [34, 4, 1, "", "register_serializable_object"]], "nautilus_trader.serialization.base.Serializer": [[34, 2, 1, "", "deserialize"], [34, 2, 1, "", "serialize"]], "nautilus_trader.serialization.msgpack": [[34, 0, 0, "-", "serializer"]], "nautilus_trader.serialization.msgpack.serializer": [[34, 1, 1, "", "MsgPackSerializer"]], "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer": [[34, 2, 1, "", "deserialize"], [34, 2, 1, "", "serialize"], [34, 3, 1, "", "timestamps_as_str"]], "nautilus_trader.system": [[35, 0, 0, "-", "kernel"]], "nautilus_trader.system.kernel": [[35, 1, 1, "", "NautilusKernel"]], "nautilus_trader.system.kernel.NautilusKernel": [[35, 2, 1, "", "add_log_sink"], [35, 5, 1, "", "cache"], [35, 5, 1, "", "clock"], [35, 5, 1, "", "data_engine"], [35, 2, 1, "", "dispose"], [35, 5, 1, "", "emulator"], [35, 5, 1, "", "environment"], [35, 5, 1, "", "exec_engine"], [35, 5, 1, "", "executor"], [35, 5, 1, "", "instance_id"], [35, 5, 1, "", "log"], [35, 5, 1, "", "logger"], [35, 5, 1, "", "loop"], [35, 5, 1, "", "loop_sig_callback"], [35, 5, 1, "", "machine_id"], [35, 5, 1, "", "msgbus"], [35, 5, 1, "", "name"], [35, 5, 1, "", "portfolio"], [35, 5, 1, "", "risk_engine"], [35, 5, 1, "", "trader"], [35, 5, 1, "", "trader_id"], [35, 5, 1, "", "ts_created"], [35, 5, 1, "", "writer"]], "nautilus_trader.trading": [[36, 0, 0, "-", "filters"], [36, 0, 0, "-", "strategy"], [36, 0, 0, "-", "trader"]], "nautilus_trader.trading.filters": [[36, 1, 1, "", "EconomicNewsEventFilter"], [36, 1, 1, "", "ForexSession"], [36, 1, 1, "", "ForexSessionFilter"], [36, 1, 1, "", "NewsEvent"], [36, 1, 1, "", "NewsImpact"]], "nautilus_trader.trading.filters.EconomicNewsEventFilter": [[36, 3, 1, "", "currencies"], [36, 3, 1, "", "impacts"], [36, 2, 1, "", "next_event"], [36, 2, 1, "", "prev_event"], [36, 3, 1, "", "unfiltered_data_end"], [36, 3, 1, "", "unfiltered_data_start"]], "nautilus_trader.trading.filters.ForexSessionFilter": [[36, 2, 1, "", "local_from_utc"], [36, 2, 1, "", "next_end"], [36, 2, 1, "", "next_start"], [36, 2, 1, "", "prev_end"], [36, 2, 1, "", "prev_start"]], "nautilus_trader.trading.filters.NewsEvent": [[36, 3, 1, "", "currency"], [36, 2, 1, "", "fully_qualified_name"], [36, 3, 1, "", "impact"], [36, 3, 1, "", "name"], [36, 3, 1, "", "ts_event"], [36, 3, 1, "", "ts_init"]], "nautilus_trader.trading.strategy": [[36, 1, 1, "", "Strategy"]], "nautilus_trader.trading.strategy.Strategy": [[36, 3, 1, "", "cache"], [36, 2, 1, "", "cancel_all_orders"], [36, 2, 1, "", "cancel_order"], [36, 3, 1, "", "clock"], [36, 2, 1, "", "close_all_positions"], [36, 2, 1, "", "close_position"], [36, 2, 1, "", "degrade"], [36, 2, 1, "", "deregister_warning_event"], [36, 2, 1, "", "dispose"], [36, 2, 1, "", "fault"], [36, 2, 1, "", "fully_qualified_name"], [36, 2, 1, "", "handle_bar"], [36, 2, 1, "", "handle_bars"], [36, 2, 1, "", "handle_data"], [36, 2, 1, "", "handle_event"], [36, 2, 1, "", "handle_historical_data"], [36, 2, 1, "", "handle_instrument"], [36, 2, 1, "", "handle_instrument_close_price"], [36, 2, 1, "", "handle_instrument_status_update"], [36, 2, 1, "", "handle_instruments"], [36, 2, 1, "", "handle_order_book"], [36, 2, 1, "", "handle_order_book_delta"], [36, 2, 1, "", "handle_quote_tick"], [36, 2, 1, "", "handle_quote_ticks"], [36, 2, 1, "", "handle_ticker"], [36, 2, 1, "", "handle_trade_tick"], [36, 2, 1, "", "handle_trade_ticks"], [36, 2, 1, "", "handle_venue_status_update"], [36, 3, 1, "", "id"], [36, 2, 1, "", "indicators_initialized"], [36, 3, 1, "", "is_degraded"], [36, 3, 1, "", "is_disposed"], [36, 3, 1, "", "is_faulted"], [36, 3, 1, "", "is_initialized"], [36, 3, 1, "", "is_running"], [36, 3, 1, "", "is_stopped"], [36, 2, 1, "", "load"], [36, 3, 1, "", "log"], [36, 2, 1, "", "modify_order"], [36, 3, 1, "", "msgbus"], [36, 3, 1, "", "oms_type"], [36, 2, 1, "", "on_bar"], [36, 2, 1, "", "on_data"], [36, 2, 1, "", "on_degrade"], [36, 2, 1, "", "on_dispose"], [36, 2, 1, "", "on_event"], [36, 2, 1, "", "on_fault"], [36, 2, 1, "", "on_historical_data"], [36, 2, 1, "", "on_instrument"], [36, 2, 1, "", "on_instrument_close_price"], [36, 2, 1, "", "on_instrument_status_update"], [36, 2, 1, "", "on_load"], [36, 2, 1, "", "on_order_book"], [36, 2, 1, "", "on_order_book_delta"], [36, 2, 1, "", "on_quote_tick"], [36, 2, 1, "", "on_reset"], [36, 2, 1, "", "on_resume"], [36, 2, 1, "", "on_save"], [36, 2, 1, "", "on_start"], [36, 2, 1, "", "on_stop"], [36, 2, 1, "", "on_ticker"], [36, 2, 1, "", "on_trade_tick"], [36, 2, 1, "", "on_venue_status_update"], [36, 3, 1, "", "order_factory"], [36, 3, 1, "", "order_id_tag"], [36, 3, 1, "", "portfolio"], [36, 2, 1, "", "publish_data"], [36, 2, 1, "", "publish_signal"], [36, 2, 1, "", "query_order"], [36, 2, 1, "", "register"], [36, 2, 1, "", "register_base"], [36, 2, 1, "", "register_indicator_for_bars"], [36, 2, 1, "", "register_indicator_for_quote_ticks"], [36, 2, 1, "", "register_indicator_for_trade_ticks"], [36, 2, 1, "", "register_warning_event"], [36, 3, 1, "", "registered_indicators"], [36, 2, 1, "", "request_bars"], [36, 2, 1, "", "request_data"], [36, 2, 1, "", "request_instrument"], [36, 2, 1, "", "request_instruments"], [36, 2, 1, "", "request_quote_ticks"], [36, 2, 1, "", "request_trade_ticks"], [36, 2, 1, "", "reset"], [36, 2, 1, "", "resume"], [36, 2, 1, "", "save"], [36, 2, 1, "", "start"], [36, 3, 1, "", "state"], [36, 2, 1, "", "stop"], [36, 2, 1, "", "submit_order"], [36, 2, 1, "", "submit_order_list"], [36, 2, 1, "", "subscribe_bars"], [36, 2, 1, "", "subscribe_data"], [36, 2, 1, "", "subscribe_instrument"], [36, 2, 1, "", "subscribe_instrument_close_prices"], [36, 2, 1, "", "subscribe_instrument_status_updates"], [36, 2, 1, "", "subscribe_instruments"], [36, 2, 1, "", "subscribe_order_book_deltas"], [36, 2, 1, "", "subscribe_order_book_snapshots"], [36, 2, 1, "", "subscribe_quote_ticks"], [36, 2, 1, "", "subscribe_ticker"], [36, 2, 1, "", "subscribe_trade_ticks"], [36, 2, 1, "", "subscribe_venue_status_updates"], [36, 2, 1, "", "to_importable_config"], [36, 3, 1, "", "trader_id"], [36, 3, 1, "", "type"], [36, 2, 1, "", "unsubscribe_bars"], [36, 2, 1, "", "unsubscribe_data"], [36, 2, 1, "", "unsubscribe_instrument"], [36, 2, 1, "", "unsubscribe_instruments"], [36, 2, 1, "", "unsubscribe_order_book_deltas"], [36, 2, 1, "", "unsubscribe_order_book_snapshots"], [36, 2, 1, "", "unsubscribe_quote_ticks"], [36, 2, 1, "", "unsubscribe_ticker"], [36, 2, 1, "", "unsubscribe_trade_ticks"], [36, 2, 1, "", "unsubscribe_venue_status_updates"]], "nautilus_trader.trading.trader": [[36, 1, 1, "", "Trader"]], "nautilus_trader.trading.trader.Trader": [[36, 2, 1, "", "actor_ids"], [36, 2, 1, "", "actor_states"], [36, 2, 1, "", "actors"], [36, 2, 1, "", "add_actor"], [36, 2, 1, "", "add_actors"], [36, 2, 1, "", "add_strategies"], [36, 2, 1, "", "add_strategy"], [36, 2, 1, "", "check_residuals"], [36, 2, 1, "", "clear_actors"], [36, 2, 1, "", "clear_strategies"], [36, 2, 1, "", "degrade"], [36, 2, 1, "", "dispose"], [36, 2, 1, "", "fault"], [36, 2, 1, "", "fully_qualified_name"], [36, 2, 1, "", "generate_account_report"], [36, 2, 1, "", "generate_order_fills_report"], [36, 2, 1, "", "generate_orders_report"], [36, 2, 1, "", "generate_positions_report"], [36, 3, 1, "", "id"], [36, 3, 1, "", "is_degraded"], [36, 3, 1, "", "is_disposed"], [36, 3, 1, "", "is_faulted"], [36, 3, 1, "", "is_initialized"], [36, 3, 1, "", "is_running"], [36, 3, 1, "", "is_stopped"], [36, 2, 1, "", "load"], [36, 2, 1, "", "reset"], [36, 2, 1, "", "resume"], [36, 2, 1, "", "save"], [36, 2, 1, "", "start"], [36, 3, 1, "", "state"], [36, 2, 1, "", "stop"], [36, 2, 1, "", "strategies"], [36, 2, 1, "", "strategy_ids"], [36, 2, 1, "", "strategy_states"], [36, 2, 1, "", "subscribe"], [36, 3, 1, "", "trader_id"], [36, 3, 1, "", "type"], [36, 2, 1, "", "unsubscribe"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"account": [0, 19, 20, 49, 60], "cash": 0, "margin": [0, 62], "calcul": 0, "factori": [0, 1, 2, 4, 8, 14, 64], "manag": 0, "betfair": [1, 48], "data": [1, 2, 4, 6, 11, 16, 18, 25, 41, 46, 49, 52, 54, 59, 60, 63], "type": [1, 2, 19, 49, 53, 55, 58, 60, 64], "execut": [1, 2, 4, 6, 12, 16, 64], "pars": 1, "provid": [1, 2, 4, 5, 6, 8, 52], "socket": [1, 30], "util": 1, "binanc": [2, 49], "config": [2, 4, 9], "enum": [2, 8, 19], "futur": [2, 23], "spot": 2, "adapt": [3, 14, 52], "interact": [4, 50], "broker": [4, 50], "analysi": [5, 57], "portfolio": [5, 32, 57], "analyz": [5, 14], "report": [5, 12], "statist": [5, 57], "expect": 5, "long": 5, "ratio": [5, 14], "averag": [5, 14], "loser": 5, "max": 5, "min": 5, "profit": 5, "factor": 5, "return": 5, "loss": 5, "win": 5, "volatil": [5, 14], "risk": [5, 16, 33], "sharp": 5, "sortino": 5, "rate": [5, 14, 41], "winner": 5, "backtest": [6, 9, 46, 52, 57, 59, 60, 62], "loader": 6, "wrangler": 6, "client": [6, 11, 12, 16, 30, 52], "engin": [6, 11, 12, 16, 33, 46], "exchang": 6, "model": [6, 22, 60], "modul": 6, "node": [6, 16], "result": 6, "cach": [7, 15], "databas": 7, "base": [7, 14, 18, 23, 26, 28, 32, 34, 49], "common": [8, 9, 58, 60], "actor": 8, "clock": 8, "compon": [8, 58], "state": [8, 10], "trigger": [8, 64], "log": 8, "level": [8, 25, 58], "color": 8, "gener": [8, 54], "queue": 8, "throttler": 8, "timer": 8, "live": [9, 16, 52, 60, 62], "core": [10, 31, 58, 60], "collect": 10, "datetim": 10, "finit": 10, "machin": 10, "fsm": 10, "messag": [10, 11, 12, 29, 37, 58], "stat": 10, "uuid": 10, "aggreg": [11, 19], "api": [13, 48, 49, 50, 51], "refer": 13, "indic": 14, "move": 14, "ama": 14, "exponenti": 14, "ema": 14, "donchian": 14, "channel": 14, "hull": 14, "hma": 14, "simpl": 14, "sma": 14, "weight": 14, "wma": 14, "true": 14, "rang": 14, "atr": 14, "bolling": 14, "band": 14, "effici": 14, "fuzzi": 14, "candlestick": 14, "keltner": 14, "posit": [14, 20, 27], "converg": 14, "diverg": 14, "macd": 14, "On": 14, "balanc": 14, "volum": 14, "obv": 14, "pressur": 14, "Of": 14, "chang": 14, "roc": 14, "rel": 14, "strength": 14, "index": 14, "rsi": 14, "spread": 14, "stochast": 14, "swing": 14, "vwap": 14, "infrastructur": 15, "builder": 16, "currenc": [17, 23], "bar": [18, 19], "bet": [18, 23], "tick": [18, 28], "ticker": 18, "venu": [18, 46, 59], "sourc": [19, 45], "aggregssor": 19, "side": 19, "asset": 19, "class": [19, 32, 63], "event": [20, 41], "order": [20, 25, 26, 49, 53, 55, 60, 64], "identifi": 21, "instrument": [23, 46, 50, 52, 62, 63], "crypto": 23, "perpetu": 23, "pair": 23, "equiti": 23, "option": 23, "object": 24, "book": 25, "ladder": 25, "simul": 25, "error": [25, 58], "market": [26, 64], "limit": [26, 55, 62, 64], "stop": [26, 49, 64], "To": [26, 64], "If": [26, 64], "touch": [26, 64], "trail": [26, 49, 64], "list": [26, 53], "scheme": 28, "fix": 28, "tier": 28, "bu": 29, "subscript": 29, "network": 30, "http": 30, "websocket": 30, "persist": [31, 55], "extern": [31, 63], "reader": [31, 63], "batch": 31, "catalog": [31, 59], "stream": 31, "size": 33, "serial": 34, "msgpack": 34, "arrow": 34, "system": [35, 58], "kernel": 35, "trade": [36, 46, 52, 60, 62], "filter": 36, "strategi": [36, 46, 65], "trader": 36, "code": [37, 43, 58], "standard": 37, "style": 37, "black": 37, "format": 37, "pep": 37, "8": 37, "docstr": 37, "flake8": 37, "commit": 37, "cython": [38, 47], "function": [38, 63], "method": 38, "signatur": 38, "debug": 38, "pycharm": 38, "doc": 38, "tip": 38, "environ": [39, 58], "setup": 39, "build": 39, "develop": 40, "guid": [40, 61], "packag": 41, "libor": 41, "short": 41, "term": 41, "interest": 41, "econom": 41, "rust": [42, 47], "python": [42, 47], "bind": 42, "unsaf": 42, "safeti": [42, 58], "polici": 42, "resourc": 42, "test": 43, "nox": 43, "mock": 43, "coverag": 43, "exclud": 43, "get": [44, 46, 59, 63], "start": [44, 46], "instal": 45, "from": 45, "pypi": 45, "extra": 45, "github": 45, "releas": [45, 55], "quick": 46, "run": [46, 59], "docker": 46, "sampl": [46, 63], "connect": 46, "parquetdatacatalog": [46, 63], "write": [46, 63], "configur": [46, 48, 49, 50, 59, 65], "nautilustrad": 47, "document": 47, "featur": 47, "why": 47, "what": 47, "i": 47, "architectur": [47, 58], "qualiti": [47, 58], "attribut": [47, 58], "overview": [48, 49, 50, 64], "credenti": [48, 49, 50], "symbologi": [49, 62], "url": 49, "overrid": 49, "u": 49, "testnet": 49, "parser": [49, 63], "warn": 49, "specif": 49, "binancefuturesmarkpriceupd": 49, "exampl": [50, 52, 59], "queri": [50, 55], "integr": 51, "implement": [51, 58, 65], "goal": 51, "unif": 51, "research": 52, "request": 52, "advanc": [53, 56], "conting": [53, 64], "bracket": 53, "custom": [54, 57], "emul": 55, "submit": 55, "life": 55, "cycl": 55, "held": 55, "design": 58, "philosophi": 58, "context": 58, "framework": 58, "organ": 58, "low": 58, "structur": 58, "depend": 58, "flow": 58, "except": 58, "complet": 59, "import": 59, "some": [59, 63], "raw": [59, 63], "The": [59, 63], "load": [59, 63], "us": [59, 63], "ad": 59, "concept": 60, "distribut": 60, "domain": 60, "user": 61, "find": 62, "precis": 62, "increment": 62, "price": 62, "quantiti": [62, 64], "fee": 62, "addit": 62, "info": 62, "datacatalog": 63, "via": 63, "creat": 63, "new": 63, "file": 63, "instruct": 64, "time": 64, "In": 64, "forc": 64, "expir": 64, "post": 64, "onli": 64, "reduc": 64, "displai": 64, "offset": 64, "multipl": 65}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Accounting": [[0, "module-nautilus_trader.accounting"]], "Cash Account": [[0, "module-nautilus_trader.accounting.accounts.cash"]], "Margin Account": [[0, "module-nautilus_trader.accounting.accounts.margin"]], "Calculators": [[0, "module-nautilus_trader.accounting.calculators"]], "Factory": [[0, "module-nautilus_trader.accounting.factory"]], "Manager": [[0, "module-nautilus_trader.accounting.manager"]], "Betfair": [[1, "module-nautilus_trader.adapters.betfair"], [48, "betfair"]], "Data": [[1, "module-nautilus_trader.adapters.betfair.data"], [2, "module-nautilus_trader.adapters.binance.futures.data"], [2, "id3"], [4, "data"], [11, "module-nautilus_trader.data"], [18, "module-nautilus_trader.model.data"], [25, "module-nautilus_trader.model.orderbook.data"], [46, "data"], [54, "data"]], "Data Types": [[1, "module-nautilus_trader.adapters.betfair.data_types"], [60, "data-types"]], "Execution": [[1, "module-nautilus_trader.adapters.betfair.execution"], [2, "module-nautilus_trader.adapters.binance.futures.execution"], [2, "id5"], [4, "execution"], [6, "module-nautilus_trader.backtest.execution_client"], [12, "module-nautilus_trader.execution"]], "Factories": [[1, "module-nautilus_trader.adapters.betfair.factories"], [2, "module-nautilus_trader.adapters.binance.factories"], [4, "factories"], [8, "module-nautilus_trader.common.factories"]], "Parsing": [[1, "module-nautilus_trader.adapters.betfair.parsing"]], "Providers": [[1, "module-nautilus_trader.adapters.betfair.providers"], [2, "module-nautilus_trader.adapters.binance.futures.providers"], [2, "id6"], [4, "providers"], [6, "module-nautilus_trader.backtest.data.providers"], [8, "module-nautilus_trader.common.providers"]], "Sockets": [[1, "module-nautilus_trader.adapters.betfair.sockets"]], "Utility": [[1, "module-nautilus_trader.adapters.betfair.util"]], "Binance": [[2, "module-nautilus_trader.adapters.binance"], [49, "binance"]], "Config": [[2, "module-nautilus_trader.adapters.binance.config"], [4, "module-nautilus_trader.adapters.interactive_brokers.config"], [9, "module-nautilus_trader.config"]], "Enums": [[2, "module-nautilus_trader.adapters.binance.common.enums"], [2, "id1"], [2, "id4"], [8, "module-nautilus_trader.common.enums"], [19, "module-nautilus_trader.model.enums"]], "Types": [[2, "module-nautilus_trader.adapters.binance.common.types"], [2, "id2"]], "Futures": [[2, "futures"]], "Spot": [[2, "spot"]], "Adapters": [[3, "module-nautilus_trader.adapters"], [52, "adapters"]], "Interactive Brokers": [[4, "module-nautilus_trader.adapters.interactive_brokers"], [50, "interactive-brokers"]], "Analysis": [[5, "module-nautilus_trader.analysis"]], "Portfolio Analyzer": [[5, "module-nautilus_trader.analysis.analyzer"]], "Report Provider": [[5, "module-nautilus_trader.analysis.reporter"]], "Portfolio Statistic": [[5, "module-nautilus_trader.analysis.statistic"]], "Expectancy": [[5, "module-nautilus_trader.analysis.statistics.expectancy"]], "Long Ratio": [[5, "module-nautilus_trader.analysis.statistics.long_ratio"]], "Average Loser": [[5, "module-nautilus_trader.analysis.statistics.loser_avg"]], "Max Loser": [[5, "module-nautilus_trader.analysis.statistics.loser_max"]], "Min Loser": [[5, "module-nautilus_trader.analysis.statistics.loser_min"]], "Profit Factor": [[5, "module-nautilus_trader.analysis.statistics.profit_factor"]], "Average (Returns)": [[5, "module-nautilus_trader.analysis.statistics.returns_avg"]], "Average Loss (Returns)": [[5, "module-nautilus_trader.analysis.statistics.returns_avg_loss"]], "Average Win (Returns)": [[5, "module-nautilus_trader.analysis.statistics.returns_avg_win"]], "Returns Volatility": [[5, "module-nautilus_trader.analysis.statistics.returns_volatility"]], "Risk Return Ratio": [[5, "module-nautilus_trader.analysis.statistics.risk_return_ratio"]], "Sharpe Ratio": [[5, "module-nautilus_trader.analysis.statistics.sharpe_ratio"]], "Sortino Ratio": [[5, "module-nautilus_trader.analysis.statistics.sortino_ratio"]], "Win Rate": [[5, "module-nautilus_trader.analysis.statistics.win_rate"]], "Average Winner": [[5, "module-nautilus_trader.analysis.statistics.winner_avg"]], "Average Max": [[5, "module-nautilus_trader.analysis.statistics.winner_max"]], "Average Min": [[5, "module-nautilus_trader.analysis.statistics.winner_min"]], "Backtest": [[6, "module-nautilus_trader.backtest"], [9, "module-nautilus_trader.config.backtest"]], "Loaders": [[6, "module-nautilus_trader.backtest.data.loaders"]], "Wranglers": [[6, "module-nautilus_trader.backtest.data.wranglers"]], "Data Client": [[6, "module-nautilus_trader.backtest.data_client"], [16, "module-nautilus_trader.live.data_client"]], "Engine": [[6, "module-nautilus_trader.backtest.engine"], [11, "module-nautilus_trader.data.engine"], [12, "module-nautilus_trader.execution.engine"], [33, "module-nautilus_trader.risk.engine"], [46, "engine"]], "Exchange": [[6, "module-nautilus_trader.backtest.exchange"]], "Models": [[6, "module-nautilus_trader.backtest.models"]], "Modules": [[6, "module-nautilus_trader.backtest.modules"]], "Backtest Node": [[6, "module-nautilus_trader.backtest.node"]], "Results": [[6, "module-nautilus_trader.backtest.results"]], "Cache": [[7, "module-nautilus_trader.cache"], [7, "id1"], [15, "module-nautilus_trader.infrastructure.cache"]], "Database": [[7, "module-nautilus_trader.cache.database"]], "Base": [[7, "module-nautilus_trader.cache.base"], [18, "module-nautilus_trader.model.data.base"], [23, "module-nautilus_trader.model.instruments.base"], [26, "module-nautilus_trader.model.orders.base"], [28, "module-nautilus_trader.model.tick_scheme.base"], [34, "module-nautilus_trader.serialization.base"]], "Common": [[8, "module-nautilus_trader.common"], [9, "module-nautilus_trader.config.common"]], "Actor": [[8, "module-nautilus_trader.common.actor"]], "Clock": [[8, "module-nautilus_trader.common.clock"]], "Component": [[8, "module-nautilus_trader.common.component"]], "Component State": [[8, "component-state"]], "Component Trigger": [[8, "component-trigger"]], "Log Level": [[8, "log-level"]], "Log Color": [[8, "log-color"]], "Generators": [[8, "module-nautilus_trader.common.generators"]], "Logging": [[8, "module-nautilus_trader.common.logging"]], "Queue": [[8, "module-nautilus_trader.common.queue"]], "Throttler": [[8, "module-nautilus_trader.common.throttler"]], "Timer": [[8, "module-nautilus_trader.common.timer"]], "Live": [[9, "module-nautilus_trader.config.live"], [16, "module-nautilus_trader.live"]], "Core": [[10, "module-nautilus_trader.core"], [31, "module-nautilus_trader.persistence.external.core"]], "Collections": [[10, "module-nautilus_trader.core.collections"]], "Datetime": [[10, "module-nautilus_trader.core.datetime"]], "Finite-State Machine (FSM)": [[10, "module-nautilus_trader.core.fsm"]], "Message": [[10, "module-nautilus_trader.core.message"]], "Stats": [[10, "module-nautilus_trader.core.stats"]], "UUID": [[10, "module-nautilus_trader.core.uuid"]], "Aggregation": [[11, "module-nautilus_trader.data.aggregation"]], "Client": [[11, "module-nautilus_trader.data.client"], [12, "module-nautilus_trader.execution.client"]], "Messages": [[11, "module-nautilus_trader.data.messages"], [12, "module-nautilus_trader.execution.messages"]], "Reports": [[12, "module-nautilus_trader.execution.reports"]], "API Reference": [[13, "api-reference"]], "Indicators": [[14, "module-nautilus_trader.indicators"]], "Adaptive Moving Average (AMA)": [[14, "module-nautilus_trader.indicators.average.ama"]], "Exponential Moving Average (EMA)": [[14, "module-nautilus_trader.indicators.average.ema"]], "Donchian Channel": [[14, "module-nautilus_trader.indicators.donchian_channel"]], "Hull Moving Average (HMA)": [[14, "module-nautilus_trader.indicators.average.hma"]], "Moving Average Factory": [[14, "module-nautilus_trader.indicators.average.ma_factory"]], "Simple Moving Average (SMA)": [[14, "module-nautilus_trader.indicators.average.sma"]], "Weighted Moving Average (WMA)": [[14, "module-nautilus_trader.indicators.average.wma"]], "Average True Range (ATR)": [[14, "module-nautilus_trader.indicators.atr"]], "Bollinger Bands": [[14, "module-nautilus_trader.indicators.bollinger_bands"]], "Efficiency Ratio": [[14, "module-nautilus_trader.indicators.efficiency_ratio"]], "Fuzzy Candlesticks": [[14, "module-nautilus_trader.indicators.fuzzy_candlesticks"]], "Keltner Channel": [[14, "module-nautilus_trader.indicators.keltner_channel"]], "Keltner Position": [[14, "module-nautilus_trader.indicators.keltner_position"]], "Moving Average Convergence Divergence (MACD)": [[14, "module-nautilus_trader.indicators.macd"]], "On Balance Volume (OBV)": [[14, "module-nautilus_trader.indicators.obv"]], "Pressure": [[14, "module-nautilus_trader.indicators.pressure"]], "Rate Of Change (ROC)": [[14, "module-nautilus_trader.indicators.roc"]], "Relative Strength Index (RSI)": [[14, "module-nautilus_trader.indicators.rsi"]], "Spread Analyzer": [[14, "module-nautilus_trader.indicators.spread_analyzer"]], "Stochastics": [[14, "module-nautilus_trader.indicators.stochastics"]], "Swings": [[14, "module-nautilus_trader.indicators.swings"]], "Volatility Ratio": [[14, "module-nautilus_trader.indicators.volatility_ratio"]], "VWAP": [[14, "module-nautilus_trader.indicators.vwap"]], "Moving Average (Base)": [[14, "module-nautilus_trader.indicators.average.moving_average"]], "Indicator (Base)": [[14, "module-nautilus_trader.indicators.base.indicator"]], "Infrastructure": [[15, "module-nautilus_trader.infrastructure"]], "Data Engine": [[16, "module-nautilus_trader.live.data_engine"]], "Execution Client": [[16, "module-nautilus_trader.live.execution_client"]], "Execution Engine": [[16, "module-nautilus_trader.live.execution_engine"]], "Risk Engine": [[16, "module-nautilus_trader.live.risk_engine"]], "Node": [[16, "module-nautilus_trader.live.node"]], "Node Builder": [[16, "module-nautilus_trader.live.node_builder"]], "Currency": [[17, "module-nautilus_trader.model.currency"]], "Bar": [[18, "module-nautilus_trader.model.data.bar"]], "Bet": [[18, "module-nautilus_trader.model.data.bet"]], "Tick": [[18, "module-nautilus_trader.model.data.tick"]], "Ticker": [[18, "module-nautilus_trader.model.data.ticker"]], "Venue": [[18, "module-nautilus_trader.model.data.venue"], [46, "venue"]], "Account Type": [[19, "account-type"], [49, "account-type"]], "Aggregation Source": [[19, "aggregation-source"]], "Aggregssor Side": [[19, "aggregssor-side"]], "Asset Class": [[19, "asset-class"]], "Asset Type": [[19, "asset-type"]], "Bar Aggregation": [[19, "bar-aggregation"]], "Events": [[20, "module-nautilus_trader.model.events"]], "Account Events": [[20, "module-nautilus_trader.model.events.account"]], "Order Events": [[20, "module-nautilus_trader.model.events.order"]], "Position Events": [[20, "module-nautilus_trader.model.events.position"]], "Identifiers": [[21, "module-nautilus_trader.model.identifiers"]], "Model": [[22, "module-nautilus_trader.model"]], "Instruments": [[23, "module-nautilus_trader.model.instruments"], [46, "instruments"], [50, "instruments"], [62, "instruments"], [63, "instruments"]], "Betting": [[23, "module-nautilus_trader.model.instruments.betting"]], "Crypto Perpetual": [[23, "module-nautilus_trader.model.instruments.crypto_perpetual"]], "Crypto Future": [[23, "module-nautilus_trader.model.instruments.crypto_future"]], "Currency Pair": [[23, "module-nautilus_trader.model.instruments.currency_pair"]], "Equity": [[23, "module-nautilus_trader.model.instruments.equity"]], "Future": [[23, "module-nautilus_trader.model.instruments.future"]], "Option": [[23, "module-nautilus_trader.model.instruments.option"]], "Objects": [[24, "module-nautilus_trader.model.objects"]], "Order Book": [[25, "module-nautilus_trader.model.orderbook"]], "Book": [[25, "module-nautilus_trader.model.orderbook.book"]], "Ladder": [[25, "module-nautilus_trader.model.orderbook.ladder"]], "Level": [[25, "module-nautilus_trader.model.orderbook.level"]], "Simulated": [[25, "module-nautilus_trader.model.orderbook.simulated"]], "Error": [[25, "module-nautilus_trader.model.orderbook.error"]], "Orders": [[26, "module-nautilus_trader.model.orders"], [64, "orders"]], "Market": [[26, "module-nautilus_trader.model.orders.market"], [64, "market"]], "Limit": [[26, "module-nautilus_trader.model.orders.limit"], [64, "limit"]], "Stop-Market": [[26, "module-nautilus_trader.model.orders.stop_market"], [64, "stop-market"]], "Stop-Limit": [[26, "module-nautilus_trader.model.orders.stop_limit"], [64, "stop-limit"]], "Market-To-Limit": [[26, "module-nautilus_trader.model.orders.market_to_limit"], [64, "market-to-limit"]], "Market-If-Touched": [[26, "module-nautilus_trader.model.orders.market_if_touched"], [64, "market-if-touched"]], "Limit-If-Touched": [[26, "module-nautilus_trader.model.orders.limit_if_touched"], [64, "limit-if-touched"]], "Trailing Stop-Market": [[26, "module-nautilus_trader.model.orders.trailing_stop_market"]], "Trailing Stop-Limit": [[26, "module-nautilus_trader.model.orders.trailing_stop_limit"]], "Order List": [[26, "module-nautilus_trader.model.orders.list"]], "Position": [[27, "module-nautilus_trader.model.position"]], "Tick Scheme": [[28, "module-nautilus_trader.model.tick_scheme"]], "Fixed": [[28, "module-nautilus_trader.model.tick_scheme.implementations.fixed"]], "Tiered": [[28, "module-nautilus_trader.model.tick_scheme.implementations.tiered"]], "Message Bus": [[29, "module-nautilus_trader.msgbus"], [29, "id1"]], "Subscription": [[29, "module-nautilus_trader.msgbus.subscription"]], "Network": [[30, "module-nautilus_trader.network"]], "HTTP Client": [[30, "module-nautilus_trader.network.http"]], "Socket": [[30, "module-nautilus_trader.network.socket"]], "WebSocket Client": [[30, "module-nautilus_trader.network.websocket"]], "Persistence": [[31, "module-nautilus_trader.persistence"]], "External": [[31, "external"]], "Readers": [[31, "module-nautilus_trader.persistence.external.readers"]], "Batching": [[31, "module-nautilus_trader.persistence.batching"]], "Catalog": [[31, "module-nautilus_trader.persistence.catalog"]], "Streaming": [[31, "module-nautilus_trader.persistence.streaming"]], "Portfolio": [[32, "module-nautilus_trader.portfolio"], [32, "id1"]], "Base Classes": [[32, "module-nautilus_trader.portfolio.base"]], "Risk": [[33, "module-nautilus_trader.risk"]], "Sizing": [[33, "module-nautilus_trader.risk.sizing"]], "Serialization": [[34, "module-nautilus_trader.serialization"]], "MsgPack": [[34, "module-nautilus_trader.serialization.msgpack.serializer"]], "Arrow": [[34, "module-nautilus_trader.serialization.arrow.serializer"]], "System": [[35, "module-nautilus_trader.system"]], "Kernel": [[35, "module-nautilus_trader.system.kernel"]], "Trading": [[36, "module-nautilus_trader.trading"]], "Filters": [[36, "module-nautilus_trader.trading.filters"]], "Strategy": [[36, "module-nautilus_trader.trading.strategy"]], "Trader": [[36, "module-nautilus_trader.trading.trader"]], "Coding Standards": [[37, "coding-standards"]], "Code Style": [[37, "code-style"]], "Black": [[37, "black"]], "Formatting": [[37, "formatting"]], "PEP-8": [[37, "pep-8"]], "Docstrings": [[37, "docstrings"]], "Flake8": [[37, "flake8"]], "Commit messages": [[37, "commit-messages"]], "Cython": [[38, "cython"]], "Function and method signatures": [[38, "function-and-method-signatures"]], "Debugging": [[38, "debugging"]], "PyCharm": [[38, "pycharm"]], "Cython Docs": [[38, "cython-docs"]], "Tips": [[38, "tips"]], "Environment Setup": [[39, "environment-setup"]], "Setup": [[39, "setup"]], "Builds": [[39, "builds"]], "Developer Guide": [[40, "developer-guide"]], "Packaged Data": [[41, "packaged-data"]], "Libor Rates": [[41, "libor-rates"]], "Short Term Interest Rates": [[41, "short-term-interest-rates"]], "Economic Events": [[41, "economic-events"]], "Rust": [[42, "rust"]], "Python Binding": [[42, "python-binding"]], "Unsafe Rust": [[42, "unsafe-rust"]], "Safety Policy": [[42, "safety-policy"]], "Resources": [[42, "resources"]], "Testing": [[43, "testing"]], "Nox": [[43, "nox"]], "Mocks": [[43, "mocks"]], "Code Coverage": [[43, "code-coverage"]], "Excluded code coverage": [[43, "excluded-code-coverage"]], "Getting Started": [[44, "getting-started"]], "Installation": [[45, "installation"]], "From PyPI": [[45, "from-pypi"]], "Extras": [[45, "extras"]], "From Source": [[45, "from-source"]], "From GitHub Release": [[45, "from-github-release"]], "Quick Start": [[46, "quick-start"]], "Running in docker": [[46, "running-in-docker"]], "Getting the sample data": [[46, "getting-the-sample-data"]], "Connecting to the ParquetDataCatalog": [[46, "connecting-to-the-parquetdatacatalog"]], "Writing a trading strategy": [[46, "writing-a-trading-strategy"]], "Configuring Backtests": [[46, "configuring-backtests"]], "Running a backtest": [[46, "running-a-backtest"]], "NautilusTrader Documentation": [[47, "nautilustrader-documentation"]], "Features": [[47, "features"]], "Why NautilusTrader?": [[47, "why-nautilustrader"]], "Why Python?": [[47, "why-python"]], "What is Cython?": [[47, "what-is-cython"]], "What is Rust?": [[47, "what-is-rust"]], "Architecture Quality Attributes": [[47, "architecture-quality-attributes"]], "Overview": [[48, "overview"], [49, "overview"], [50, "overview"], [64, "overview"]], "Configuration": [[48, "configuration"], [49, "configuration"], [50, "configuration"], [65, "configuration"]], "API credentials": [[48, "api-credentials"], [49, "api-credentials"], [50, "api-credentials"]], "Data types": [[49, "data-types"]], "Symbology": [[49, "symbology"], [62, "symbology"]], "Order types": [[49, "order-types"], [55, "order-types"]], "Trailing stops": [[49, "trailing-stops"]], "Base URL overrides": [[49, "base-url-overrides"]], "Binance US": [[49, "binance-us"]], "Testnets": [[49, "testnets"]], "Parser warnings": [[49, "parser-warnings"]], "Binance specific data": [[49, "binance-specific-data"]], "BinanceFuturesMarkPriceUpdate": [[49, "binancefuturesmarkpriceupdate"]], "Examples queries": [[50, "examples-queries"]], "Integrations": [[51, "integrations"]], "Implementation goals": [[51, "implementation-goals"]], "API unification": [[51, "api-unification"]], "Instrument Providers": [[52, "instrument-providers"]], "Research/Backtesting": [[52, "research-backtesting"]], "Live Trading": [[52, "live-trading"]], "Data Clients": [[52, "data-clients"]], "Requests": [[52, "requests"]], "Example": [[52, "example"]], "Advanced Orders": [[53, "advanced-orders"]], "Order Lists": [[53, "order-lists"]], "Contingency Types": [[53, "contingency-types"]], "Bracket Orders": [[53, "bracket-orders"]], "Custom/Generic Data": [[54, "custom-generic-data"]], "Emulated Orders": [[55, "emulated-orders"]], "Limitations": [[55, "limitations"]], "Submitting for emulation": [[55, "submitting-for-emulation"]], "Life cycle": [[55, "life-cycle"]], "Held emulated orders": [[55, "held-emulated-orders"]], "Released emulated orders": [[55, "released-emulated-orders"]], "Querying": [[55, "querying"]], "Persisted emulated orders": [[55, "persisted-emulated-orders"]], "Advanced": [[56, "advanced"]], "Portfolio Statistics": [[57, "portfolio-statistics"]], "Custom Statistics": [[57, "custom-statistics"]], "Backtest Analysis": [[57, "backtest-analysis"]], "Architecture": [[58, "architecture"]], "Design philosophy": [[58, "design-philosophy"]], "Quality attributes": [[58, "quality-attributes"]], "System architecture": [[58, "system-architecture"]], "Environment contexts": [[58, "environment-contexts"]], "Common core": [[58, "common-core"], [60, "common-core"]], "Messaging": [[58, "messaging"]], "Framework organization": [[58, "framework-organization"]], "Core / low-Level": [[58, "core-low-level"]], "Components": [[58, "components"]], "System implementations": [[58, "system-implementations"]], "Code structure": [[58, "code-structure"]], "Dependency flow": [[58, "dependency-flow"]], "Type safety": [[58, "type-safety"]], "Errors and exceptions": [[58, "errors-and-exceptions"]], "Complete Backtest Example": [[59, "complete-backtest-example"]], "Imports": [[59, "imports"]], "Getting some raw data": [[59, "getting-some-raw-data"]], "The Data Catalog": [[59, "the-data-catalog"]], "Loading data into the catalog": [[59, "loading-data-into-the-catalog"]], "Using the Data Catalog": [[59, "using-the-data-catalog"]], "Configuring backtests": [[59, "configuring-backtests"]], "Adding data and venues": [[59, "adding-data-and-venues"]], "Run the backtest!": [[59, "run-the-backtest"]], "Core Concepts": [[60, "core-concepts"]], "Distributed": [[60, "distributed"]], "Backtesting": [[60, "backtesting"], [62, "backtesting"]], "Live trading": [[60, "live-trading"], [62, "live-trading"]], "Domain model": [[60, "domain-model"]], "Account Types": [[60, "account-types"]], "Order Types": [[60, "order-types"], [64, "order-types"]], "User Guide": [[61, "user-guide"]], "Finding instruments": [[62, "finding-instruments"]], "Precisions and Increments": [[62, "precisions-and-increments"]], "Limits": [[62, "limits"]], "Prices and Quantities": [[62, "prices-and-quantities"]], "Margins and Fees": [[62, "margins-and-fees"]], "Additional Info": [[62, "additional-info"]], "Loading External Data": [[63, "loading-external-data"]], "The DataCatalog": [[63, "the-datacatalog"]], "Getting some sample raw data": [[63, "getting-some-sample-raw-data"]], "Loading data via Reader classes": [[63, "loading-data-via-reader-classes"]], "Writing the parser function": [[63, "writing-the-parser-function"]], "Creating a new DataCatalog": [[63, "creating-a-new-datacatalog"]], "Loading the files": [[63, "loading-the-files"]], "Using the ParquetDataCatalog": [[63, "using-the-parquetdatacatalog"]], "Execution Instructions": [[64, "execution-instructions"]], "Time In Force": [[64, "time-in-force"]], "Expire Time": [[64, "expire-time"]], "Post Only": [[64, "post-only"]], "Reduce Only": [[64, "reduce-only"]], "Display Quantity": [[64, "display-quantity"]], "Trigger Type": [[64, "trigger-type"]], "Trigger Offset Type": [[64, "trigger-offset-type"]], "Contingency Orders": [[64, "contingency-orders"]], "Order Factory": [[64, "order-factory"]], "Trailing-Stop-Market": [[64, "trailing-stop-market"]], "Trailing-Stop-Limit": [[64, "trailing-stop-limit"]], "Strategies": [[65, "strategies"]], "Implementation": [[65, "implementation"]], "Multiple strategies": [[65, "multiple-strategies"]]}, "indexentries": {"accountfactory (class in nautilus_trader.accounting.factory)": [[0, "nautilus_trader.accounting.factory.AccountFactory"]], "accountsmanager (class in nautilus_trader.accounting.manager)": [[0, "nautilus_trader.accounting.manager.AccountsManager"]], "cashaccount (class in nautilus_trader.accounting.accounts.cash)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount"]], "exchangeratecalculator (class in nautilus_trader.accounting.calculators)": [[0, "nautilus_trader.accounting.calculators.ExchangeRateCalculator"]], "marginaccount (class in nautilus_trader.accounting.accounts.margin)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount"]], "rolloverinterestcalculator (class in nautilus_trader.accounting.calculators)": [[0, "nautilus_trader.accounting.calculators.RolloverInterestCalculator"]], "apply() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.apply"]], "apply() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.apply"]], "balance() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance"]], "balance() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance"]], "balance_free() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance_free"]], "balance_free() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance_free"]], "balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance_locked"]], "balance_locked() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance_locked"]], "balance_total() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balance_total"]], "balance_total() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balance_total"]], "balances() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances"]], "balances() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances"]], "balances_free() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances_free"]], "balances_free() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances_free"]], "balances_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances_locked"]], "balances_locked() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances_locked"]], "balances_total() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.balances_total"]], "balances_total() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.balances_total"]], "base_currency (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.base_currency"]], "base_currency (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.base_currency"]], "calc_overnight_rate() (rolloverinterestcalculator method)": [[0, "nautilus_trader.accounting.calculators.RolloverInterestCalculator.calc_overnight_rate"]], "calculate_account_state (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_account_state"]], "calculate_account_state (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_account_state"]], "calculate_balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_balance_locked"]], "calculate_commission() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_commission"]], "calculate_commission() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_commission"]], "calculate_margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_margin_init"]], "calculate_margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_margin_maint"]], "calculate_pnls() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.calculate_pnls"]], "calculate_pnls() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.calculate_pnls"]], "clear_balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.clear_balance_locked"]], "clear_margin() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.clear_margin"]], "clear_margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.clear_margin_init"]], "clear_margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.clear_margin_maint"]], "commission() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.commission"]], "commission() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.commission"]], "commissions() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.commissions"]], "commissions() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.commissions"]], "create() (accountfactory static method)": [[0, "nautilus_trader.accounting.factory.AccountFactory.create"]], "currencies() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.currencies"]], "currencies() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.currencies"]], "default_leverage (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.default_leverage"]], "event_count (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.event_count"]], "event_count (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.event_count"]], "events (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.events"]], "events (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.events"]], "get_rate() (exchangeratecalculator method)": [[0, "nautilus_trader.accounting.calculators.ExchangeRateCalculator.get_rate"]], "get_rate_data() (rolloverinterestcalculator method)": [[0, "nautilus_trader.accounting.calculators.RolloverInterestCalculator.get_rate_data"]], "id (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.id"]], "id (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.id"]], "is_cash_account (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.is_cash_account"]], "is_cash_account (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.is_cash_account"]], "is_margin_account (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.is_margin_account"]], "is_margin_account (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.is_margin_account"]], "is_unleveraged() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.is_unleveraged"]], "is_unleveraged() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.is_unleveraged"]], "last_event (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.last_event"]], "last_event (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.last_event"]], "leverage() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.leverage"]], "leverages() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.leverages"]], "margin() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margin"]], "margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margin_init"]], "margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margin_maint"]], "margins() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margins"]], "margins_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margins_init"]], "margins_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.margins_maint"]], "module": [[0, "module-nautilus_trader.accounting"], [0, "module-nautilus_trader.accounting.accounts.cash"], [0, "module-nautilus_trader.accounting.accounts.margin"], [0, "module-nautilus_trader.accounting.calculators"], [0, "module-nautilus_trader.accounting.factory"], [0, "module-nautilus_trader.accounting.manager"], [1, "module-nautilus_trader.adapters.betfair"], [1, "module-nautilus_trader.adapters.betfair.data"], [1, "module-nautilus_trader.adapters.betfair.data_types"], [1, "module-nautilus_trader.adapters.betfair.execution"], [1, "module-nautilus_trader.adapters.betfair.factories"], [1, "module-nautilus_trader.adapters.betfair.parsing"], [1, "module-nautilus_trader.adapters.betfair.providers"], [1, "module-nautilus_trader.adapters.betfair.sockets"], [1, "module-nautilus_trader.adapters.betfair.util"], [2, "module-nautilus_trader.adapters.binance"], [2, "module-nautilus_trader.adapters.binance.common.enums"], [2, "module-nautilus_trader.adapters.binance.common.types"], [2, "module-nautilus_trader.adapters.binance.config"], [2, "module-nautilus_trader.adapters.binance.factories"], [2, "module-nautilus_trader.adapters.binance.futures.data"], [2, "module-nautilus_trader.adapters.binance.futures.enums"], [2, "module-nautilus_trader.adapters.binance.futures.execution"], [2, "module-nautilus_trader.adapters.binance.futures.providers"], [2, "module-nautilus_trader.adapters.binance.futures.types"], [2, "module-nautilus_trader.adapters.binance.spot.data"], [2, "module-nautilus_trader.adapters.binance.spot.enums"], [2, "module-nautilus_trader.adapters.binance.spot.execution"], [2, "module-nautilus_trader.adapters.binance.spot.providers"], [3, "module-nautilus_trader.adapters"], [4, "module-nautilus_trader.adapters.interactive_brokers"], [4, "module-nautilus_trader.adapters.interactive_brokers.config"], [5, "module-nautilus_trader.analysis"], [5, "module-nautilus_trader.analysis.analyzer"], [5, "module-nautilus_trader.analysis.reporter"], [5, "module-nautilus_trader.analysis.statistic"], [5, "module-nautilus_trader.analysis.statistics.expectancy"], [5, "module-nautilus_trader.analysis.statistics.long_ratio"], [5, "module-nautilus_trader.analysis.statistics.loser_avg"], [5, "module-nautilus_trader.analysis.statistics.loser_max"], [5, "module-nautilus_trader.analysis.statistics.loser_min"], [5, "module-nautilus_trader.analysis.statistics.profit_factor"], [5, "module-nautilus_trader.analysis.statistics.returns_avg"], [5, "module-nautilus_trader.analysis.statistics.returns_avg_loss"], [5, "module-nautilus_trader.analysis.statistics.returns_avg_win"], [5, "module-nautilus_trader.analysis.statistics.returns_volatility"], [5, "module-nautilus_trader.analysis.statistics.risk_return_ratio"], [5, "module-nautilus_trader.analysis.statistics.sharpe_ratio"], [5, "module-nautilus_trader.analysis.statistics.sortino_ratio"], [5, "module-nautilus_trader.analysis.statistics.win_rate"], [5, "module-nautilus_trader.analysis.statistics.winner_avg"], [5, "module-nautilus_trader.analysis.statistics.winner_max"], [5, "module-nautilus_trader.analysis.statistics.winner_min"], [6, "module-nautilus_trader.backtest"], [6, "module-nautilus_trader.backtest.data.loaders"], [6, "module-nautilus_trader.backtest.data.providers"], [6, "module-nautilus_trader.backtest.data.wranglers"], [6, "module-nautilus_trader.backtest.data_client"], [6, "module-nautilus_trader.backtest.engine"], [6, "module-nautilus_trader.backtest.exchange"], [6, "module-nautilus_trader.backtest.execution_client"], [6, "module-nautilus_trader.backtest.models"], [6, "module-nautilus_trader.backtest.modules"], [6, "module-nautilus_trader.backtest.node"], [6, "module-nautilus_trader.backtest.results"], [7, "module-nautilus_trader.cache"], [7, "module-nautilus_trader.cache.base"], [7, "module-nautilus_trader.cache.cache"], [7, "module-nautilus_trader.cache.database"], [8, "module-nautilus_trader.common"], [8, "module-nautilus_trader.common.actor"], [8, "module-nautilus_trader.common.clock"], [8, "module-nautilus_trader.common.component"], [8, "module-nautilus_trader.common.enums"], [8, "module-nautilus_trader.common.factories"], [8, "module-nautilus_trader.common.generators"], [8, "module-nautilus_trader.common.logging"], [8, "module-nautilus_trader.common.providers"], [8, "module-nautilus_trader.common.queue"], [8, "module-nautilus_trader.common.throttler"], [8, "module-nautilus_trader.common.timer"], [9, "module-nautilus_trader.config"], [9, "module-nautilus_trader.config.backtest"], [9, "module-nautilus_trader.config.common"], [9, "module-nautilus_trader.config.live"], [10, "module-nautilus_trader.core"], [10, "module-nautilus_trader.core.collections"], [10, "module-nautilus_trader.core.datetime"], [10, "module-nautilus_trader.core.fsm"], [10, "module-nautilus_trader.core.message"], [10, "module-nautilus_trader.core.stats"], [10, "module-nautilus_trader.core.uuid"], [11, "module-nautilus_trader.data"], [11, "module-nautilus_trader.data.aggregation"], [11, "module-nautilus_trader.data.client"], [11, "module-nautilus_trader.data.engine"], [11, "module-nautilus_trader.data.messages"], [12, "module-nautilus_trader.execution"], [12, "module-nautilus_trader.execution.client"], [12, "module-nautilus_trader.execution.engine"], [12, "module-nautilus_trader.execution.messages"], [12, "module-nautilus_trader.execution.reports"], [14, "module-nautilus_trader.indicators"], [14, "module-nautilus_trader.indicators.atr"], [14, "module-nautilus_trader.indicators.average.ama"], [14, "module-nautilus_trader.indicators.average.ema"], [14, "module-nautilus_trader.indicators.average.hma"], [14, "module-nautilus_trader.indicators.average.ma_factory"], [14, "module-nautilus_trader.indicators.average.moving_average"], [14, "module-nautilus_trader.indicators.average.sma"], [14, "module-nautilus_trader.indicators.average.wma"], [14, "module-nautilus_trader.indicators.base.indicator"], [14, "module-nautilus_trader.indicators.bollinger_bands"], [14, "module-nautilus_trader.indicators.donchian_channel"], [14, "module-nautilus_trader.indicators.efficiency_ratio"], [14, "module-nautilus_trader.indicators.fuzzy_candlesticks"], [14, "module-nautilus_trader.indicators.keltner_channel"], [14, "module-nautilus_trader.indicators.keltner_position"], [14, "module-nautilus_trader.indicators.macd"], [14, "module-nautilus_trader.indicators.obv"], [14, "module-nautilus_trader.indicators.pressure"], [14, "module-nautilus_trader.indicators.roc"], [14, "module-nautilus_trader.indicators.rsi"], [14, "module-nautilus_trader.indicators.spread_analyzer"], [14, "module-nautilus_trader.indicators.stochastics"], [14, "module-nautilus_trader.indicators.swings"], [14, "module-nautilus_trader.indicators.volatility_ratio"], [14, "module-nautilus_trader.indicators.vwap"], [15, "module-nautilus_trader.infrastructure"], [15, "module-nautilus_trader.infrastructure.cache"], [16, "module-nautilus_trader.live"], [16, "module-nautilus_trader.live.data_client"], [16, "module-nautilus_trader.live.data_engine"], [16, "module-nautilus_trader.live.execution_client"], [16, "module-nautilus_trader.live.execution_engine"], [16, "module-nautilus_trader.live.node"], [16, "module-nautilus_trader.live.node_builder"], [16, "module-nautilus_trader.live.risk_engine"], [17, "module-nautilus_trader.model.currency"], [18, "module-nautilus_trader.model.data"], [18, "module-nautilus_trader.model.data.bar"], [18, "module-nautilus_trader.model.data.base"], [18, "module-nautilus_trader.model.data.bet"], [18, "module-nautilus_trader.model.data.tick"], [18, "module-nautilus_trader.model.data.ticker"], [18, "module-nautilus_trader.model.data.venue"], [19, "module-nautilus_trader.model.enums"], [20, "module-nautilus_trader.model.events"], [20, "module-nautilus_trader.model.events.account"], [20, "module-nautilus_trader.model.events.order"], [20, "module-nautilus_trader.model.events.position"], [21, "module-nautilus_trader.model.identifiers"], [22, "module-nautilus_trader.model"], [23, "module-nautilus_trader.model.instruments"], [23, "module-nautilus_trader.model.instruments.base"], [23, "module-nautilus_trader.model.instruments.betting"], [23, "module-nautilus_trader.model.instruments.crypto_future"], [23, "module-nautilus_trader.model.instruments.crypto_perpetual"], [23, "module-nautilus_trader.model.instruments.currency_pair"], [23, "module-nautilus_trader.model.instruments.equity"], [23, "module-nautilus_trader.model.instruments.future"], [23, "module-nautilus_trader.model.instruments.option"], [24, "module-nautilus_trader.model.objects"], [25, "module-nautilus_trader.model.orderbook"], [25, "module-nautilus_trader.model.orderbook.book"], [25, "module-nautilus_trader.model.orderbook.data"], [25, "module-nautilus_trader.model.orderbook.error"], [25, "module-nautilus_trader.model.orderbook.ladder"], [25, "module-nautilus_trader.model.orderbook.level"], [25, "module-nautilus_trader.model.orderbook.simulated"], [26, "module-nautilus_trader.model.orders"], [26, "module-nautilus_trader.model.orders.base"], [26, "module-nautilus_trader.model.orders.limit"], [26, "module-nautilus_trader.model.orders.limit_if_touched"], [26, "module-nautilus_trader.model.orders.list"], [26, "module-nautilus_trader.model.orders.market"], [26, "module-nautilus_trader.model.orders.market_if_touched"], [26, "module-nautilus_trader.model.orders.market_to_limit"], [26, "module-nautilus_trader.model.orders.stop_limit"], [26, "module-nautilus_trader.model.orders.stop_market"], [26, "module-nautilus_trader.model.orders.trailing_stop_limit"], [26, "module-nautilus_trader.model.orders.trailing_stop_market"], [27, "module-nautilus_trader.model.position"], [28, "module-nautilus_trader.model.tick_scheme"], [28, "module-nautilus_trader.model.tick_scheme.base"], [28, "module-nautilus_trader.model.tick_scheme.implementations.fixed"], [28, "module-nautilus_trader.model.tick_scheme.implementations.tiered"], [29, "module-nautilus_trader.msgbus"], [29, "module-nautilus_trader.msgbus.bus"], [29, "module-nautilus_trader.msgbus.subscription"], [30, "module-nautilus_trader.network"], [30, "module-nautilus_trader.network.http"], [30, "module-nautilus_trader.network.socket"], [30, "module-nautilus_trader.network.websocket"], [31, "module-nautilus_trader.persistence"], [31, "module-nautilus_trader.persistence.batching"], [31, "module-nautilus_trader.persistence.catalog"], [31, "module-nautilus_trader.persistence.external.core"], [31, "module-nautilus_trader.persistence.external.readers"], [31, "module-nautilus_trader.persistence.streaming"], [32, "module-nautilus_trader.portfolio"], [32, "module-nautilus_trader.portfolio.base"], [32, "module-nautilus_trader.portfolio.portfolio"], [33, "module-nautilus_trader.risk"], [33, "module-nautilus_trader.risk.engine"], [33, "module-nautilus_trader.risk.sizing"], [34, "module-nautilus_trader.serialization"], [34, "module-nautilus_trader.serialization.arrow.serializer"], [34, "module-nautilus_trader.serialization.base"], [34, "module-nautilus_trader.serialization.msgpack.serializer"], [35, "module-nautilus_trader.system"], [35, "module-nautilus_trader.system.kernel"], [36, "module-nautilus_trader.trading"], [36, "module-nautilus_trader.trading.filters"], [36, "module-nautilus_trader.trading.strategy"], [36, "module-nautilus_trader.trading.trader"]], "nautilus_trader.accounting": [[0, "module-nautilus_trader.accounting"]], "nautilus_trader.accounting.accounts.cash": [[0, "module-nautilus_trader.accounting.accounts.cash"]], "nautilus_trader.accounting.accounts.margin": [[0, "module-nautilus_trader.accounting.accounts.margin"]], "nautilus_trader.accounting.calculators": [[0, "module-nautilus_trader.accounting.calculators"]], "nautilus_trader.accounting.factory": [[0, "module-nautilus_trader.accounting.factory"]], "nautilus_trader.accounting.manager": [[0, "module-nautilus_trader.accounting.manager"]], "register_account_type() (accountfactory static method)": [[0, "nautilus_trader.accounting.factory.AccountFactory.register_account_type"]], "register_calculated_account() (accountfactory static method)": [[0, "nautilus_trader.accounting.factory.AccountFactory.register_calculated_account"]], "set_default_leverage() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.set_default_leverage"]], "set_leverage() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.set_leverage"]], "starting_balances() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.starting_balances"]], "starting_balances() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.starting_balances"]], "type (cashaccount attribute)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.type"]], "type (marginaccount attribute)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.type"]], "update_balance_locked() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.update_balance_locked"]], "update_balances() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.update_balances"]], "update_balances() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_balances"]], "update_commissions() (cashaccount method)": [[0, "nautilus_trader.accounting.accounts.cash.CashAccount.update_commissions"]], "update_commissions() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_commissions"]], "update_margin() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_margin"]], "update_margin_init() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_margin_init"]], "update_margin_maint() (marginaccount method)": [[0, "nautilus_trader.accounting.accounts.margin.MarginAccount.update_margin_maint"]], "bsporderbookdelta (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta"]], "betfairdataclient (class in nautilus_trader.adapters.betfair.data)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient"]], "betfairexecutionclient (class in nautilus_trader.adapters.betfair.execution)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient"]], "betfairinstrumentprovider (class in nautilus_trader.adapters.betfair.providers)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider"]], "betfairlivedataclientfactory (class in nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveDataClientFactory"]], "betfairliveexecclientfactory (class in nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveExecClientFactory"]], "betfairmarketstreamclient (class in nautilus_trader.adapters.betfair.sockets)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient"]], "betfairorderstreamclient (class in nautilus_trader.adapters.betfair.sockets)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient"]], "betfairstreamclient (class in nautilus_trader.adapters.betfair.sockets)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient"]], "betfairticker (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker"]], "instrumentsearch (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.InstrumentSearch"]], "subscriptionstatus (class in nautilus_trader.adapters.betfair.data_types)": [[1, "nautilus_trader.adapters.betfair.data_types.SubscriptionStatus"]], "account_id (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.account_id"]], "account_type (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.account_type"]], "action (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.action"]], "add() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.add"]], "add_bulk() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.add_bulk"]], "add_currency() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.add_currency"]], "base_currency (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.base_currency"]], "book_type (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.book_type"]], "cancel_all_orders() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.cancel_all_orders"]], "cancel_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.cancel_order"]], "check_account_currency() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.check_account_currency"]], "chunk() (in module nautilus_trader.adapters.betfair.util)": [[1, "nautilus_trader.adapters.betfair.util.chunk"]], "connect() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.connect"]], "connect() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.connect"]], "connect() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.connect"]], "connect() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.connect"]], "connect() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.connect"]], "count (betfairinstrumentprovider property)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.count"]], "create() (betfairlivedataclientfactory static method)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveDataClientFactory.create"]], "create() (betfairliveexecclientfactory static method)": [[1, "nautilus_trader.adapters.betfair.factories.BetfairLiveExecClientFactory.create"]], "currencies() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.currencies"]], "currency() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.currency"]], "degrade() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.degrade"]], "degrade() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.degrade"]], "determine_order_price() (in module nautilus_trader.adapters.betfair.parsing)": [[1, "nautilus_trader.adapters.betfair.parsing.determine_order_price"]], "disconnect() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.disconnect"]], "disconnect() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.disconnect"]], "disconnect() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.disconnect"]], "disconnect() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.disconnect"]], "disconnect() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.disconnect"]], "dispose() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.dispose"]], "dispose() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.dispose"]], "fault() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.fault"]], "fault() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.fault"]], "find() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.find"]], "flatten_tree() (in module nautilus_trader.adapters.betfair.util)": [[1, "nautilus_trader.adapters.betfair.util.flatten_tree"]], "from_dict() (bsporderbookdelta static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.from_dict"]], "from_dict() (betfairticker static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.from_dict"]], "fully_qualified_name() (bsporderbookdelta class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.fully_qualified_name"]], "fully_qualified_name() (betfairdataclient class method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.fully_qualified_name"]], "fully_qualified_name() (betfairexecutionclient class method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.fully_qualified_name"]], "fully_qualified_name() (betfairticker class method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.fully_qualified_name"]], "fully_qualified_name() (instrumentsearch class method)": [[1, "nautilus_trader.adapters.betfair.data_types.InstrumentSearch.fully_qualified_name"]], "generate_account_state() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_account_state"]], "generate_mass_status() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_mass_status"]], "generate_order_accepted() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_canceled"]], "generate_order_expired() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_expired"]], "generate_order_filled() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_modify_rejected"]], "generate_order_pending_cancel() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_pending_cancel"]], "generate_order_pending_update() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_pending_update"]], "generate_order_rejected() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_rejected"]], "generate_order_status_report() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_submitted"]], "generate_order_triggered() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_triggered"]], "generate_order_updated() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_order_updated"]], "generate_position_status_reports() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.generate_trade_reports"]], "get_account() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.get_account"]], "get_all() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.get_all"]], "get_betting_instrument() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.get_betting_instrument"]], "get_cached_betfair_client() (in module nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.get_cached_betfair_client"]], "get_cached_betfair_instrument_provider() (in module nautilus_trader.adapters.betfair.factories)": [[1, "nautilus_trader.adapters.betfair.factories.get_cached_betfair_instrument_provider"]], "handle_order_stream_update() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.handle_order_stream_update"]], "host (betfairmarketstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.host"]], "host (betfairorderstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.host"]], "host (betfairstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.host"]], "id (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.id"]], "id (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.id"]], "initialize() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.initialize"]], "instrument_id (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.instrument_id"]], "instrument_id (betfairticker attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.instrument_id"]], "is_connected (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_connected"]], "is_connected (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_connected"]], "is_connected (betfairmarketstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.is_connected"]], "is_connected (betfairorderstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.is_connected"]], "is_connected (betfairstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.is_connected"]], "is_degraded (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_degraded"]], "is_degraded (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_degraded"]], "is_disposed (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_disposed"]], "is_disposed (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_disposed"]], "is_faulted (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_faulted"]], "is_faulted (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_faulted"]], "is_initialized (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_initialized"]], "is_initialized (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_initialized"]], "is_running (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_running"]], "is_running (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_running"]], "is_stopped (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.is_stopped"]], "is_stopped (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.is_stopped"]], "list_all() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.list_all"]], "load() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load"]], "load_all() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_all"]], "load_all_async() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_all_async"]], "load_async() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_async"]], "load_ids() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_ids"]], "load_ids_async() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_ids_async"]], "load_markets() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.load_markets"]], "modify_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.modify_order"]], "nautilus_trader.adapters.betfair": [[1, "module-nautilus_trader.adapters.betfair"]], "nautilus_trader.adapters.betfair.data": [[1, "module-nautilus_trader.adapters.betfair.data"]], "nautilus_trader.adapters.betfair.data_types": [[1, "module-nautilus_trader.adapters.betfair.data_types"]], "nautilus_trader.adapters.betfair.execution": [[1, "module-nautilus_trader.adapters.betfair.execution"]], "nautilus_trader.adapters.betfair.factories": [[1, "module-nautilus_trader.adapters.betfair.factories"]], "nautilus_trader.adapters.betfair.parsing": [[1, "module-nautilus_trader.adapters.betfair.parsing"]], "nautilus_trader.adapters.betfair.providers": [[1, "module-nautilus_trader.adapters.betfair.providers"]], "nautilus_trader.adapters.betfair.sockets": [[1, "module-nautilus_trader.adapters.betfair.sockets"]], "nautilus_trader.adapters.betfair.util": [[1, "module-nautilus_trader.adapters.betfair.util"]], "oms_type (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.oms_type"]], "order (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.order"]], "order_cancel_all_to_betfair() (in module nautilus_trader.adapters.betfair.parsing)": [[1, "nautilus_trader.adapters.betfair.parsing.order_cancel_all_to_betfair"]], "order_cancel_to_betfair() (in module nautilus_trader.adapters.betfair.parsing)": [[1, "nautilus_trader.adapters.betfair.parsing.order_cancel_to_betfair"]], "order_submit_to_betfair() (in module nautilus_trader.adapters.betfair.parsing)": [[1, "nautilus_trader.adapters.betfair.parsing.order_submit_to_betfair"]], "order_update_to_betfair() (in module nautilus_trader.adapters.betfair.parsing)": [[1, "nautilus_trader.adapters.betfair.parsing.order_update_to_betfair"]], "parse_handicap() (in module nautilus_trader.adapters.betfair.parsing)": [[1, "nautilus_trader.adapters.betfair.parsing.parse_handicap"]], "port (betfairmarketstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.port"]], "port (betfairorderstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.port"]], "port (betfairstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.port"]], "post_connection() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.post_connection"]], "post_connection() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.post_connection"]], "post_connection() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.post_connection"]], "query_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.query_order"]], "reconnect() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.reconnect"]], "reconnect() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.reconnect"]], "reconnect() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.reconnect"]], "request() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request"]], "request_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_bars"]], "request_instrument() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_instrument"]], "request_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_instruments"]], "request_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_quote_ticks"]], "request_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.request_trade_ticks"]], "reset() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.reset"]], "reset() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.reset"]], "resume() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.resume"]], "resume() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.resume"]], "search_instruments() (betfairinstrumentprovider method)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.search_instruments"]], "send() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.send"]], "send() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.send"]], "send() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.send"]], "ssl (betfairmarketstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.ssl"]], "ssl (betfairorderstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.ssl"]], "ssl (betfairstreamclient attribute)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.ssl"]], "start() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.start"]], "start() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.start"]], "start() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.start"]], "start() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.start"]], "start() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.start"]], "state (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.state"]], "state (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.state"]], "stop() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.stop"]], "stop() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.stop"]], "stop() (betfairmarketstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairMarketStreamClient.stop"]], "stop() (betfairorderstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairOrderStreamClient.stop"]], "stop() (betfairstreamclient method)": [[1, "nautilus_trader.adapters.betfair.sockets.BetfairStreamClient.stop"]], "submit_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.submit_order"]], "submit_order_list() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.submit_order_list"]], "subscribe() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe"]], "subscribe_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_bars"]], "subscribe_instrument() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instrument"]], "subscribe_instrument_close_prices() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribe_trade_ticks"]], "subscribed_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_bars"]], "subscribed_generic_data() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_generic_data"]], "subscribed_instrument_close_prices() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_instrument_close_prices"]], "subscribed_instrument_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.subscribed_trade_ticks"]], "to_dict() (bsporderbookdelta static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.to_dict"]], "to_dict() (betfairticker static method)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.to_dict"]], "trader_id (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.trader_id"]], "trader_id (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.trader_id"]], "ts_event (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.ts_event"]], "ts_event (betfairticker attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.ts_event"]], "ts_event (instrumentsearch attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.InstrumentSearch.ts_event"]], "ts_init (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.ts_init"]], "ts_init (betfairticker attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BetfairTicker.ts_init"]], "ts_init (instrumentsearch attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.InstrumentSearch.ts_init"]], "type (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.type"]], "type (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.type"]], "unsubscribe() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe"]], "unsubscribe_bars() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close_prices() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instrument_close_prices"]], "unsubscribe_instrument_status_updates() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (betfairdataclient method)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.unsubscribe_trade_ticks"]], "update_id (bsporderbookdelta attribute)": [[1, "nautilus_trader.adapters.betfair.data_types.BSPOrderBookDelta.update_id"]], "venue (betfairdataclient attribute)": [[1, "nautilus_trader.adapters.betfair.data.BetfairDataClient.venue"]], "venue (betfairexecutionclient attribute)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.venue"]], "venue (betfairinstrumentprovider property)": [[1, "nautilus_trader.adapters.betfair.providers.BetfairInstrumentProvider.venue"]], "wait_for_order() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.wait_for_order"]], "watch_stream() (betfairexecutionclient method)": [[1, "nautilus_trader.adapters.betfair.execution.BetfairExecutionClient.watch_stream"]], "binanceaccounttype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceAccountType"]], "binancebar (class in nautilus_trader.adapters.binance.common.types)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar"]], "binancedataclientconfig (class in nautilus_trader.adapters.binance.config)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig"]], "binanceexchangefiltertype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceExchangeFilterType"]], "binanceexecclientconfig (class in nautilus_trader.adapters.binance.config)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig"]], "binanceexecutiontype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceExecutionType"]], "binancefuturescontractstatus (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesContractStatus"]], "binancefuturescontracttype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesContractType"]], "binancefuturesdataclient (class in nautilus_trader.adapters.binance.futures.data)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient"]], "binancefutureseventtype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesEventType"]], "binancefuturesexecutionclient (class in nautilus_trader.adapters.binance.futures.execution)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient"]], "binancefuturesinstrumentprovider (class in nautilus_trader.adapters.binance.futures.providers)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider"]], "binancefuturesmargintype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesMarginType"]], "binancefuturesmarkpriceupdate (class in nautilus_trader.adapters.binance.futures.types)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate"]], "binancefuturesordertype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesOrderType"]], "binancefuturespositionside (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesPositionSide"]], "binancefuturespositionupdatereason (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesPositionUpdateReason"]], "binancefuturestimeinforce (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesTimeInForce"]], "binancefuturesworkingtype (class in nautilus_trader.adapters.binance.futures.enums)": [[2, "nautilus_trader.adapters.binance.futures.enums.BinanceFuturesWorkingType"]], "binancelivedataclientfactory (class in nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveDataClientFactory"]], "binanceliveexecclientfactory (class in nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveExecClientFactory"]], "binanceorderside (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceOrderSide"]], "binanceorderstatus (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceOrderStatus"]], "binanceratelimitinterval (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceRateLimitInterval"]], "binanceratelimittype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceRateLimitType"]], "binancespotdataclient (class in nautilus_trader.adapters.binance.spot.data)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient"]], "binancespoteventtype (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotEventType"]], "binancespotexecutionclient (class in nautilus_trader.adapters.binance.spot.execution)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient"]], "binancespotinstrumentprovider (class in nautilus_trader.adapters.binance.spot.providers)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider"]], "binancespotorderstatus (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotOrderStatus"]], "binancespotordertype (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotOrderType"]], "binancespotpermissions (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotPermissions"]], "binancespotsymbolstatus (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotSymbolStatus"]], "binancespottimeinforce (class in nautilus_trader.adapters.binance.spot.enums)": [[2, "nautilus_trader.adapters.binance.spot.enums.BinanceSpotTimeInForce"]], "binancesymbolfiltertype (class in nautilus_trader.adapters.binance.common.enums)": [[2, "nautilus_trader.adapters.binance.common.enums.BinanceSymbolFilterType"]], "binanceticker (class in nautilus_trader.adapters.binance.common.types)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker"]], "account_id (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.account_id"]], "account_id (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.account_id"]], "account_type (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.account_type"]], "account_type (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.account_type"]], "add() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.add"]], "add() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.add"]], "add_bulk() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.add_bulk"]], "add_bulk() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.add_bulk"]], "add_currency() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.add_currency"]], "add_currency() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.add_currency"]], "bar_type (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.bar_type"]], "base_currency (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.base_currency"]], "base_currency (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.base_currency"]], "cancel_all_orders() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.cancel_all_orders"]], "cancel_all_orders() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.cancel_all_orders"]], "cancel_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.cancel_order"]], "cancel_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.cancel_order"]], "close (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.close"]], "connect() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.connect"]], "connect() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.connect"]], "connect() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.connect"]], "connect() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.connect"]], "construct() (binancedataclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.construct"]], "construct() (binanceexecclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.construct"]], "copy() (binancedataclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.copy"]], "copy() (binanceexecclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.copy"]], "count (binancefuturesinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.count"]], "count (binancespotinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.count"]], "create() (binancelivedataclientfactory static method)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveDataClientFactory.create"]], "create() (binanceliveexecclientfactory static method)": [[2, "nautilus_trader.adapters.binance.factories.BinanceLiveExecClientFactory.create"]], "currencies() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.currencies"]], "currencies() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.currencies"]], "currency() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.currency"]], "currency() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.currency"]], "degrade() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.degrade"]], "degrade() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.degrade"]], "degrade() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.degrade"]], "degrade() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.degrade"]], "dict() (binancedataclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.dict"]], "dict() (binanceexecclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.dict"]], "disconnect() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.disconnect"]], "disconnect() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.disconnect"]], "disconnect() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.disconnect"]], "disconnect() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.disconnect"]], "dispose() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.dispose"]], "dispose() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.dispose"]], "dispose() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.dispose"]], "dispose() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.dispose"]], "fault() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.fault"]], "fault() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.fault"]], "fault() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.fault"]], "fault() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.fault"]], "find() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.find"]], "find() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.find"]], "from_dict() (binancebar static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.from_dict"]], "from_dict() (binancefuturesmarkpriceupdate static method)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.from_dict"]], "from_dict() (binanceticker static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.from_dict"]], "fully_qualified_name() (binancebar class method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.fully_qualified_name"]], "fully_qualified_name() (binancedataclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (binanceexecclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.fully_qualified_name"]], "fully_qualified_name() (binancefuturesdataclient class method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.fully_qualified_name"]], "fully_qualified_name() (binancefuturesexecutionclient class method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.fully_qualified_name"]], "fully_qualified_name() (binancefuturesmarkpriceupdate class method)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.fully_qualified_name"]], "fully_qualified_name() (binancespotdataclient class method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.fully_qualified_name"]], "fully_qualified_name() (binancespotexecutionclient class method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.fully_qualified_name"]], "fully_qualified_name() (binanceticker class method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.fully_qualified_name"]], "generate_account_state() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_account_state"]], "generate_account_state() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_account_state"]], "generate_mass_status() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_mass_status"]], "generate_mass_status() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_mass_status"]], "generate_order_accepted() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_accepted"]], "generate_order_accepted() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_cancel_rejected"]], "generate_order_cancel_rejected() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_canceled"]], "generate_order_canceled() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_canceled"]], "generate_order_expired() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_expired"]], "generate_order_expired() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_expired"]], "generate_order_filled() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_filled"]], "generate_order_filled() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_modify_rejected"]], "generate_order_modify_rejected() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_modify_rejected"]], "generate_order_pending_cancel() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_pending_cancel"]], "generate_order_pending_cancel() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_pending_cancel"]], "generate_order_pending_update() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_pending_update"]], "generate_order_pending_update() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_pending_update"]], "generate_order_rejected() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_rejected"]], "generate_order_rejected() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_rejected"]], "generate_order_status_report() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_status_report"]], "generate_order_status_report() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_status_reports"]], "generate_order_status_reports() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_submitted"]], "generate_order_submitted() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_submitted"]], "generate_order_triggered() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_triggered"]], "generate_order_triggered() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_triggered"]], "generate_order_updated() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_order_updated"]], "generate_order_updated() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_order_updated"]], "generate_position_status_reports() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_position_status_reports"]], "generate_position_status_reports() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.generate_trade_reports"]], "generate_trade_reports() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.generate_trade_reports"]], "get_account() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.get_account"]], "get_account() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.get_account"]], "get_all() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.get_all"]], "get_all() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.get_all"]], "get_cached_binance_futures_instrument_provider() (in module nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.get_cached_binance_futures_instrument_provider"]], "get_cached_binance_http_client() (in module nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.get_cached_binance_http_client"]], "get_cached_binance_spot_instrument_provider() (in module nautilus_trader.adapters.binance.factories)": [[2, "nautilus_trader.adapters.binance.factories.get_cached_binance_spot_instrument_provider"]], "high (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.high"]], "id (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.id"]], "id (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.id"]], "id (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.id"]], "id (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.id"]], "initialize() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.initialize"]], "initialize() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.initialize"]], "instrument_id (binanceticker attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.instrument_id"]], "is_connected (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_connected"]], "is_connected (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_connected"]], "is_connected (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_connected"]], "is_connected (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_connected"]], "is_degraded (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_degraded"]], "is_degraded (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_degraded"]], "is_degraded (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_degraded"]], "is_degraded (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_degraded"]], "is_disposed (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_disposed"]], "is_disposed (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_disposed"]], "is_disposed (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_disposed"]], "is_disposed (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_disposed"]], "is_faulted (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_faulted"]], "is_faulted (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_faulted"]], "is_faulted (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_faulted"]], "is_faulted (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_faulted"]], "is_initialized (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_initialized"]], "is_initialized (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_initialized"]], "is_initialized (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_initialized"]], "is_initialized (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_initialized"]], "is_running (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_running"]], "is_running (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_running"]], "is_running (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_running"]], "is_running (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_running"]], "is_single_price() (binancebar method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.is_single_price"]], "is_stopped (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.is_stopped"]], "is_stopped (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.is_stopped"]], "is_stopped (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.is_stopped"]], "is_stopped (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.is_stopped"]], "json() (binancedataclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.json"]], "json() (binanceexecclientconfig method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.json"]], "list_all() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.list_all"]], "list_all() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.list_all"]], "load() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load"]], "load() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load"]], "load_all() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_all"]], "load_all() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_all"]], "load_all_async() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_all_async"]], "load_all_async() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_all_async"]], "load_async() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_async"]], "load_async() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_async"]], "load_ids() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_ids"]], "load_ids() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_ids"]], "load_ids_async() (binancefuturesinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.load_ids_async"]], "load_ids_async() (binancespotinstrumentprovider method)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.load_ids_async"]], "low (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.low"]], "modify_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.modify_order"]], "modify_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.modify_order"]], "nautilus_trader.adapters.binance": [[2, "module-nautilus_trader.adapters.binance"]], "nautilus_trader.adapters.binance.common.enums": [[2, "module-nautilus_trader.adapters.binance.common.enums"]], "nautilus_trader.adapters.binance.common.types": [[2, "module-nautilus_trader.adapters.binance.common.types"]], "nautilus_trader.adapters.binance.config": [[2, "module-nautilus_trader.adapters.binance.config"]], "nautilus_trader.adapters.binance.factories": [[2, "module-nautilus_trader.adapters.binance.factories"]], "nautilus_trader.adapters.binance.futures.data": [[2, "module-nautilus_trader.adapters.binance.futures.data"]], "nautilus_trader.adapters.binance.futures.enums": [[2, "module-nautilus_trader.adapters.binance.futures.enums"]], "nautilus_trader.adapters.binance.futures.execution": [[2, "module-nautilus_trader.adapters.binance.futures.execution"]], "nautilus_trader.adapters.binance.futures.providers": [[2, "module-nautilus_trader.adapters.binance.futures.providers"]], "nautilus_trader.adapters.binance.futures.types": [[2, "module-nautilus_trader.adapters.binance.futures.types"]], "nautilus_trader.adapters.binance.spot.data": [[2, "module-nautilus_trader.adapters.binance.spot.data"]], "nautilus_trader.adapters.binance.spot.enums": [[2, "module-nautilus_trader.adapters.binance.spot.enums"]], "nautilus_trader.adapters.binance.spot.execution": [[2, "module-nautilus_trader.adapters.binance.spot.execution"]], "nautilus_trader.adapters.binance.spot.providers": [[2, "module-nautilus_trader.adapters.binance.spot.providers"]], "oms_type (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.oms_type"]], "oms_type (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.oms_type"]], "open (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.open"]], "query_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.query_order"]], "query_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.query_order"]], "request() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request"]], "request() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request"]], "request_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_bars"]], "request_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_bars"]], "request_instrument() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_instrument"]], "request_instrument() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_instrument"]], "request_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_instruments"]], "request_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_instruments"]], "request_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_quote_ticks"]], "request_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_quote_ticks"]], "request_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.request_trade_ticks"]], "request_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.request_trade_ticks"]], "reset() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.reset"]], "reset() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.reset"]], "reset() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.reset"]], "reset() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.reset"]], "resume() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.resume"]], "resume() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.resume"]], "resume() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.resume"]], "resume() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.resume"]], "start() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.start"]], "start() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.start"]], "start() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.start"]], "start() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.start"]], "state (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.state"]], "state (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.state"]], "state (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.state"]], "state (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.state"]], "stop() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.stop"]], "stop() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.stop"]], "stop() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.stop"]], "stop() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.stop"]], "submit_order() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.submit_order"]], "submit_order() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.submit_order"]], "submit_order_list() (binancefuturesexecutionclient method)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.submit_order_list"]], "submit_order_list() (binancespotexecutionclient method)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.submit_order_list"]], "subscribe() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe"]], "subscribe() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe"]], "subscribe_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_bars"]], "subscribe_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_bars"]], "subscribe_instrument() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instrument"]], "subscribe_instrument() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instrument"]], "subscribe_instrument_close_prices() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instrument_close_prices"]], "subscribe_instrument_close_prices() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instrument_status_updates"]], "subscribe_instrument_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_instruments"]], "subscribe_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_deltas() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_order_book_snapshots"]], "subscribe_order_book_snapshots() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_quote_ticks"]], "subscribe_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_ticker"]], "subscribe_ticker() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribe_trade_ticks"]], "subscribe_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribe_trade_ticks"]], "subscribed_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_bars"]], "subscribed_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_bars"]], "subscribed_generic_data() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_generic_data"]], "subscribed_generic_data() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_generic_data"]], "subscribed_instrument_close_prices() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_instrument_close_prices"]], "subscribed_instrument_close_prices() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_instrument_close_prices"]], "subscribed_instrument_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_instrument_status_updates"]], "subscribed_instrument_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_instruments"]], "subscribed_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_deltas() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_order_book_snapshots"]], "subscribed_order_book_snapshots() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_quote_ticks"]], "subscribed_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_tickers"]], "subscribed_tickers() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.subscribed_trade_ticks"]], "subscribed_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.subscribed_trade_ticks"]], "to_dict() (binancebar static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.to_dict"]], "to_dict() (binancefuturesmarkpriceupdate static method)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.to_dict"]], "to_dict() (binanceticker static method)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.to_dict"]], "trader_id (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.trader_id"]], "trader_id (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.trader_id"]], "trader_id (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.trader_id"]], "trader_id (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.trader_id"]], "ts_event (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.ts_event"]], "ts_event (binancefuturesmarkpriceupdate attribute)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.ts_event"]], "ts_event (binanceticker attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.ts_event"]], "ts_init (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.ts_init"]], "ts_init (binancefuturesmarkpriceupdate attribute)": [[2, "nautilus_trader.adapters.binance.futures.types.BinanceFuturesMarkPriceUpdate.ts_init"]], "ts_init (binanceticker attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceTicker.ts_init"]], "type (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.type"]], "type (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.type"]], "type (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.type"]], "type (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.type"]], "unsubscribe() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe"]], "unsubscribe() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe"]], "unsubscribe_bars() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_bars"]], "unsubscribe_bars() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instrument"]], "unsubscribe_instrument() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close_prices() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instrument_close_prices"]], "unsubscribe_instrument_close_prices() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instrument_close_prices"]], "unsubscribe_instrument_status_updates() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instrument_status_updates() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_instruments"]], "unsubscribe_instruments() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_deltas() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_order_book_snapshots() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_quote_ticks"]], "unsubscribe_quote_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_ticker"]], "unsubscribe_ticker() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (binancefuturesdataclient method)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.unsubscribe_trade_ticks"]], "unsubscribe_trade_ticks() (binancespotdataclient method)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.unsubscribe_trade_ticks"]], "update_forward_refs() (binancedataclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceDataClientConfig.update_forward_refs"]], "update_forward_refs() (binanceexecclientconfig class method)": [[2, "nautilus_trader.adapters.binance.config.BinanceExecClientConfig.update_forward_refs"]], "venue (binancefuturesdataclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.data.BinanceFuturesDataClient.venue"]], "venue (binancefuturesexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.futures.execution.BinanceFuturesExecutionClient.venue"]], "venue (binancefuturesinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.futures.providers.BinanceFuturesInstrumentProvider.venue"]], "venue (binancespotdataclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.data.BinanceSpotDataClient.venue"]], "venue (binancespotexecutionclient attribute)": [[2, "nautilus_trader.adapters.binance.spot.execution.BinanceSpotExecutionClient.venue"]], "venue (binancespotinstrumentprovider property)": [[2, "nautilus_trader.adapters.binance.spot.providers.BinanceSpotInstrumentProvider.venue"]], "volume (binancebar attribute)": [[2, "nautilus_trader.adapters.binance.common.types.BinanceBar.volume"]], "nautilus_trader.adapters": [[3, "module-nautilus_trader.adapters"]], "interactivebrokersdataclientconfig (class in nautilus_trader.adapters.interactive_brokers.config)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig"]], "interactivebrokersexecclientconfig (class in nautilus_trader.adapters.interactive_brokers.config)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig"]], "construct() (interactivebrokersdataclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.construct"]], "construct() (interactivebrokersexecclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.construct"]], "copy() (interactivebrokersdataclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.copy"]], "copy() (interactivebrokersexecclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.copy"]], "dict() (interactivebrokersdataclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.dict"]], "dict() (interactivebrokersexecclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.dict"]], "fully_qualified_name() (interactivebrokersdataclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (interactivebrokersexecclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.fully_qualified_name"]], "json() (interactivebrokersdataclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.json"]], "json() (interactivebrokersexecclientconfig method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.json"]], "nautilus_trader.adapters.interactive_brokers": [[4, "module-nautilus_trader.adapters.interactive_brokers"]], "nautilus_trader.adapters.interactive_brokers.config": [[4, "module-nautilus_trader.adapters.interactive_brokers.config"]], "update_forward_refs() (interactivebrokersdataclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersDataClientConfig.update_forward_refs"]], "update_forward_refs() (interactivebrokersexecclientconfig class method)": [[4, "nautilus_trader.adapters.interactive_brokers.config.InteractiveBrokersExecClientConfig.update_forward_refs"]], "avgloser (class in nautilus_trader.analysis.statistics.loser_avg)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser"]], "avgwinner (class in nautilus_trader.analysis.statistics.winner_avg)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner"]], "expectancy (class in nautilus_trader.analysis.statistics.expectancy)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy"]], "longratio (class in nautilus_trader.analysis.statistics.long_ratio)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio"]], "maxloser (class in nautilus_trader.analysis.statistics.loser_max)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser"]], "maxwinner (class in nautilus_trader.analysis.statistics.winner_max)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner"]], "minloser (class in nautilus_trader.analysis.statistics.loser_min)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser"]], "minwinner (class in nautilus_trader.analysis.statistics.winner_min)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner"]], "portfolioanalyzer (class in nautilus_trader.analysis.analyzer)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer"]], "portfoliostatistic (class in nautilus_trader.analysis.statistic)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic"]], "profitfactor (class in nautilus_trader.analysis.statistics.profit_factor)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor"]], "reportprovider (class in nautilus_trader.analysis.reporter)": [[5, "nautilus_trader.analysis.reporter.ReportProvider"]], "returnsaverage (class in nautilus_trader.analysis.statistics.returns_avg)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage"]], "returnsaverageloss (class in nautilus_trader.analysis.statistics.returns_avg_loss)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss"]], "returnsaveragewin (class in nautilus_trader.analysis.statistics.returns_avg_win)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin"]], "returnsvolatility (class in nautilus_trader.analysis.statistics.returns_volatility)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility"]], "riskreturnratio (class in nautilus_trader.analysis.statistics.risk_return_ratio)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio"]], "sharperatio (class in nautilus_trader.analysis.statistics.sharpe_ratio)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio"]], "sortinoratio (class in nautilus_trader.analysis.statistics.sortino_ratio)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio"]], "winrate (class in nautilus_trader.analysis.statistics.win_rate)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate"]], "add_positions() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.add_positions"]], "add_return() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.add_return"]], "add_trade() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.add_trade"]], "calculate_from_orders() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_orders"]], "calculate_from_orders() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_orders"]], "calculate_from_orders() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_orders"]], "calculate_from_orders() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_orders"]], "calculate_from_orders() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_orders"]], "calculate_from_orders() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_orders"]], "calculate_from_orders() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_orders"]], "calculate_from_orders() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_orders"]], "calculate_from_orders() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_orders"]], "calculate_from_orders() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_orders"]], "calculate_from_orders() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_orders"]], "calculate_from_orders() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_orders"]], "calculate_from_orders() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_orders"]], "calculate_from_orders() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_orders"]], "calculate_from_orders() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_orders"]], "calculate_from_orders() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_orders"]], "calculate_from_orders() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_orders"]], "calculate_from_orders() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_orders"]], "calculate_from_positions() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_positions"]], "calculate_from_positions() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_positions"]], "calculate_from_positions() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_positions"]], "calculate_from_positions() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_positions"]], "calculate_from_positions() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_positions"]], "calculate_from_positions() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_positions"]], "calculate_from_positions() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_positions"]], "calculate_from_positions() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_positions"]], "calculate_from_positions() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_positions"]], "calculate_from_positions() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_positions"]], "calculate_from_positions() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_positions"]], "calculate_from_positions() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_positions"]], "calculate_from_positions() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_positions"]], "calculate_from_positions() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_positions"]], "calculate_from_positions() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_positions"]], "calculate_from_positions() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_positions"]], "calculate_from_positions() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_positions"]], "calculate_from_positions() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_positions"]], "calculate_from_realized_pnls() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_realized_pnls"]], "calculate_from_realized_pnls() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_realized_pnls"]], "calculate_from_returns() (avgloser method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.calculate_from_returns"]], "calculate_from_returns() (avgwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.calculate_from_returns"]], "calculate_from_returns() (expectancy method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.calculate_from_returns"]], "calculate_from_returns() (longratio method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.calculate_from_returns"]], "calculate_from_returns() (maxloser method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.calculate_from_returns"]], "calculate_from_returns() (maxwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.calculate_from_returns"]], "calculate_from_returns() (minloser method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.calculate_from_returns"]], "calculate_from_returns() (minwinner method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.calculate_from_returns"]], "calculate_from_returns() (portfoliostatistic method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.calculate_from_returns"]], "calculate_from_returns() (profitfactor method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.calculate_from_returns"]], "calculate_from_returns() (returnsaverage method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.calculate_from_returns"]], "calculate_from_returns() (returnsaverageloss method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.calculate_from_returns"]], "calculate_from_returns() (returnsaveragewin method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.calculate_from_returns"]], "calculate_from_returns() (returnsvolatility method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.calculate_from_returns"]], "calculate_from_returns() (riskreturnratio method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.calculate_from_returns"]], "calculate_from_returns() (sharperatio method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.calculate_from_returns"]], "calculate_from_returns() (sortinoratio method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.calculate_from_returns"]], "calculate_from_returns() (winrate method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.calculate_from_returns"]], "calculate_statistics() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.calculate_statistics"]], "currencies (portfolioanalyzer property)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.currencies"]], "deregister_statistic() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.deregister_statistic"]], "deregister_statistics() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.deregister_statistics"]], "fully_qualified_name() (avgloser class method)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.fully_qualified_name"]], "fully_qualified_name() (avgwinner class method)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.fully_qualified_name"]], "fully_qualified_name() (expectancy class method)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.fully_qualified_name"]], "fully_qualified_name() (longratio class method)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.fully_qualified_name"]], "fully_qualified_name() (maxloser class method)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.fully_qualified_name"]], "fully_qualified_name() (maxwinner class method)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.fully_qualified_name"]], "fully_qualified_name() (minloser class method)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.fully_qualified_name"]], "fully_qualified_name() (minwinner class method)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.fully_qualified_name"]], "fully_qualified_name() (portfoliostatistic class method)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.fully_qualified_name"]], "fully_qualified_name() (profitfactor class method)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.fully_qualified_name"]], "fully_qualified_name() (returnsaverage class method)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.fully_qualified_name"]], "fully_qualified_name() (returnsaverageloss class method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.fully_qualified_name"]], "fully_qualified_name() (returnsaveragewin class method)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.fully_qualified_name"]], "fully_qualified_name() (returnsvolatility class method)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.fully_qualified_name"]], "fully_qualified_name() (riskreturnratio class method)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.fully_qualified_name"]], "fully_qualified_name() (sharperatio class method)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.fully_qualified_name"]], "fully_qualified_name() (sortinoratio class method)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.fully_qualified_name"]], "fully_qualified_name() (winrate class method)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.fully_qualified_name"]], "generate_account_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_account_report"]], "generate_order_fills_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_order_fills_report"]], "generate_orders_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_orders_report"]], "generate_positions_report() (reportprovider static method)": [[5, "nautilus_trader.analysis.reporter.ReportProvider.generate_positions_report"]], "get_performance_stats_general() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_performance_stats_general"]], "get_performance_stats_pnls() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_performance_stats_pnls"]], "get_performance_stats_returns() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_performance_stats_returns"]], "get_stats_general_formatted() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_stats_general_formatted"]], "get_stats_pnls_formatted() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_stats_pnls_formatted"]], "get_stats_returns_formatted() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.get_stats_returns_formatted"]], "name (avgloser property)": [[5, "nautilus_trader.analysis.statistics.loser_avg.AvgLoser.name"]], "name (avgwinner property)": [[5, "nautilus_trader.analysis.statistics.winner_avg.AvgWinner.name"]], "name (expectancy property)": [[5, "nautilus_trader.analysis.statistics.expectancy.Expectancy.name"]], "name (longratio property)": [[5, "nautilus_trader.analysis.statistics.long_ratio.LongRatio.name"]], "name (maxloser property)": [[5, "nautilus_trader.analysis.statistics.loser_max.MaxLoser.name"]], "name (maxwinner property)": [[5, "nautilus_trader.analysis.statistics.winner_max.MaxWinner.name"]], "name (minloser property)": [[5, "nautilus_trader.analysis.statistics.loser_min.MinLoser.name"]], "name (minwinner property)": [[5, "nautilus_trader.analysis.statistics.winner_min.MinWinner.name"]], "name (portfoliostatistic property)": [[5, "nautilus_trader.analysis.statistic.PortfolioStatistic.name"]], "name (profitfactor property)": [[5, "nautilus_trader.analysis.statistics.profit_factor.ProfitFactor.name"]], "name (returnsaverage property)": [[5, "nautilus_trader.analysis.statistics.returns_avg.ReturnsAverage.name"]], "name (returnsaverageloss property)": [[5, "nautilus_trader.analysis.statistics.returns_avg_loss.ReturnsAverageLoss.name"]], "name (returnsaveragewin property)": [[5, "nautilus_trader.analysis.statistics.returns_avg_win.ReturnsAverageWin.name"]], "name (returnsvolatility property)": [[5, "nautilus_trader.analysis.statistics.returns_volatility.ReturnsVolatility.name"]], "name (riskreturnratio property)": [[5, "nautilus_trader.analysis.statistics.risk_return_ratio.RiskReturnRatio.name"]], "name (sharperatio property)": [[5, "nautilus_trader.analysis.statistics.sharpe_ratio.SharpeRatio.name"]], "name (sortinoratio property)": [[5, "nautilus_trader.analysis.statistics.sortino_ratio.SortinoRatio.name"]], "name (winrate property)": [[5, "nautilus_trader.analysis.statistics.win_rate.WinRate.name"]], "nautilus_trader.analysis": [[5, "module-nautilus_trader.analysis"]], "nautilus_trader.analysis.analyzer": [[5, "module-nautilus_trader.analysis.analyzer"]], "nautilus_trader.analysis.reporter": [[5, "module-nautilus_trader.analysis.reporter"]], "nautilus_trader.analysis.statistic": [[5, "module-nautilus_trader.analysis.statistic"]], "nautilus_trader.analysis.statistics.expectancy": [[5, "module-nautilus_trader.analysis.statistics.expectancy"]], "nautilus_trader.analysis.statistics.long_ratio": [[5, "module-nautilus_trader.analysis.statistics.long_ratio"]], "nautilus_trader.analysis.statistics.loser_avg": [[5, "module-nautilus_trader.analysis.statistics.loser_avg"]], "nautilus_trader.analysis.statistics.loser_max": [[5, "module-nautilus_trader.analysis.statistics.loser_max"]], "nautilus_trader.analysis.statistics.loser_min": [[5, "module-nautilus_trader.analysis.statistics.loser_min"]], "nautilus_trader.analysis.statistics.profit_factor": [[5, "module-nautilus_trader.analysis.statistics.profit_factor"]], "nautilus_trader.analysis.statistics.returns_avg": [[5, "module-nautilus_trader.analysis.statistics.returns_avg"]], "nautilus_trader.analysis.statistics.returns_avg_loss": [[5, "module-nautilus_trader.analysis.statistics.returns_avg_loss"]], "nautilus_trader.analysis.statistics.returns_avg_win": [[5, "module-nautilus_trader.analysis.statistics.returns_avg_win"]], "nautilus_trader.analysis.statistics.returns_volatility": [[5, "module-nautilus_trader.analysis.statistics.returns_volatility"]], "nautilus_trader.analysis.statistics.risk_return_ratio": [[5, "module-nautilus_trader.analysis.statistics.risk_return_ratio"]], "nautilus_trader.analysis.statistics.sharpe_ratio": [[5, "module-nautilus_trader.analysis.statistics.sharpe_ratio"]], "nautilus_trader.analysis.statistics.sortino_ratio": [[5, "module-nautilus_trader.analysis.statistics.sortino_ratio"]], "nautilus_trader.analysis.statistics.win_rate": [[5, "module-nautilus_trader.analysis.statistics.win_rate"]], "nautilus_trader.analysis.statistics.winner_avg": [[5, "module-nautilus_trader.analysis.statistics.winner_avg"]], "nautilus_trader.analysis.statistics.winner_max": [[5, "module-nautilus_trader.analysis.statistics.winner_max"]], "nautilus_trader.analysis.statistics.winner_min": [[5, "module-nautilus_trader.analysis.statistics.winner_min"]], "realized_pnls() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.realized_pnls"]], "register_statistic() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.register_statistic"]], "reset() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.reset"]], "returns() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.returns"]], "statistic() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.statistic"]], "total_pnl() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.total_pnl"]], "total_pnl_percentage() (portfolioanalyzer method)": [[5, "nautilus_trader.analysis.analyzer.PortfolioAnalyzer.total_pnl_percentage"]], "backtestdataclient (class in nautilus_trader.backtest.data_client)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient"]], "backtestengine (class in nautilus_trader.backtest.engine)": [[6, "nautilus_trader.backtest.engine.BacktestEngine"]], "backtestexecclient (class in nautilus_trader.backtest.execution_client)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient"]], "backtestmarketdataclient (class in nautilus_trader.backtest.data_client)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient"]], "backtestnode (class in nautilus_trader.backtest.node)": [[6, "nautilus_trader.backtest.node.BacktestNode"]], "backtestresult (class in nautilus_trader.backtest.results)": [[6, "nautilus_trader.backtest.results.BacktestResult"]], "bardatawrangler (class in nautilus_trader.backtest.data.wranglers)": [[6, "nautilus_trader.backtest.data.wranglers.BarDataWrangler"]], "csvbardataloader (class in nautilus_trader.backtest.data.loaders)": [[6, "nautilus_trader.backtest.data.loaders.CSVBarDataLoader"]], "csvtickdataloader (class in nautilus_trader.backtest.data.loaders)": [[6, "nautilus_trader.backtest.data.loaders.CSVTickDataLoader"]], "fxrolloverinterestmodule (class in nautilus_trader.backtest.modules)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule"]], "fillmodel (class in nautilus_trader.backtest.models)": [[6, "nautilus_trader.backtest.models.FillModel"]], "latencymodel (class in nautilus_trader.backtest.models)": [[6, "nautilus_trader.backtest.models.LatencyModel"]], "parquetbardataloader (class in nautilus_trader.backtest.data.loaders)": [[6, "nautilus_trader.backtest.data.loaders.ParquetBarDataLoader"]], "parquettickdataloader (class in nautilus_trader.backtest.data.loaders)": [[6, "nautilus_trader.backtest.data.loaders.ParquetTickDataLoader"]], "quotetickdatawrangler (class in nautilus_trader.backtest.data.wranglers)": [[6, "nautilus_trader.backtest.data.wranglers.QuoteTickDataWrangler"]], "simulatedexchange (class in nautilus_trader.backtest.exchange)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange"]], "simulationmodule (class in nautilus_trader.backtest.modules)": [[6, "nautilus_trader.backtest.modules.SimulationModule"]], "tardisquotedataloader (class in nautilus_trader.backtest.data.loaders)": [[6, "nautilus_trader.backtest.data.loaders.TardisQuoteDataLoader"]], "tardistradedataloader (class in nautilus_trader.backtest.data.loaders)": [[6, "nautilus_trader.backtest.data.loaders.TardisTradeDataLoader"]], "testdataprovider (class in nautilus_trader.backtest.data.providers)": [[6, "nautilus_trader.backtest.data.providers.TestDataProvider"]], "testinstrumentprovider (class in nautilus_trader.backtest.data.providers)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider"]], "tradetickdatawrangler (class in nautilus_trader.backtest.data.wranglers)": [[6, "nautilus_trader.backtest.data.wranglers.TradeTickDataWrangler"]], "account_id (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.account_id"]], "account_type (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.account_type"]], "account_type (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.account_type"]], "adabtc_binance() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.adabtc_binance"]], "add_actor() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_actor"]], "add_actors() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_actors"]], "add_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_data"]], "add_instrument() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_instrument"]], "add_instrument() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.add_instrument"]], "add_strategies() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_strategies"]], "add_strategy() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_strategy"]], "add_venue() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.add_venue"]], "adjust_account() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.adjust_account"]], "backtest_end (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.backtest_end"]], "backtest_start (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.backtest_start"]], "base_currency (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.base_currency"]], "base_currency (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.base_currency"]], "base_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.base_latency_nanos"]], "best_ask_price() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.best_ask_price"]], "best_bid_price() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.best_bid_price"]], "book_type (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.book_type"]], "btcusdt_binance() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.btcusdt_binance"]], "btcusdt_future_binance() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.btcusdt_future_binance"]], "cache (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.cache"]], "cache (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.cache"]], "cancel_all_orders() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.cancel_all_orders"]], "cancel_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.cancel_latency_nanos"]], "cancel_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.cancel_order"]], "change_fill_model() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.change_fill_model"]], "clear_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.clear_data"]], "configs (backtestnode property)": [[6, "nautilus_trader.backtest.node.BacktestNode.configs"]], "data (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.data"]], "default_fx_ccy() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.default_fx_ccy"]], "default_leverage (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.default_leverage"]], "degrade() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.degrade"]], "degrade() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.degrade"]], "degrade() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.degrade"]], "dispose() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.dispose"]], "dispose() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.dispose"]], "dispose() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.dispose"]], "dispose() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.dispose"]], "dump_pickled_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.dump_pickled_data"]], "end_streaming() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.end_streaming"]], "ensure_plotting() (in module nautilus_trader.backtest.results)": [[6, "nautilus_trader.backtest.results.ensure_plotting"]], "ethusd_bitmex() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.ethusd_bitmex"]], "ethusdt_binance() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.ethusdt_binance"]], "ethusdt_perp_binance() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.ethusdt_perp_binance"]], "exec_client (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.exec_client"]], "fault() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.fault"]], "fault() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.fault"]], "fault() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.fault"]], "fill_model (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.fill_model"]], "fully_qualified_name() (backtestdataclient class method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.fully_qualified_name"]], "fully_qualified_name() (backtestexecclient class method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.fully_qualified_name"]], "fully_qualified_name() (backtestmarketdataclient class method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.fully_qualified_name"]], "generate_account_state() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_account_state"]], "generate_order_accepted() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_accepted"]], "generate_order_cancel_rejected() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_cancel_rejected"]], "generate_order_canceled() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_canceled"]], "generate_order_expired() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_expired"]], "generate_order_filled() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_filled"]], "generate_order_modify_rejected() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_modify_rejected"]], "generate_order_pending_cancel() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_pending_cancel"]], "generate_order_pending_update() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_pending_update"]], "generate_order_rejected() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_rejected"]], "generate_order_submitted() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_submitted"]], "generate_order_triggered() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_triggered"]], "generate_order_updated() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.generate_order_updated"]], "get_account() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.get_account"]], "get_account() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_account"]], "get_book() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_book"]], "get_books() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_books"]], "get_engine() (backtestnode method)": [[6, "nautilus_trader.backtest.node.BacktestNode.get_engine"]], "get_engines() (backtestnode method)": [[6, "nautilus_trader.backtest.node.BacktestNode.get_engines"]], "get_matching_engines() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_matching_engines"]], "get_open_ask_orders() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_open_ask_orders"]], "get_open_bid_orders() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_open_bid_orders"]], "get_open_orders() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.get_open_orders"]], "get_result() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.get_result"]], "id (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.id"]], "id (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.id"]], "id (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.id"]], "id (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.id"]], "initialize_account() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.initialize_account"]], "insert_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.insert_latency_nanos"]], "instance_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.instance_id"]], "instruments (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.instruments"]], "is_connected (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_connected"]], "is_connected (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_connected"]], "is_connected (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_connected"]], "is_degraded (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_degraded"]], "is_degraded (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_degraded"]], "is_degraded (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_degraded"]], "is_disposed (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_disposed"]], "is_disposed (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_disposed"]], "is_disposed (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_disposed"]], "is_faulted (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_faulted"]], "is_faulted (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_faulted"]], "is_faulted (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_faulted"]], "is_frozen_account (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.is_frozen_account"]], "is_initialized (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_initialized"]], "is_initialized (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_initialized"]], "is_initialized (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_initialized"]], "is_limit_filled() (fillmodel method)": [[6, "nautilus_trader.backtest.models.FillModel.is_limit_filled"]], "is_running (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_running"]], "is_running (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_running"]], "is_running (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_running"]], "is_slipped() (fillmodel method)": [[6, "nautilus_trader.backtest.models.FillModel.is_slipped"]], "is_stop_filled() (fillmodel method)": [[6, "nautilus_trader.backtest.models.FillModel.is_stop_filled"]], "is_stopped (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.is_stopped"]], "is_stopped (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.is_stopped"]], "is_stopped (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.is_stopped"]], "iteration (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.iteration"]], "kernel (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.kernel"]], "latency_model (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.latency_model"]], "leverages (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.leverages"]], "list_actors() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.list_actors"]], "list_strategies() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.list_strategies"]], "list_venues() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.list_venues"]], "load() (csvbardataloader static method)": [[6, "nautilus_trader.backtest.data.loaders.CSVBarDataLoader.load"]], "load() (csvtickdataloader static method)": [[6, "nautilus_trader.backtest.data.loaders.CSVTickDataLoader.load"]], "load() (parquetbardataloader static method)": [[6, "nautilus_trader.backtest.data.loaders.ParquetBarDataLoader.load"]], "load() (parquettickdataloader static method)": [[6, "nautilus_trader.backtest.data.loaders.ParquetTickDataLoader.load"]], "load() (tardisquotedataloader static method)": [[6, "nautilus_trader.backtest.data.loaders.TardisQuoteDataLoader.load"]], "load() (tardistradedataloader static method)": [[6, "nautilus_trader.backtest.data.loaders.TardisTradeDataLoader.load"]], "load_pickled_data() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.load_pickled_data"]], "log_diagnostics() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.log_diagnostics"]], "log_diagnostics() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.log_diagnostics"]], "machine_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.machine_id"]], "modify_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.modify_order"]], "modules (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.modules"]], "msgbus (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.msgbus"]], "nautilus_trader.backtest": [[6, "module-nautilus_trader.backtest"]], "nautilus_trader.backtest.data.loaders": [[6, "module-nautilus_trader.backtest.data.loaders"]], "nautilus_trader.backtest.data.providers": [[6, "module-nautilus_trader.backtest.data.providers"]], "nautilus_trader.backtest.data.wranglers": [[6, "module-nautilus_trader.backtest.data.wranglers"]], "nautilus_trader.backtest.data_client": [[6, "module-nautilus_trader.backtest.data_client"]], "nautilus_trader.backtest.engine": [[6, "module-nautilus_trader.backtest.engine"]], "nautilus_trader.backtest.exchange": [[6, "module-nautilus_trader.backtest.exchange"]], "nautilus_trader.backtest.execution_client": [[6, "module-nautilus_trader.backtest.execution_client"]], "nautilus_trader.backtest.models": [[6, "module-nautilus_trader.backtest.models"]], "nautilus_trader.backtest.modules": [[6, "module-nautilus_trader.backtest.modules"]], "nautilus_trader.backtest.node": [[6, "module-nautilus_trader.backtest.node"]], "nautilus_trader.backtest.results": [[6, "module-nautilus_trader.backtest.results"]], "oms_type (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.oms_type"]], "oms_type (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.oms_type"]], "portfolio (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.portfolio"]], "prob_fill_on_limit (fillmodel attribute)": [[6, "nautilus_trader.backtest.models.FillModel.prob_fill_on_limit"]], "prob_fill_on_stop (fillmodel attribute)": [[6, "nautilus_trader.backtest.models.FillModel.prob_fill_on_stop"]], "prob_slippage (fillmodel attribute)": [[6, "nautilus_trader.backtest.models.FillModel.prob_slippage"]], "process() (bardatawrangler method)": [[6, "nautilus_trader.backtest.data.wranglers.BarDataWrangler.process"]], "process() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.process"]], "process() (quotetickdatawrangler method)": [[6, "nautilus_trader.backtest.data.wranglers.QuoteTickDataWrangler.process"]], "process() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process"]], "process() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.process"]], "process() (tradetickdatawrangler method)": [[6, "nautilus_trader.backtest.data.wranglers.TradeTickDataWrangler.process"]], "process_bar() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_bar"]], "process_bar_data() (quotetickdatawrangler method)": [[6, "nautilus_trader.backtest.data.wranglers.QuoteTickDataWrangler.process_bar_data"]], "process_order_book() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_order_book"]], "process_quote_tick() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_quote_tick"]], "process_trade_tick() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.process_trade_tick"]], "query_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.query_order"]], "register_client() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.register_client"]], "register_exchange() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.register_exchange"]], "register_exchange() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.register_exchange"]], "reject_stop_orders (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.reject_stop_orders"]], "request() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.request"]], "request() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request"]], "request_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_bars"]], "request_instrument() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_instrument"]], "request_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_instruments"]], "request_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_quote_ticks"]], "request_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.request_trade_ticks"]], "reset() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.reset"]], "reset() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.reset"]], "reset() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.reset"]], "reset() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.reset"]], "reset() (fxrolloverinterestmodule method)": [[6, "nautilus_trader.backtest.modules.FXRolloverInterestModule.reset"]], "reset() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.reset"]], "reset() (simulationmodule method)": [[6, "nautilus_trader.backtest.modules.SimulationModule.reset"]], "resume() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.resume"]], "resume() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.resume"]], "resume() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.resume"]], "run() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run"]], "run() (backtestnode method)": [[6, "nautilus_trader.backtest.node.BacktestNode.run"]], "run_config_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_config_id"]], "run_finished (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_finished"]], "run_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_id"]], "run_started (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_started"]], "run_streaming() (backtestengine method)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.run_streaming"]], "send() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.send"]], "set_fill_model() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.set_fill_model"]], "set_latency_model() (simulatedexchange method)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.set_latency_model"]], "start() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.start"]], "start() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.start"]], "start() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.start"]], "starting_balances (simulatedexchange attribute)": [[6, "nautilus_trader.backtest.exchange.SimulatedExchange.starting_balances"]], "state (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.state"]], "state (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.state"]], "state (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.state"]], "stop() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.stop"]], "stop() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.stop"]], "stop() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.stop"]], "submit_order() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.submit_order"]], "submit_order_list() (backtestexecclient method)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.submit_order_list"]], "subscribe() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.subscribe"]], "subscribe() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe"]], "subscribe_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_bars"]], "subscribe_instrument() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instrument"]], "subscribe_instrument_close_prices() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribe_trade_ticks"]], "subscribed_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_bars"]], "subscribed_generic_data() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.subscribed_generic_data"]], "subscribed_generic_data() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_generic_data"]], "subscribed_instrument_close_prices() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_instrument_close_prices"]], "subscribed_instrument_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.subscribed_trade_ticks"]], "trader (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.trader"]], "trader_id (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.trader_id"]], "trader_id (backtestengine attribute)": [[6, "nautilus_trader.backtest.engine.BacktestEngine.trader_id"]], "trader_id (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.trader_id"]], "trader_id (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.trader_id"]], "type (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.type"]], "type (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.type"]], "type (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.type"]], "unsubscribe() (backtestdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.unsubscribe"]], "unsubscribe() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe"]], "unsubscribe_bars() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close_prices() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instrument_close_prices"]], "unsubscribe_instrument_status_updates() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (backtestmarketdataclient method)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.unsubscribe_trade_ticks"]], "update_latency_nanos (latencymodel attribute)": [[6, "nautilus_trader.backtest.models.LatencyModel.update_latency_nanos"]], "venue (backtestdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestDataClient.venue"]], "venue (backtestexecclient attribute)": [[6, "nautilus_trader.backtest.execution_client.BacktestExecClient.venue"]], "venue (backtestmarketdataclient attribute)": [[6, "nautilus_trader.backtest.data_client.BacktestMarketDataClient.venue"]], "xbtusd_bitmex() (testinstrumentprovider static method)": [[6, "nautilus_trader.backtest.data.providers.TestInstrumentProvider.xbtusd_bitmex"]], "cache (class in nautilus_trader.cache.cache)": [[7, "nautilus_trader.cache.cache.Cache"]], "cachedatabase (class in nautilus_trader.cache.database)": [[7, "nautilus_trader.cache.database.CacheDatabase"]], "cachefacade (class in nautilus_trader.cache.base)": [[7, "nautilus_trader.cache.base.CacheFacade"]], "account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.account"]], "account() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.account"]], "account_for_venue() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.account_for_venue"]], "account_for_venue() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.account_for_venue"]], "account_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.account_id"]], "account_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.account_id"]], "accounts() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.accounts"]], "accounts() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.accounts"]], "add_account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_account"]], "add_account() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_account"]], "add_bar() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_bar"]], "add_bars() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_bars"]], "add_currency() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_currency"]], "add_currency() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_currency"]], "add_instrument() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_instrument"]], "add_instrument() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_instrument"]], "add_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_order"]], "add_order() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_order"]], "add_order_book() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_order_book"]], "add_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_position"]], "add_position() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_position"]], "add_position_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_position_id"]], "add_quote_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_quote_tick"]], "add_quote_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_quote_ticks"]], "add_submit_order_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_submit_order_command"]], "add_submit_order_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_submit_order_command"]], "add_submit_order_list_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_submit_order_list_command"]], "add_submit_order_list_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.add_submit_order_list_command"]], "add_ticker() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_ticker"]], "add_trade_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_trade_tick"]], "add_trade_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.add_trade_ticks"]], "bar() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.bar"]], "bar() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.bar"]], "bar_capacity (cache attribute)": [[7, "nautilus_trader.cache.cache.Cache.bar_capacity"]], "bar_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.bar_count"]], "bar_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.bar_count"]], "bars() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.bars"]], "bars() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.bars"]], "book_update_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.book_update_count"]], "book_update_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.book_update_count"]], "build_index() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.build_index"]], "cache_accounts() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_accounts"]], "cache_commands() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_commands"]], "cache_currencies() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_currencies"]], "cache_instruments() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_instruments"]], "cache_orders() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_orders"]], "cache_positions() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.cache_positions"]], "check_integrity() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.check_integrity"]], "check_residuals() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.check_residuals"]], "clear_cache() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.clear_cache"]], "clear_index() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.clear_index"]], "client_order_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_id"]], "client_order_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_id"]], "client_order_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids"]], "client_order_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids"]], "client_order_ids_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_closed"]], "client_order_ids_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_closed"]], "client_order_ids_emulated() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_emulated"]], "client_order_ids_emulated() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_emulated"]], "client_order_ids_inflight() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_inflight"]], "client_order_ids_inflight() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_inflight"]], "client_order_ids_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.client_order_ids_open"]], "client_order_ids_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.client_order_ids_open"]], "delete_strategy() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.delete_strategy"]], "delete_strategy() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.delete_strategy"]], "flush() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.flush"]], "flush_db() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.flush_db"]], "get_xrate() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.get_xrate"]], "get_xrate() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.get_xrate"]], "has_bars() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_bars"]], "has_bars() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_bars"]], "has_order_book() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_order_book"]], "has_order_book() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_order_book"]], "has_quote_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_quote_ticks"]], "has_quote_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_quote_ticks"]], "has_tickers() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_tickers"]], "has_tickers() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_tickers"]], "has_trade_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.has_trade_ticks"]], "has_trade_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.has_trade_ticks"]], "instrument() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.instrument"]], "instrument() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.instrument"]], "instrument_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.instrument_ids"]], "instrument_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.instrument_ids"]], "instruments() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.instruments"]], "instruments() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.instruments"]], "is_order_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_closed"]], "is_order_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_closed"]], "is_order_emulated() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_emulated"]], "is_order_emulated() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_emulated"]], "is_order_inflight() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_inflight"]], "is_order_inflight() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_inflight"]], "is_order_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_order_open"]], "is_order_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_order_open"]], "is_position_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_position_closed"]], "is_position_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_position_closed"]], "is_position_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.is_position_open"]], "is_position_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.is_position_open"]], "load_account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_account"]], "load_account() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_account"]], "load_accounts() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_accounts"]], "load_currencies() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_currencies"]], "load_currency() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_currency"]], "load_instrument() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_instrument"]], "load_instrument() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_instrument"]], "load_instruments() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_instruments"]], "load_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_order"]], "load_order() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_order"]], "load_orders() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_orders"]], "load_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_position"]], "load_position() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_position"]], "load_positions() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_positions"]], "load_strategy() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_strategy"]], "load_strategy() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_strategy"]], "load_submit_order_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_submit_order_command"]], "load_submit_order_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_command"]], "load_submit_order_commands() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_commands"]], "load_submit_order_list_command() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.load_submit_order_list_command"]], "load_submit_order_list_command() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_list_command"]], "load_submit_order_list_commands() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.load_submit_order_list_commands"]], "nautilus_trader.cache": [[7, "module-nautilus_trader.cache"]], "nautilus_trader.cache.base": [[7, "module-nautilus_trader.cache.base"]], "nautilus_trader.cache.cache": [[7, "module-nautilus_trader.cache.cache"]], "nautilus_trader.cache.database": [[7, "module-nautilus_trader.cache.database"]], "order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order"]], "order() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order"]], "order_book() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_book"]], "order_book() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_book"]], "order_exists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.order_exists"]], "order_exists() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.order_exists"]], "orders() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders"]], "orders() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders"]], "orders_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_closed"]], "orders_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_closed"]], "orders_closed_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_closed_count"]], "orders_closed_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_closed_count"]], "orders_emulated() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_emulated"]], "orders_emulated() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_emulated"]], "orders_emulated_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_emulated_count"]], "orders_emulated_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_emulated_count"]], "orders_for_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_for_position"]], "orders_for_position() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_for_position"]], "orders_inflight() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_inflight"]], "orders_inflight() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_inflight"]], "orders_inflight_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_inflight_count"]], "orders_inflight_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_inflight_count"]], "orders_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_open"]], "orders_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_open"]], "orders_open_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_open_count"]], "orders_open_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_open_count"]], "orders_total_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.orders_total_count"]], "orders_total_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.orders_total_count"]], "position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position"]], "position() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position"]], "position_closed_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_closed_ids"]], "position_closed_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_closed_ids"]], "position_exists() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_exists"]], "position_exists() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_exists"]], "position_for_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_for_order"]], "position_for_order() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_for_order"]], "position_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_id"]], "position_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_id"]], "position_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_ids"]], "position_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_ids"]], "position_open_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_open_ids"]], "position_open_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_open_ids"]], "position_snapshots() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.position_snapshots"]], "position_snapshots() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.position_snapshots"]], "positions() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions"]], "positions() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions"]], "positions_closed() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_closed"]], "positions_closed() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_closed"]], "positions_closed_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_closed_count"]], "positions_closed_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_closed_count"]], "positions_open() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_open"]], "positions_open() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_open"]], "positions_open_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_open_count"]], "positions_open_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_open_count"]], "positions_total_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.positions_total_count"]], "positions_total_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.positions_total_count"]], "price() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.price"]], "price() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.price"]], "quote_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.quote_tick"]], "quote_tick() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.quote_tick"]], "quote_tick_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.quote_tick_count"]], "quote_tick_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.quote_tick_count"]], "quote_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.quote_ticks"]], "quote_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.quote_ticks"]], "reset() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.reset"]], "snapshot_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.snapshot_position"]], "strategy_id_for_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.strategy_id_for_order"]], "strategy_id_for_order() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.strategy_id_for_order"]], "strategy_id_for_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.strategy_id_for_position"]], "strategy_id_for_position() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.strategy_id_for_position"]], "strategy_ids() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.strategy_ids"]], "strategy_ids() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.strategy_ids"]], "tick_capacity (cache attribute)": [[7, "nautilus_trader.cache.cache.Cache.tick_capacity"]], "ticker() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.ticker"]], "ticker() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.ticker"]], "ticker_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.ticker_count"]], "ticker_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.ticker_count"]], "tickers() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.tickers"]], "tickers() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.tickers"]], "trade_tick() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.trade_tick"]], "trade_tick() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.trade_tick"]], "trade_tick_count() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.trade_tick_count"]], "trade_tick_count() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.trade_tick_count"]], "trade_ticks() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.trade_ticks"]], "trade_ticks() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.trade_ticks"]], "update_account() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_account"]], "update_account() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_account"]], "update_order() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_order"]], "update_order() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_order"]], "update_position() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_position"]], "update_position() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_position"]], "update_strategy() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.update_strategy"]], "update_strategy() (cachedatabase method)": [[7, "nautilus_trader.cache.database.CacheDatabase.update_strategy"]], "venue_order_id() (cache method)": [[7, "nautilus_trader.cache.cache.Cache.venue_order_id"]], "venue_order_id() (cachefacade method)": [[7, "nautilus_trader.cache.base.CacheFacade.venue_order_id"]], "actor (class in nautilus_trader.common.actor)": [[8, "nautilus_trader.common.actor.Actor"]], "clientorderidgenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator"]], "clock (class in nautilus_trader.common.clock)": [[8, "nautilus_trader.common.clock.Clock"]], "component (class in nautilus_trader.common.component)": [[8, "nautilus_trader.common.component.Component"]], "componentfsmfactory (class in nautilus_trader.common.component)": [[8, "nautilus_trader.common.component.ComponentFSMFactory"]], "componentstate (class in nautilus_trader.common.enums)": [[8, "nautilus_trader.common.enums.ComponentState"]], "componenttrigger (class in nautilus_trader.common.enums)": [[8, "nautilus_trader.common.enums.ComponentTrigger"]], "identifiergenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.IdentifierGenerator"]], "instrumentprovider (class in nautilus_trader.common.providers)": [[8, "nautilus_trader.common.providers.InstrumentProvider"]], "liveclock (class in nautilus_trader.common.clock)": [[8, "nautilus_trader.common.clock.LiveClock"]], "livelogger (class in nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.LiveLogger"]], "livetimer (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.LiveTimer"]], "logcolor (class in nautilus_trader.common.enums)": [[8, "nautilus_trader.common.enums.LogColor"]], "loglevel (class in nautilus_trader.common.enums)": [[8, "nautilus_trader.common.enums.LogLevel"]], "logger (class in nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.Logger"]], "loggeradapter (class in nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.LoggerAdapter"]], "looptimer (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.LoopTimer"]], "orderfactory (class in nautilus_trader.common.factories)": [[8, "nautilus_trader.common.factories.OrderFactory"]], "positionidgenerator (class in nautilus_trader.common.generators)": [[8, "nautilus_trader.common.generators.PositionIdGenerator"]], "queue (class in nautilus_trader.common.queue)": [[8, "nautilus_trader.common.queue.Queue"]], "testclock (class in nautilus_trader.common.clock)": [[8, "nautilus_trader.common.clock.TestClock"]], "threadtimer (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.ThreadTimer"]], "throttler (class in nautilus_trader.common.throttler)": [[8, "nautilus_trader.common.throttler.Throttler"]], "timeevent (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.TimeEvent"]], "timeeventhandler (class in nautilus_trader.common.timer)": [[8, "nautilus_trader.common.timer.TimeEventHandler"]], "add() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.add"]], "add_bulk() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.add_bulk"]], "add_currency() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.add_currency"]], "advance_time() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.advance_time"]], "as_integer_ratio() (componentstate method)": [[8, "nautilus_trader.common.enums.ComponentState.as_integer_ratio"]], "as_integer_ratio() (componenttrigger method)": [[8, "nautilus_trader.common.enums.ComponentTrigger.as_integer_ratio"]], "as_integer_ratio() (logcolor method)": [[8, "nautilus_trader.common.enums.LogColor.as_integer_ratio"]], "as_integer_ratio() (loglevel method)": [[8, "nautilus_trader.common.enums.LogLevel.as_integer_ratio"]], "bit_count() (componentstate method)": [[8, "nautilus_trader.common.enums.ComponentState.bit_count"]], "bit_count() (componenttrigger method)": [[8, "nautilus_trader.common.enums.ComponentTrigger.bit_count"]], "bit_count() (logcolor method)": [[8, "nautilus_trader.common.enums.LogColor.bit_count"]], "bit_count() (loglevel method)": [[8, "nautilus_trader.common.enums.LogLevel.bit_count"]], "bit_length() (componentstate method)": [[8, "nautilus_trader.common.enums.ComponentState.bit_length"]], "bit_length() (componenttrigger method)": [[8, "nautilus_trader.common.enums.ComponentTrigger.bit_length"]], "bit_length() (logcolor method)": [[8, "nautilus_trader.common.enums.LogColor.bit_length"]], "bit_length() (loglevel method)": [[8, "nautilus_trader.common.enums.LogLevel.bit_length"]], "bracket_limit_entry() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.bracket_limit_entry"]], "bracket_market_entry() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.bracket_market_entry"]], "bracket_stop_limit_entry_stop_limit_tp() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.bracket_stop_limit_entry_stop_limit_tp"]], "cache (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.cache"]], "callback (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.callback"]], "callback (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.callback"]], "callback (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.callback"]], "cancel() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.cancel"]], "cancel() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.cancel"]], "cancel() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.cancel"]], "cancel_timer() (clock method)": [[8, "nautilus_trader.common.clock.Clock.cancel_timer"]], "cancel_timer() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.cancel_timer"]], "cancel_timer() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.cancel_timer"]], "cancel_timers() (clock method)": [[8, "nautilus_trader.common.clock.Clock.cancel_timers"]], "cancel_timers() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.cancel_timers"]], "cancel_timers() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.cancel_timers"]], "category (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.category"]], "change_clock() (livelogger method)": [[8, "nautilus_trader.common.logging.LiveLogger.change_clock"]], "change_clock() (logger method)": [[8, "nautilus_trader.common.logging.Logger.change_clock"]], "clock (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.clock"]], "component (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.component"]], "conjugate() (componentstate method)": [[8, "nautilus_trader.common.enums.ComponentState.conjugate"]], "conjugate() (componenttrigger method)": [[8, "nautilus_trader.common.enums.ComponentTrigger.conjugate"]], "conjugate() (logcolor method)": [[8, "nautilus_trader.common.enums.LogColor.conjugate"]], "conjugate() (loglevel method)": [[8, "nautilus_trader.common.enums.LogLevel.conjugate"]], "count (clientorderidgenerator attribute)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.count"]], "count (instrumentprovider property)": [[8, "nautilus_trader.common.providers.InstrumentProvider.count"]], "count (orderfactory attribute)": [[8, "nautilus_trader.common.factories.OrderFactory.count"]], "count (queue attribute)": [[8, "nautilus_trader.common.queue.Queue.count"]], "critical() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.critical"]], "currencies() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.currencies"]], "currency() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.currency"]], "debug() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.debug"]], "degrade() (actor method)": [[8, "nautilus_trader.common.actor.Actor.degrade"]], "degrade() (component method)": [[8, "nautilus_trader.common.component.Component.degrade"]], "denominator (componentstate attribute)": [[8, "nautilus_trader.common.enums.ComponentState.denominator"]], "denominator (componenttrigger attribute)": [[8, "nautilus_trader.common.enums.ComponentTrigger.denominator"]], "denominator (logcolor attribute)": [[8, "nautilus_trader.common.enums.LogColor.denominator"]], "denominator (loglevel attribute)": [[8, "nautilus_trader.common.enums.LogLevel.denominator"]], "deregister_warning_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.deregister_warning_event"]], "dispose() (actor method)": [[8, "nautilus_trader.common.actor.Actor.dispose"]], "dispose() (component method)": [[8, "nautilus_trader.common.component.Component.dispose"]], "empty() (queue method)": [[8, "nautilus_trader.common.queue.Queue.empty"]], "error() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.error"]], "event (timeeventhandler attribute)": [[8, "nautilus_trader.common.timer.TimeEventHandler.event"]], "exception() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.exception"]], "fault() (actor method)": [[8, "nautilus_trader.common.actor.Actor.fault"]], "fault() (component method)": [[8, "nautilus_trader.common.component.Component.fault"]], "find() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.find"]], "from_bytes() (componentstate method)": [[8, "nautilus_trader.common.enums.ComponentState.from_bytes"]], "from_bytes() (componenttrigger method)": [[8, "nautilus_trader.common.enums.ComponentTrigger.from_bytes"]], "from_bytes() (logcolor method)": [[8, "nautilus_trader.common.enums.LogColor.from_bytes"]], "from_bytes() (loglevel method)": [[8, "nautilus_trader.common.enums.LogLevel.from_bytes"]], "full() (queue method)": [[8, "nautilus_trader.common.queue.Queue.full"]], "fully_qualified_name() (actor class method)": [[8, "nautilus_trader.common.actor.Actor.fully_qualified_name"]], "fully_qualified_name() (component class method)": [[8, "nautilus_trader.common.component.Component.fully_qualified_name"]], "generate() (clientorderidgenerator method)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.generate"]], "generate() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.generate"]], "get() (queue method)": [[8, "nautilus_trader.common.queue.Queue.get"]], "get_all() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.get_all"]], "get_count() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.get_count"]], "get_logger() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.get_logger"]], "get_nowait() (queue method)": [[8, "nautilus_trader.common.queue.Queue.get_nowait"]], "get_run_task() (livelogger method)": [[8, "nautilus_trader.common.logging.LiveLogger.get_run_task"]], "get_state_transition_table() (componentfsmfactory static method)": [[8, "nautilus_trader.common.component.ComponentFSMFactory.get_state_transition_table"]], "handle() (timeeventhandler method)": [[8, "nautilus_trader.common.timer.TimeEventHandler.handle"]], "handle_bar() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_bar"]], "handle_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_bars"]], "handle_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_data"]], "handle_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_event"]], "handle_historical_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_historical_data"]], "handle_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instrument"]], "handle_instrument_close_price() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instrument_close_price"]], "handle_instrument_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instrument_status_update"]], "handle_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_instruments"]], "handle_order_book() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_order_book"]], "handle_order_book_delta() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_order_book_delta"]], "handle_py() (timeeventhandler method)": [[8, "nautilus_trader.common.timer.TimeEventHandler.handle_py"]], "handle_quote_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_quote_tick"]], "handle_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_quote_ticks"]], "handle_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_ticker"]], "handle_trade_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_trade_tick"]], "handle_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_trade_ticks"]], "handle_venue_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.handle_venue_status_update"]], "id (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.id"]], "id (component attribute)": [[8, "nautilus_trader.common.component.Component.id"]], "id (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.id"]], "imag (componentstate attribute)": [[8, "nautilus_trader.common.enums.ComponentState.imag"]], "imag (componenttrigger attribute)": [[8, "nautilus_trader.common.enums.ComponentTrigger.imag"]], "imag (logcolor attribute)": [[8, "nautilus_trader.common.enums.LogColor.imag"]], "imag (loglevel attribute)": [[8, "nautilus_trader.common.enums.LogLevel.imag"]], "info() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.info"]], "initialize() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.initialize"]], "instance_id (livelogger attribute)": [[8, "nautilus_trader.common.logging.LiveLogger.instance_id"]], "instance_id (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.instance_id"]], "instance_id (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.instance_id"]], "interval (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.interval"]], "interval_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.interval_ns"]], "interval_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.interval_ns"]], "interval_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.interval_ns"]], "is_bypassed (livelogger attribute)": [[8, "nautilus_trader.common.logging.LiveLogger.is_bypassed"]], "is_bypassed (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.is_bypassed"]], "is_bypassed (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.is_bypassed"]], "is_degraded (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_degraded"]], "is_degraded (component attribute)": [[8, "nautilus_trader.common.component.Component.is_degraded"]], "is_disposed (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_disposed"]], "is_disposed (component attribute)": [[8, "nautilus_trader.common.component.Component.is_disposed"]], "is_expired (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.is_expired"]], "is_expired (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.is_expired"]], "is_expired (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.is_expired"]], "is_faulted (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_faulted"]], "is_faulted (component attribute)": [[8, "nautilus_trader.common.component.Component.is_faulted"]], "is_initialized (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_initialized"]], "is_initialized (component attribute)": [[8, "nautilus_trader.common.component.Component.is_initialized"]], "is_limiting (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.is_limiting"]], "is_running (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_running"]], "is_running (component attribute)": [[8, "nautilus_trader.common.component.Component.is_running"]], "is_running (livelogger attribute)": [[8, "nautilus_trader.common.logging.LiveLogger.is_running"]], "is_stopped (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.is_stopped"]], "is_stopped (component attribute)": [[8, "nautilus_trader.common.component.Component.is_stopped"]], "iterate_next_time() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.iterate_next_time"]], "iterate_next_time() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.iterate_next_time"]], "iterate_next_time() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.iterate_next_time"]], "last_blocked (livelogger attribute)": [[8, "nautilus_trader.common.logging.LiveLogger.last_blocked"]], "limit (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.limit"]], "limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.limit"]], "limit_if_touched() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.limit_if_touched"]], "list_all() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.list_all"]], "load() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load"]], "load_all() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_all"]], "load_all_async() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_all_async"]], "load_async() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_async"]], "load_ids() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_ids"]], "load_ids_async() (instrumentprovider method)": [[8, "nautilus_trader.common.providers.InstrumentProvider.load_ids_async"]], "local_now() (clock method)": [[8, "nautilus_trader.common.clock.Clock.local_now"]], "local_now() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.local_now"]], "local_now() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.local_now"]], "log (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.log"]], "log_memory() (in module nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.log_memory"]], "machine_id (livelogger attribute)": [[8, "nautilus_trader.common.logging.LiveLogger.machine_id"]], "machine_id (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.machine_id"]], "machine_id (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.machine_id"]], "market() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.market"]], "market_if_touched() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.market_if_touched"]], "market_to_limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.market_to_limit"]], "maxsize (queue attribute)": [[8, "nautilus_trader.common.queue.Queue.maxsize"]], "msgbus (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.msgbus"]], "name (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.name"]], "name (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.name"]], "name (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.name"]], "name (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.name"]], "name (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.name"]], "nautilus_header() (in module nautilus_trader.common.logging)": [[8, "nautilus_trader.common.logging.nautilus_header"]], "nautilus_trader.common": [[8, "module-nautilus_trader.common"]], "nautilus_trader.common.actor": [[8, "module-nautilus_trader.common.actor"]], "nautilus_trader.common.clock": [[8, "module-nautilus_trader.common.clock"]], "nautilus_trader.common.component": [[8, "module-nautilus_trader.common.component"]], "nautilus_trader.common.enums": [[8, "module-nautilus_trader.common.enums"]], "nautilus_trader.common.factories": [[8, "module-nautilus_trader.common.factories"]], "nautilus_trader.common.generators": [[8, "module-nautilus_trader.common.generators"]], "nautilus_trader.common.logging": [[8, "module-nautilus_trader.common.logging"]], "nautilus_trader.common.providers": [[8, "module-nautilus_trader.common.providers"]], "nautilus_trader.common.queue": [[8, "module-nautilus_trader.common.queue"]], "nautilus_trader.common.throttler": [[8, "module-nautilus_trader.common.throttler"]], "nautilus_trader.common.timer": [[8, "module-nautilus_trader.common.timer"]], "next_time_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.next_time_ns"]], "next_time_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.next_time_ns"]], "next_time_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.next_time_ns"]], "next_time_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.next_time_ns"]], "next_time_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.next_time_ns"]], "next_time_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.next_time_ns"]], "numerator (componentstate attribute)": [[8, "nautilus_trader.common.enums.ComponentState.numerator"]], "numerator (componenttrigger attribute)": [[8, "nautilus_trader.common.enums.ComponentTrigger.numerator"]], "numerator (logcolor attribute)": [[8, "nautilus_trader.common.enums.LogColor.numerator"]], "numerator (loglevel attribute)": [[8, "nautilus_trader.common.enums.LogLevel.numerator"]], "on_bar() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_bar"]], "on_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_data"]], "on_degrade() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_degrade"]], "on_dispose() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_dispose"]], "on_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_event"]], "on_fault() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_fault"]], "on_historical_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_historical_data"]], "on_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_instrument"]], "on_instrument_close_price() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_instrument_close_price"]], "on_instrument_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_instrument_status_update"]], "on_order_book() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_order_book"]], "on_order_book_delta() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_order_book_delta"]], "on_quote_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_quote_tick"]], "on_reset() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_reset"]], "on_resume() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_resume"]], "on_start() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_start"]], "on_stop() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_stop"]], "on_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_ticker"]], "on_trade_tick() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_trade_tick"]], "on_venue_status_update() (actor method)": [[8, "nautilus_trader.common.actor.Actor.on_venue_status_update"]], "peek_back() (queue method)": [[8, "nautilus_trader.common.queue.Queue.peek_back"]], "peek_front() (queue method)": [[8, "nautilus_trader.common.queue.Queue.peek_front"]], "peek_index() (queue method)": [[8, "nautilus_trader.common.queue.Queue.peek_index"]], "pop_event() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.pop_event"]], "pop_event() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.pop_event"]], "pop_event() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.pop_event"]], "publish_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.publish_data"]], "publish_signal() (actor method)": [[8, "nautilus_trader.common.actor.Actor.publish_signal"]], "put() (queue method)": [[8, "nautilus_trader.common.queue.Queue.put"]], "put_nowait() (queue method)": [[8, "nautilus_trader.common.queue.Queue.put_nowait"]], "qsize (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.qsize"]], "qsize() (queue method)": [[8, "nautilus_trader.common.queue.Queue.qsize"]], "real (componentstate attribute)": [[8, "nautilus_trader.common.enums.ComponentState.real"]], "real (componenttrigger attribute)": [[8, "nautilus_trader.common.enums.ComponentTrigger.real"]], "real (logcolor attribute)": [[8, "nautilus_trader.common.enums.LogColor.real"]], "real (loglevel attribute)": [[8, "nautilus_trader.common.enums.LogLevel.real"]], "recv_count (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.recv_count"]], "register_base() (actor method)": [[8, "nautilus_trader.common.actor.Actor.register_base"]], "register_default_handler() (clock method)": [[8, "nautilus_trader.common.clock.Clock.register_default_handler"]], "register_default_handler() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.register_default_handler"]], "register_default_handler() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.register_default_handler"]], "register_sink() (livelogger method)": [[8, "nautilus_trader.common.logging.LiveLogger.register_sink"]], "register_sink() (logger method)": [[8, "nautilus_trader.common.logging.Logger.register_sink"]], "register_warning_event() (actor method)": [[8, "nautilus_trader.common.actor.Actor.register_warning_event"]], "repeat() (livetimer method)": [[8, "nautilus_trader.common.timer.LiveTimer.repeat"]], "repeat() (looptimer method)": [[8, "nautilus_trader.common.timer.LoopTimer.repeat"]], "repeat() (threadtimer method)": [[8, "nautilus_trader.common.timer.ThreadTimer.repeat"]], "request_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_bars"]], "request_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_data"]], "request_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_instrument"]], "request_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_instruments"]], "request_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_quote_ticks"]], "request_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.request_trade_ticks"]], "reset() (actor method)": [[8, "nautilus_trader.common.actor.Actor.reset"]], "reset() (clientorderidgenerator method)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.reset"]], "reset() (component method)": [[8, "nautilus_trader.common.component.Component.reset"]], "reset() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.reset"]], "reset() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.reset"]], "resume() (actor method)": [[8, "nautilus_trader.common.actor.Actor.resume"]], "resume() (component method)": [[8, "nautilus_trader.common.component.Component.resume"]], "send() (throttler method)": [[8, "nautilus_trader.common.throttler.Throttler.send"]], "sent_count (throttler attribute)": [[8, "nautilus_trader.common.throttler.Throttler.sent_count"]], "set_count() (clientorderidgenerator method)": [[8, "nautilus_trader.common.generators.ClientOrderIdGenerator.set_count"]], "set_count() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.set_count"]], "set_count() (positionidgenerator method)": [[8, "nautilus_trader.common.generators.PositionIdGenerator.set_count"]], "set_offset() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_offset"]], "set_time() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_time"]], "set_time_alert() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_time_alert"]], "set_time_alert() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_time_alert"]], "set_time_alert() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_time_alert"]], "set_time_alert_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_time_alert_ns"]], "set_time_alert_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_time_alert_ns"]], "set_time_alert_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_time_alert_ns"]], "set_timer() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_timer"]], "set_timer() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_timer"]], "set_timer() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_timer"]], "set_timer_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.set_timer_ns"]], "set_timer_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.set_timer_ns"]], "set_timer_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.set_timer_ns"]], "start() (actor method)": [[8, "nautilus_trader.common.actor.Actor.start"]], "start() (component method)": [[8, "nautilus_trader.common.component.Component.start"]], "start() (livelogger method)": [[8, "nautilus_trader.common.logging.LiveLogger.start"]], "start_time_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.start_time_ns"]], "start_time_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.start_time_ns"]], "start_time_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.start_time_ns"]], "state (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.state"]], "state (component attribute)": [[8, "nautilus_trader.common.component.Component.state"]], "stop() (actor method)": [[8, "nautilus_trader.common.actor.Actor.stop"]], "stop() (component method)": [[8, "nautilus_trader.common.component.Component.stop"]], "stop() (livelogger method)": [[8, "nautilus_trader.common.logging.LiveLogger.stop"]], "stop_limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.stop_limit"]], "stop_market() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.stop_market"]], "stop_time_ns (livetimer attribute)": [[8, "nautilus_trader.common.timer.LiveTimer.stop_time_ns"]], "stop_time_ns (looptimer attribute)": [[8, "nautilus_trader.common.timer.LoopTimer.stop_time_ns"]], "stop_time_ns (threadtimer attribute)": [[8, "nautilus_trader.common.timer.ThreadTimer.stop_time_ns"]], "strategy_id (orderfactory attribute)": [[8, "nautilus_trader.common.factories.OrderFactory.strategy_id"]], "subscribe_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_bars"]], "subscribe_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_data"]], "subscribe_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instrument"]], "subscribe_instrument_close_prices() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instrument_status_updates"]], "subscribe_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_instruments"]], "subscribe_order_book_deltas() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_quote_ticks"]], "subscribe_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_ticker"]], "subscribe_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.subscribe_venue_status_updates"]], "timer_count (clock attribute)": [[8, "nautilus_trader.common.clock.Clock.timer_count"]], "timer_count (liveclock attribute)": [[8, "nautilus_trader.common.clock.LiveClock.timer_count"]], "timer_count (testclock attribute)": [[8, "nautilus_trader.common.clock.TestClock.timer_count"]], "timer_names (clock attribute)": [[8, "nautilus_trader.common.clock.Clock.timer_names"]], "timer_names (liveclock attribute)": [[8, "nautilus_trader.common.clock.LiveClock.timer_names"]], "timer_names (testclock attribute)": [[8, "nautilus_trader.common.clock.TestClock.timer_names"]], "timestamp() (clock method)": [[8, "nautilus_trader.common.clock.Clock.timestamp"]], "timestamp() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.timestamp"]], "timestamp() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.timestamp"]], "timestamp_ms() (clock method)": [[8, "nautilus_trader.common.clock.Clock.timestamp_ms"]], "timestamp_ms() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.timestamp_ms"]], "timestamp_ms() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.timestamp_ms"]], "timestamp_ns() (clock method)": [[8, "nautilus_trader.common.clock.Clock.timestamp_ns"]], "timestamp_ns() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.timestamp_ns"]], "timestamp_ns() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.timestamp_ns"]], "to_bytes() (componentstate method)": [[8, "nautilus_trader.common.enums.ComponentState.to_bytes"]], "to_bytes() (componenttrigger method)": [[8, "nautilus_trader.common.enums.ComponentTrigger.to_bytes"]], "to_bytes() (logcolor method)": [[8, "nautilus_trader.common.enums.LogColor.to_bytes"]], "to_bytes() (loglevel method)": [[8, "nautilus_trader.common.enums.LogLevel.to_bytes"]], "to_importable_config() (actor method)": [[8, "nautilus_trader.common.actor.Actor.to_importable_config"]], "to_list() (queue method)": [[8, "nautilus_trader.common.queue.Queue.to_list"]], "trader_id (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.trader_id"]], "trader_id (component attribute)": [[8, "nautilus_trader.common.component.Component.trader_id"]], "trader_id (livelogger attribute)": [[8, "nautilus_trader.common.logging.LiveLogger.trader_id"]], "trader_id (logger attribute)": [[8, "nautilus_trader.common.logging.Logger.trader_id"]], "trader_id (loggeradapter attribute)": [[8, "nautilus_trader.common.logging.LoggerAdapter.trader_id"]], "trader_id (orderfactory attribute)": [[8, "nautilus_trader.common.factories.OrderFactory.trader_id"]], "trailing_stop_limit() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.trailing_stop_limit"]], "trailing_stop_market() (orderfactory method)": [[8, "nautilus_trader.common.factories.OrderFactory.trailing_stop_market"]], "ts_event (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.ts_event"]], "ts_init (timeevent attribute)": [[8, "nautilus_trader.common.timer.TimeEvent.ts_init"]], "type (actor attribute)": [[8, "nautilus_trader.common.actor.Actor.type"]], "type (component attribute)": [[8, "nautilus_trader.common.component.Component.type"]], "unsubscribe_bars() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_bars"]], "unsubscribe_data() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_data"]], "unsubscribe_instrument() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_instrument"]], "unsubscribe_instruments() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (actor method)": [[8, "nautilus_trader.common.actor.Actor.unsubscribe_venue_status_updates"]], "used() (throttler method)": [[8, "nautilus_trader.common.throttler.Throttler.used"]], "utc_now() (clock method)": [[8, "nautilus_trader.common.clock.Clock.utc_now"]], "utc_now() (liveclock method)": [[8, "nautilus_trader.common.clock.LiveClock.utc_now"]], "utc_now() (testclock method)": [[8, "nautilus_trader.common.clock.TestClock.utc_now"]], "venue (instrumentprovider property)": [[8, "nautilus_trader.common.providers.InstrumentProvider.venue"]], "warning() (loggeradapter method)": [[8, "nautilus_trader.common.logging.LoggerAdapter.warning"]], "actorconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ActorConfig"]], "actorfactory (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ActorFactory"]], "backtestdataconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig"]], "backtestengineconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig"]], "backtestrunconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig"]], "backtestvenueconfig (class in nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig"]], "cacheconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.CacheConfig"]], "cachedatabaseconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig"]], "dataengineconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.DataEngineConfig"]], "execengineconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ExecEngineConfig"]], "importableactorconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableActorConfig"]], "importableclientconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.ImportableClientConfig"]], "importablestrategyconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig"]], "instrumentproviderconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig"]], "instrumentproviderconfig.config (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.Config"]], "livedataclientconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveDataClientConfig"]], "livedataengineconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig"]], "liveexecclientconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveExecClientConfig"]], "liveexecengineconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig"]], "liveriskengineconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig"]], "nautilusconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.NautilusConfig"]], "nautiluskernelconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.NautilusKernelConfig"]], "orderemulatorconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig"]], "riskengineconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.RiskEngineConfig"]], "routingconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.RoutingConfig"]], "strategyconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.StrategyConfig"]], "strategyfactory (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.StrategyFactory"]], "streamingconfig (class in nautilus_trader.config.common)": [[9, "nautilus_trader.config.common.StreamingConfig"]], "tradingnodeconfig (class in nautilus_trader.config.live)": [[9, "nautilus_trader.config.live.TradingNodeConfig"]], "construct() (actorconfig class method)": [[9, "nautilus_trader.config.common.ActorConfig.construct"]], "construct() (backtestdataconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.construct"]], "construct() (backtestengineconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.construct"]], "construct() (backtestrunconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.construct"]], "construct() (backtestvenueconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.construct"]], "construct() (cacheconfig class method)": [[9, "nautilus_trader.config.common.CacheConfig.construct"]], "construct() (cachedatabaseconfig class method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.construct"]], "construct() (dataengineconfig class method)": [[9, "nautilus_trader.config.common.DataEngineConfig.construct"]], "construct() (execengineconfig class method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.construct"]], "construct() (importableactorconfig class method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.construct"]], "construct() (importableclientconfig class method)": [[9, "nautilus_trader.config.live.ImportableClientConfig.construct"]], "construct() (importablestrategyconfig class method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.construct"]], "construct() (instrumentproviderconfig class method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.construct"]], "construct() (livedataclientconfig class method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.construct"]], "construct() (livedataengineconfig class method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.construct"]], "construct() (liveexecclientconfig class method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.construct"]], "construct() (liveexecengineconfig class method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.construct"]], "construct() (liveriskengineconfig class method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.construct"]], "construct() (nautilusconfig class method)": [[9, "nautilus_trader.config.common.NautilusConfig.construct"]], "construct() (nautiluskernelconfig class method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.construct"]], "construct() (orderemulatorconfig class method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.construct"]], "construct() (riskengineconfig class method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.construct"]], "construct() (routingconfig class method)": [[9, "nautilus_trader.config.live.RoutingConfig.construct"]], "construct() (strategyconfig class method)": [[9, "nautilus_trader.config.common.StrategyConfig.construct"]], "construct() (streamingconfig class method)": [[9, "nautilus_trader.config.common.StreamingConfig.construct"]], "construct() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.construct"]], "copy() (actorconfig method)": [[9, "nautilus_trader.config.common.ActorConfig.copy"]], "copy() (backtestdataconfig method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.copy"]], "copy() (backtestengineconfig method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.copy"]], "copy() (backtestrunconfig method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.copy"]], "copy() (backtestvenueconfig method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.copy"]], "copy() (cacheconfig method)": [[9, "nautilus_trader.config.common.CacheConfig.copy"]], "copy() (cachedatabaseconfig method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.copy"]], "copy() (dataengineconfig method)": [[9, "nautilus_trader.config.common.DataEngineConfig.copy"]], "copy() (execengineconfig method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.copy"]], "copy() (importableactorconfig method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.copy"]], "copy() (importableclientconfig method)": [[9, "nautilus_trader.config.live.ImportableClientConfig.copy"]], "copy() (importablestrategyconfig method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.copy"]], "copy() (instrumentproviderconfig method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.copy"]], "copy() (livedataclientconfig method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.copy"]], "copy() (livedataengineconfig method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.copy"]], "copy() (liveexecclientconfig method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.copy"]], "copy() (liveexecengineconfig method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.copy"]], "copy() (liveriskengineconfig method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.copy"]], "copy() (nautilusconfig method)": [[9, "nautilus_trader.config.common.NautilusConfig.copy"]], "copy() (nautiluskernelconfig method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.copy"]], "copy() (orderemulatorconfig method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.copy"]], "copy() (riskengineconfig method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.copy"]], "copy() (routingconfig method)": [[9, "nautilus_trader.config.live.RoutingConfig.copy"]], "copy() (strategyconfig method)": [[9, "nautilus_trader.config.common.StrategyConfig.copy"]], "copy() (streamingconfig method)": [[9, "nautilus_trader.config.common.StreamingConfig.copy"]], "copy() (tradingnodeconfig method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.copy"]], "create() (actorfactory static method)": [[9, "nautilus_trader.config.common.ActorFactory.create"]], "create() (strategyfactory static method)": [[9, "nautilus_trader.config.common.StrategyFactory.create"]], "dict() (actorconfig method)": [[9, "nautilus_trader.config.common.ActorConfig.dict"]], "dict() (backtestdataconfig method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.dict"]], "dict() (backtestengineconfig method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.dict"]], "dict() (backtestrunconfig method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.dict"]], "dict() (backtestvenueconfig method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.dict"]], "dict() (cacheconfig method)": [[9, "nautilus_trader.config.common.CacheConfig.dict"]], "dict() (cachedatabaseconfig method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.dict"]], "dict() (dataengineconfig method)": [[9, "nautilus_trader.config.common.DataEngineConfig.dict"]], "dict() (execengineconfig method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.dict"]], "dict() (importableactorconfig method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.dict"]], "dict() (importableclientconfig method)": [[9, "nautilus_trader.config.live.ImportableClientConfig.dict"]], "dict() (importablestrategyconfig method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.dict"]], "dict() (instrumentproviderconfig method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.dict"]], "dict() (livedataclientconfig method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.dict"]], "dict() (livedataengineconfig method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.dict"]], "dict() (liveexecclientconfig method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.dict"]], "dict() (liveexecengineconfig method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.dict"]], "dict() (liveriskengineconfig method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.dict"]], "dict() (nautilusconfig method)": [[9, "nautilus_trader.config.common.NautilusConfig.dict"]], "dict() (nautiluskernelconfig method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.dict"]], "dict() (orderemulatorconfig method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.dict"]], "dict() (riskengineconfig method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.dict"]], "dict() (routingconfig method)": [[9, "nautilus_trader.config.live.RoutingConfig.dict"]], "dict() (strategyconfig method)": [[9, "nautilus_trader.config.common.StrategyConfig.dict"]], "dict() (streamingconfig method)": [[9, "nautilus_trader.config.common.StreamingConfig.dict"]], "dict() (tradingnodeconfig method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.dict"]], "fully_qualified_name() (actorconfig class method)": [[9, "nautilus_trader.config.common.ActorConfig.fully_qualified_name"]], "fully_qualified_name() (backtestdataconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.fully_qualified_name"]], "fully_qualified_name() (backtestengineconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.fully_qualified_name"]], "fully_qualified_name() (backtestrunconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.fully_qualified_name"]], "fully_qualified_name() (backtestvenueconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.fully_qualified_name"]], "fully_qualified_name() (cacheconfig class method)": [[9, "nautilus_trader.config.common.CacheConfig.fully_qualified_name"]], "fully_qualified_name() (cachedatabaseconfig class method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.fully_qualified_name"]], "fully_qualified_name() (dataengineconfig class method)": [[9, "nautilus_trader.config.common.DataEngineConfig.fully_qualified_name"]], "fully_qualified_name() (execengineconfig class method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.fully_qualified_name"]], "fully_qualified_name() (importableactorconfig class method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.fully_qualified_name"]], "fully_qualified_name() (importableclientconfig class method)": [[9, "nautilus_trader.config.live.ImportableClientConfig.fully_qualified_name"]], "fully_qualified_name() (importablestrategyconfig class method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.fully_qualified_name"]], "fully_qualified_name() (instrumentproviderconfig class method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.fully_qualified_name"]], "fully_qualified_name() (livedataclientconfig class method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.fully_qualified_name"]], "fully_qualified_name() (livedataengineconfig class method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.fully_qualified_name"]], "fully_qualified_name() (liveexecclientconfig class method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.fully_qualified_name"]], "fully_qualified_name() (liveexecengineconfig class method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.fully_qualified_name"]], "fully_qualified_name() (liveriskengineconfig class method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.fully_qualified_name"]], "fully_qualified_name() (nautilusconfig class method)": [[9, "nautilus_trader.config.common.NautilusConfig.fully_qualified_name"]], "fully_qualified_name() (nautiluskernelconfig class method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.fully_qualified_name"]], "fully_qualified_name() (orderemulatorconfig class method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.fully_qualified_name"]], "fully_qualified_name() (riskengineconfig class method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.fully_qualified_name"]], "fully_qualified_name() (routingconfig class method)": [[9, "nautilus_trader.config.live.RoutingConfig.fully_qualified_name"]], "fully_qualified_name() (strategyconfig class method)": [[9, "nautilus_trader.config.common.StrategyConfig.fully_qualified_name"]], "fully_qualified_name() (streamingconfig class method)": [[9, "nautilus_trader.config.common.StreamingConfig.fully_qualified_name"]], "fully_qualified_name() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.fully_qualified_name"]], "json() (actorconfig method)": [[9, "nautilus_trader.config.common.ActorConfig.json"]], "json() (backtestdataconfig method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.json"]], "json() (backtestengineconfig method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.json"]], "json() (backtestrunconfig method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.json"]], "json() (backtestvenueconfig method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.json"]], "json() (cacheconfig method)": [[9, "nautilus_trader.config.common.CacheConfig.json"]], "json() (cachedatabaseconfig method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.json"]], "json() (dataengineconfig method)": [[9, "nautilus_trader.config.common.DataEngineConfig.json"]], "json() (execengineconfig method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.json"]], "json() (importableactorconfig method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.json"]], "json() (importableclientconfig method)": [[9, "nautilus_trader.config.live.ImportableClientConfig.json"]], "json() (importablestrategyconfig method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.json"]], "json() (instrumentproviderconfig method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.json"]], "json() (livedataclientconfig method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.json"]], "json() (livedataengineconfig method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.json"]], "json() (liveexecclientconfig method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.json"]], "json() (liveexecengineconfig method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.json"]], "json() (liveriskengineconfig method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.json"]], "json() (nautilusconfig method)": [[9, "nautilus_trader.config.common.NautilusConfig.json"]], "json() (nautiluskernelconfig method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.json"]], "json() (orderemulatorconfig method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.json"]], "json() (riskengineconfig method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.json"]], "json() (routingconfig method)": [[9, "nautilus_trader.config.live.RoutingConfig.json"]], "json() (strategyconfig method)": [[9, "nautilus_trader.config.common.StrategyConfig.json"]], "json() (streamingconfig method)": [[9, "nautilus_trader.config.common.StreamingConfig.json"]], "json() (tradingnodeconfig method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.json"]], "nautilus_trader.config": [[9, "module-nautilus_trader.config"]], "nautilus_trader.config.backtest": [[9, "module-nautilus_trader.config.backtest"]], "nautilus_trader.config.common": [[9, "module-nautilus_trader.config.common"]], "nautilus_trader.config.live": [[9, "module-nautilus_trader.config.live"]], "parse_filters_expr() (in module nautilus_trader.config.backtest)": [[9, "nautilus_trader.config.backtest.parse_filters_expr"]], "update_forward_refs() (actorconfig class method)": [[9, "nautilus_trader.config.common.ActorConfig.update_forward_refs"]], "update_forward_refs() (backtestdataconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestDataConfig.update_forward_refs"]], "update_forward_refs() (backtestengineconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestEngineConfig.update_forward_refs"]], "update_forward_refs() (backtestrunconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestRunConfig.update_forward_refs"]], "update_forward_refs() (backtestvenueconfig class method)": [[9, "nautilus_trader.config.backtest.BacktestVenueConfig.update_forward_refs"]], "update_forward_refs() (cacheconfig class method)": [[9, "nautilus_trader.config.common.CacheConfig.update_forward_refs"]], "update_forward_refs() (cachedatabaseconfig class method)": [[9, "nautilus_trader.config.common.CacheDatabaseConfig.update_forward_refs"]], "update_forward_refs() (dataengineconfig class method)": [[9, "nautilus_trader.config.common.DataEngineConfig.update_forward_refs"]], "update_forward_refs() (execengineconfig class method)": [[9, "nautilus_trader.config.common.ExecEngineConfig.update_forward_refs"]], "update_forward_refs() (importableactorconfig class method)": [[9, "nautilus_trader.config.common.ImportableActorConfig.update_forward_refs"]], "update_forward_refs() (importableclientconfig class method)": [[9, "nautilus_trader.config.live.ImportableClientConfig.update_forward_refs"]], "update_forward_refs() (importablestrategyconfig class method)": [[9, "nautilus_trader.config.common.ImportableStrategyConfig.update_forward_refs"]], "update_forward_refs() (instrumentproviderconfig class method)": [[9, "nautilus_trader.config.common.InstrumentProviderConfig.update_forward_refs"]], "update_forward_refs() (livedataclientconfig class method)": [[9, "nautilus_trader.config.live.LiveDataClientConfig.update_forward_refs"]], "update_forward_refs() (livedataengineconfig class method)": [[9, "nautilus_trader.config.live.LiveDataEngineConfig.update_forward_refs"]], "update_forward_refs() (liveexecclientconfig class method)": [[9, "nautilus_trader.config.live.LiveExecClientConfig.update_forward_refs"]], "update_forward_refs() (liveexecengineconfig class method)": [[9, "nautilus_trader.config.live.LiveExecEngineConfig.update_forward_refs"]], "update_forward_refs() (liveriskengineconfig class method)": [[9, "nautilus_trader.config.live.LiveRiskEngineConfig.update_forward_refs"]], "update_forward_refs() (nautilusconfig class method)": [[9, "nautilus_trader.config.common.NautilusConfig.update_forward_refs"]], "update_forward_refs() (nautiluskernelconfig class method)": [[9, "nautilus_trader.config.common.NautilusKernelConfig.update_forward_refs"]], "update_forward_refs() (orderemulatorconfig class method)": [[9, "nautilus_trader.config.common.OrderEmulatorConfig.update_forward_refs"]], "update_forward_refs() (riskengineconfig class method)": [[9, "nautilus_trader.config.common.RiskEngineConfig.update_forward_refs"]], "update_forward_refs() (routingconfig class method)": [[9, "nautilus_trader.config.live.RoutingConfig.update_forward_refs"]], "update_forward_refs() (strategyconfig class method)": [[9, "nautilus_trader.config.common.StrategyConfig.update_forward_refs"]], "update_forward_refs() (streamingconfig class method)": [[9, "nautilus_trader.config.common.StreamingConfig.update_forward_refs"]], "update_forward_refs() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.update_forward_refs"]], "validate_importable_data_clients() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.validate_importable_data_clients"]], "validate_importable_exec_clients() (tradingnodeconfig class method)": [[9, "nautilus_trader.config.live.TradingNodeConfig.validate_importable_exec_clients"]], "command (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Command"]], "document (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Document"]], "event (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Event"]], "finitestatemachine (class in nautilus_trader.core.fsm)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine"]], "invalidstatetrigger": [[10, "nautilus_trader.core.fsm.InvalidStateTrigger"]], "message (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Message"]], "request (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Request"]], "response (class in nautilus_trader.core.message)": [[10, "nautilus_trader.core.message.Response"]], "uuid4 (class in nautilus_trader.core.uuid)": [[10, "nautilus_trader.core.uuid.UUID4"]], "add_note() (invalidstatetrigger method)": [[10, "nautilus_trader.core.fsm.InvalidStateTrigger.add_note"]], "as_utc_index() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.as_utc_index"]], "as_utc_timestamp() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.as_utc_timestamp"]], "basis_points_as_percentage() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.basis_points_as_percentage"]], "bisect_left() (in module nautilus_trader.core.collections)": [[10, "nautilus_trader.core.collections.bisect_left"]], "bisect_right() (in module nautilus_trader.core.collections)": [[10, "nautilus_trader.core.collections.bisect_right"]], "callback (request attribute)": [[10, "nautilus_trader.core.message.Request.callback"]], "category (command attribute)": [[10, "nautilus_trader.core.message.Command.category"]], "category (document attribute)": [[10, "nautilus_trader.core.message.Document.category"]], "category (event attribute)": [[10, "nautilus_trader.core.message.Event.category"]], "category (message attribute)": [[10, "nautilus_trader.core.message.Message.category"]], "category (request attribute)": [[10, "nautilus_trader.core.message.Request.category"]], "category (response attribute)": [[10, "nautilus_trader.core.message.Response.category"]], "correlation_id (response attribute)": [[10, "nautilus_trader.core.message.Response.correlation_id"]], "dt_to_unix_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.dt_to_unix_nanos"]], "fast_mad() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mad"]], "fast_mad_with_mean() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mad_with_mean"]], "fast_mean() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mean"]], "fast_mean_iterated() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_mean_iterated"]], "fast_std() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_std"]], "fast_std_with_mean() (in module nautilus_trader.core.stats)": [[10, "nautilus_trader.core.stats.fast_std_with_mean"]], "format_iso8601() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.format_iso8601"]], "id (command attribute)": [[10, "nautilus_trader.core.message.Command.id"]], "id (document attribute)": [[10, "nautilus_trader.core.message.Document.id"]], "id (event attribute)": [[10, "nautilus_trader.core.message.Event.id"]], "id (message attribute)": [[10, "nautilus_trader.core.message.Message.id"]], "id (request attribute)": [[10, "nautilus_trader.core.message.Request.id"]], "id (response attribute)": [[10, "nautilus_trader.core.message.Response.id"]], "is_datetime_utc() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.is_datetime_utc"]], "is_tz_aware() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.is_tz_aware"]], "is_tz_naive() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.is_tz_naive"]], "maybe_dt_to_unix_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.maybe_dt_to_unix_nanos"]], "maybe_unix_nanos_to_dt() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.maybe_unix_nanos_to_dt"]], "micros_to_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.micros_to_nanos"]], "millis_to_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.millis_to_nanos"]], "nanos_to_micros() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.nanos_to_micros"]], "nanos_to_millis() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.nanos_to_millis"]], "nanos_to_secs() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.nanos_to_secs"]], "nautilus_trader.core": [[10, "module-nautilus_trader.core"]], "nautilus_trader.core.collections": [[10, "module-nautilus_trader.core.collections"]], "nautilus_trader.core.datetime": [[10, "module-nautilus_trader.core.datetime"]], "nautilus_trader.core.fsm": [[10, "module-nautilus_trader.core.fsm"]], "nautilus_trader.core.message": [[10, "module-nautilus_trader.core.message"]], "nautilus_trader.core.stats": [[10, "module-nautilus_trader.core.stats"]], "nautilus_trader.core.uuid": [[10, "module-nautilus_trader.core.uuid"]], "secs_to_millis() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.secs_to_millis"]], "secs_to_nanos() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.secs_to_nanos"]], "state (finitestatemachine attribute)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine.state"]], "state_string (finitestatemachine attribute)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine.state_string"]], "trigger() (finitestatemachine method)": [[10, "nautilus_trader.core.fsm.FiniteStateMachine.trigger"]], "ts_event (event attribute)": [[10, "nautilus_trader.core.message.Event.ts_event"]], "ts_init (command attribute)": [[10, "nautilus_trader.core.message.Command.ts_init"]], "ts_init (document attribute)": [[10, "nautilus_trader.core.message.Document.ts_init"]], "ts_init (event attribute)": [[10, "nautilus_trader.core.message.Event.ts_init"]], "ts_init (message attribute)": [[10, "nautilus_trader.core.message.Message.ts_init"]], "ts_init (request attribute)": [[10, "nautilus_trader.core.message.Request.ts_init"]], "ts_init (response attribute)": [[10, "nautilus_trader.core.message.Response.ts_init"]], "unix_nanos_to_dt() (in module nautilus_trader.core.datetime)": [[10, "nautilus_trader.core.datetime.unix_nanos_to_dt"]], "with_traceback() (invalidstatetrigger method)": [[10, "nautilus_trader.core.fsm.InvalidStateTrigger.with_traceback"]], "baraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.BarAggregator"]], "barbuilder (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.BarBuilder"]], "dataclient (class in nautilus_trader.data.client)": [[11, "nautilus_trader.data.client.DataClient"]], "datacommand (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.DataCommand"]], "dataengine (class in nautilus_trader.data.engine)": [[11, "nautilus_trader.data.engine.DataEngine"]], "datarequest (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.DataRequest"]], "dataresponse (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.DataResponse"]], "marketdataclient (class in nautilus_trader.data.client)": [[11, "nautilus_trader.data.client.MarketDataClient"]], "subscribe (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.Subscribe"]], "tickbaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator"]], "timebaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator"]], "unsubscribe (class in nautilus_trader.data.messages)": [[11, "nautilus_trader.data.messages.Unsubscribe"]], "valuebaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator"]], "volumebaraggregator (class in nautilus_trader.data.aggregation)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator"]], "bar_type (baraggregator attribute)": [[11, "nautilus_trader.data.aggregation.BarAggregator.bar_type"]], "bar_type (tickbaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator.bar_type"]], "bar_type (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.bar_type"]], "bar_type (valuebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.bar_type"]], "bar_type (volumebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator.bar_type"]], "build() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.build"]], "build_now() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.build_now"]], "callback (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.callback"]], "category (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.category"]], "category (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.category"]], "category (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.category"]], "category (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.category"]], "category (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.category"]], "check_connected() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.check_connected"]], "check_disconnected() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.check_disconnected"]], "client_id (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.client_id"]], "client_id (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.client_id"]], "client_id (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.client_id"]], "client_id (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.client_id"]], "client_id (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.client_id"]], "command_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.command_count"]], "correlation_id (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.correlation_id"]], "count (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.count"]], "data (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.data"]], "data_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.data_count"]], "data_type (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.data_type"]], "data_type (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.data_type"]], "data_type (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.data_type"]], "data_type (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.data_type"]], "data_type (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.data_type"]], "debug (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.debug"]], "default_client (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.default_client"]], "degrade() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.degrade"]], "degrade() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.degrade"]], "degrade() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.degrade"]], "deregister_client() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.deregister_client"]], "dispose() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.dispose"]], "dispose() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.dispose"]], "dispose() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.dispose"]], "execute() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.execute"]], "fault() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.fault"]], "fault() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.fault"]], "fault() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.fault"]], "fully_qualified_name() (dataclient class method)": [[11, "nautilus_trader.data.client.DataClient.fully_qualified_name"]], "fully_qualified_name() (dataengine class method)": [[11, "nautilus_trader.data.engine.DataEngine.fully_qualified_name"]], "fully_qualified_name() (marketdataclient class method)": [[11, "nautilus_trader.data.client.MarketDataClient.fully_qualified_name"]], "get_cumulative_value() (valuebaraggregator method)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.get_cumulative_value"]], "get_start_time() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.get_start_time"]], "handle_quote_tick() (baraggregator method)": [[11, "nautilus_trader.data.aggregation.BarAggregator.handle_quote_tick"]], "handle_quote_tick() (tickbaraggregator method)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator.handle_quote_tick"]], "handle_quote_tick() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.handle_quote_tick"]], "handle_quote_tick() (valuebaraggregator method)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.handle_quote_tick"]], "handle_quote_tick() (volumebaraggregator method)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator.handle_quote_tick"]], "handle_trade_tick() (baraggregator method)": [[11, "nautilus_trader.data.aggregation.BarAggregator.handle_trade_tick"]], "handle_trade_tick() (tickbaraggregator method)": [[11, "nautilus_trader.data.aggregation.TickBarAggregator.handle_trade_tick"]], "handle_trade_tick() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.handle_trade_tick"]], "handle_trade_tick() (valuebaraggregator method)": [[11, "nautilus_trader.data.aggregation.ValueBarAggregator.handle_trade_tick"]], "handle_trade_tick() (volumebaraggregator method)": [[11, "nautilus_trader.data.aggregation.VolumeBarAggregator.handle_trade_tick"]], "id (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.id"]], "id (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.id"]], "id (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.id"]], "id (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.id"]], "id (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.id"]], "id (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.id"]], "id (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.id"]], "id (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.id"]], "initialized (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.initialized"]], "interval (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.interval"]], "interval_ns (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.interval_ns"]], "is_connected (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_connected"]], "is_connected (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_connected"]], "is_degraded (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_degraded"]], "is_degraded (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_degraded"]], "is_degraded (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_degraded"]], "is_disposed (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_disposed"]], "is_disposed (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_disposed"]], "is_disposed (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_disposed"]], "is_faulted (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_faulted"]], "is_faulted (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_faulted"]], "is_faulted (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_faulted"]], "is_initialized (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_initialized"]], "is_initialized (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_initialized"]], "is_initialized (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_initialized"]], "is_running (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_running"]], "is_running (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_running"]], "is_running (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_running"]], "is_stopped (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.is_stopped"]], "is_stopped (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.is_stopped"]], "is_stopped (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.is_stopped"]], "nautilus_trader.data": [[11, "module-nautilus_trader.data"]], "nautilus_trader.data.aggregation": [[11, "module-nautilus_trader.data.aggregation"]], "nautilus_trader.data.client": [[11, "module-nautilus_trader.data.client"]], "nautilus_trader.data.engine": [[11, "module-nautilus_trader.data.engine"]], "nautilus_trader.data.messages": [[11, "module-nautilus_trader.data.messages"]], "next_close_ns (timebaraggregator attribute)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.next_close_ns"]], "price_precision (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.price_precision"]], "process() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.process"]], "register_client() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_client"]], "register_default_client() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_default_client"]], "register_venue_routing() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.register_venue_routing"]], "registered_clients (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.registered_clients"]], "request() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.request"]], "request() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.request"]], "request() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request"]], "request_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_bars"]], "request_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.request_count"]], "request_instrument() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_instrument"]], "request_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_instruments"]], "request_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_quote_ticks"]], "request_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.request_trade_ticks"]], "reset() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.reset"]], "reset() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.reset"]], "reset() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.reset"]], "reset() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.reset"]], "response() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.response"]], "response_count (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.response_count"]], "resume() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.resume"]], "resume() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.resume"]], "resume() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.resume"]], "set_partial() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.set_partial"]], "set_partial() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.set_partial"]], "size_precision (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.size_precision"]], "start() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.start"]], "start() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.start"]], "start() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.start"]], "state (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.state"]], "state (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.state"]], "state (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.state"]], "stop() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.stop"]], "stop() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.stop"]], "stop() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.stop"]], "stop() (timebaraggregator method)": [[11, "nautilus_trader.data.aggregation.TimeBarAggregator.stop"]], "subscribe() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.subscribe"]], "subscribe() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe"]], "subscribe_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_bars"]], "subscribe_instrument() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instrument"]], "subscribe_instrument_close_prices() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribe_trade_ticks"]], "subscribed_bars() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_bars"]], "subscribed_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_bars"]], "subscribed_generic_data() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.subscribed_generic_data"]], "subscribed_generic_data() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_generic_data"]], "subscribed_generic_data() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_generic_data"]], "subscribed_instrument_close_prices() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_instrument_close_prices"]], "subscribed_instrument_close_prices() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_instrument_close_prices"]], "subscribed_instrument_status_updates() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_instrument_status_updates"]], "subscribed_instrument_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_instruments"]], "subscribed_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_order_book_deltas"]], "subscribed_order_book_deltas() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_order_book_snapshots"]], "subscribed_order_book_snapshots() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_quote_ticks"]], "subscribed_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_tickers"]], "subscribed_tickers() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (dataengine method)": [[11, "nautilus_trader.data.engine.DataEngine.subscribed_trade_ticks"]], "subscribed_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.subscribed_trade_ticks"]], "trader_id (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.trader_id"]], "trader_id (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.trader_id"]], "trader_id (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.trader_id"]], "ts_init (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.ts_init"]], "ts_init (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.ts_init"]], "ts_init (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.ts_init"]], "ts_init (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.ts_init"]], "ts_init (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.ts_init"]], "ts_last (barbuilder attribute)": [[11, "nautilus_trader.data.aggregation.BarBuilder.ts_last"]], "type (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.type"]], "type (dataengine attribute)": [[11, "nautilus_trader.data.engine.DataEngine.type"]], "type (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.type"]], "unsubscribe() (dataclient method)": [[11, "nautilus_trader.data.client.DataClient.unsubscribe"]], "unsubscribe() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe"]], "unsubscribe_bars() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close_prices() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instrument_close_prices"]], "unsubscribe_instrument_status_updates() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (marketdataclient method)": [[11, "nautilus_trader.data.client.MarketDataClient.unsubscribe_trade_ticks"]], "update() (barbuilder method)": [[11, "nautilus_trader.data.aggregation.BarBuilder.update"]], "venue (dataclient attribute)": [[11, "nautilus_trader.data.client.DataClient.venue"]], "venue (datacommand attribute)": [[11, "nautilus_trader.data.messages.DataCommand.venue"]], "venue (datarequest attribute)": [[11, "nautilus_trader.data.messages.DataRequest.venue"]], "venue (dataresponse attribute)": [[11, "nautilus_trader.data.messages.DataResponse.venue"]], "venue (marketdataclient attribute)": [[11, "nautilus_trader.data.client.MarketDataClient.venue"]], "venue (subscribe attribute)": [[11, "nautilus_trader.data.messages.Subscribe.venue"]], "venue (unsubscribe attribute)": [[11, "nautilus_trader.data.messages.Unsubscribe.venue"]], "cancelallorders (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.CancelAllOrders"]], "cancelorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.CancelOrder"]], "executionclient (class in nautilus_trader.execution.client)": [[12, "nautilus_trader.execution.client.ExecutionClient"]], "executionengine (class in nautilus_trader.execution.engine)": [[12, "nautilus_trader.execution.engine.ExecutionEngine"]], "executionmassstatus (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus"]], "executionreport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.ExecutionReport"]], "modifyorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.ModifyOrder"]], "orderstatusreport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.OrderStatusReport"]], "positionstatusreport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.PositionStatusReport"]], "queryorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.QueryOrder"]], "submitorder (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.SubmitOrder"]], "submitorderlist (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.SubmitOrderList"]], "tradereport (class in nautilus_trader.execution.reports)": [[12, "nautilus_trader.execution.reports.TradeReport"]], "tradingcommand (class in nautilus_trader.execution.messages)": [[12, "nautilus_trader.execution.messages.TradingCommand"]], "account_id (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.account_id"]], "account_id (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.account_id"]], "account_id (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.account_id"]], "account_id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.account_id"]], "account_id (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.account_id"]], "account_id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.account_id"]], "account_type (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.account_type"]], "add_order_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.add_order_reports"]], "add_position_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.add_position_reports"]], "add_trade_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.add_trade_reports"]], "allow_cash_positions (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.allow_cash_positions"]], "avg_px (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.avg_px"]], "base_currency (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.base_currency"]], "cancel_all_orders() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.cancel_all_orders"]], "cancel_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.cancel_order"]], "cancel_reason (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.cancel_reason"]], "category (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.category"]], "category (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.category"]], "category (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.category"]], "category (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.category"]], "category (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.category"]], "category (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.category"]], "category (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.category"]], "category (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.category"]], "category (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.category"]], "category (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.category"]], "category (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.category"]], "category (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.category"]], "check_connected() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_connected"]], "check_disconnected() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_disconnected"]], "check_integrity() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_integrity"]], "check_residuals() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.check_residuals"]], "client_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.client_id"]], "client_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.client_id"]], "client_id (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.client_id"]], "client_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.client_id"]], "client_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.client_id"]], "client_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.client_id"]], "client_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.client_id"]], "client_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.client_id"]], "client_order_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.client_order_id"]], "client_order_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.client_order_id"]], "client_order_id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.client_order_id"]], "client_order_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.client_order_id"]], "client_order_id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.client_order_id"]], "command_count (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.command_count"]], "commission (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.commission"]], "contingency_type (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.contingency_type"]], "debug (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.debug"]], "default_client (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.default_client"]], "degrade() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.degrade"]], "degrade() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.degrade"]], "deregister_client() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.deregister_client"]], "display_qty (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.display_qty"]], "dispose() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.dispose"]], "dispose() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.dispose"]], "event_count (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.event_count"]], "exec_algorithm_spec (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.exec_algorithm_spec"]], "exec_algorithm_specs (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.exec_algorithm_specs"]], "execute() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.execute"]], "expire_time (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.expire_time"]], "fault() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.fault"]], "fault() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.fault"]], "filled_qty (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.filled_qty"]], "flush_db() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.flush_db"]], "from_dict() (cancelallorders static method)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.from_dict"]], "from_dict() (cancelorder static method)": [[12, "nautilus_trader.execution.messages.CancelOrder.from_dict"]], "from_dict() (modifyorder static method)": [[12, "nautilus_trader.execution.messages.ModifyOrder.from_dict"]], "from_dict() (queryorder static method)": [[12, "nautilus_trader.execution.messages.QueryOrder.from_dict"]], "from_dict() (submitorder static method)": [[12, "nautilus_trader.execution.messages.SubmitOrder.from_dict"]], "from_dict() (submitorderlist static method)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.from_dict"]], "fully_qualified_name() (executionclient class method)": [[12, "nautilus_trader.execution.client.ExecutionClient.fully_qualified_name"]], "fully_qualified_name() (executionengine class method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.fully_qualified_name"]], "generate_account_state() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_account_state"]], "generate_order_accepted() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_canceled"]], "generate_order_expired() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_expired"]], "generate_order_filled() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_modify_rejected"]], "generate_order_pending_cancel() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_pending_cancel"]], "generate_order_pending_update() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_pending_update"]], "generate_order_rejected() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_rejected"]], "generate_order_submitted() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_submitted"]], "generate_order_triggered() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_triggered"]], "generate_order_updated() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.generate_order_updated"]], "get_account() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.get_account"]], "has_emulated_order (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.has_emulated_order"]], "id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.id"]], "id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.id"]], "id (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.id"]], "id (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.id"]], "id (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.id"]], "id (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.id"]], "id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.id"]], "id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.id"]], "id (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.id"]], "id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.id"]], "id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.id"]], "id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.id"]], "id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.id"]], "id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.id"]], "instrument_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.instrument_id"]], "instrument_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.instrument_id"]], "instrument_id (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.instrument_id"]], "instrument_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.instrument_id"]], "instrument_id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.instrument_id"]], "instrument_id (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.instrument_id"]], "instrument_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.instrument_id"]], "instrument_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.instrument_id"]], "instrument_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.instrument_id"]], "instrument_id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.instrument_id"]], "instrument_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.instrument_id"]], "is_connected (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_connected"]], "is_degraded (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_degraded"]], "is_degraded (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_degraded"]], "is_disposed (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_disposed"]], "is_disposed (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_disposed"]], "is_faulted (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_faulted"]], "is_faulted (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_faulted"]], "is_initialized (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_initialized"]], "is_initialized (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_initialized"]], "is_running (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_running"]], "is_running (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_running"]], "is_stopped (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.is_stopped"]], "is_stopped (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.is_stopped"]], "last_px (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.last_px"]], "last_qty (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.last_qty"]], "leaves_qty (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.leaves_qty"]], "limit_offset (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.limit_offset"]], "liquidity_side (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.liquidity_side"]], "load_cache() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.load_cache"]], "modify_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.modify_order"]], "nautilus_trader.execution": [[12, "module-nautilus_trader.execution"]], "nautilus_trader.execution.client": [[12, "module-nautilus_trader.execution.client"]], "nautilus_trader.execution.engine": [[12, "module-nautilus_trader.execution.engine"]], "nautilus_trader.execution.messages": [[12, "module-nautilus_trader.execution.messages"]], "nautilus_trader.execution.reports": [[12, "module-nautilus_trader.execution.reports"]], "net_qty (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.net_qty"]], "oms_type (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.oms_type"]], "order (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.order"]], "order_list (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.order_list"]], "order_list_id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.order_list_id"]], "order_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.order_reports"]], "order_side (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.order_side"]], "order_side (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.order_side"]], "order_side (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.order_side"]], "order_status (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.order_status"]], "order_type (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.order_type"]], "position_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.position_id"]], "position_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.position_id"]], "position_id_count() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.position_id_count"]], "position_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.position_reports"]], "position_side (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.position_side"]], "post_only (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.post_only"]], "price (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.price"]], "price (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.price"]], "process() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.process"]], "quantity (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.quantity"]], "quantity (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.quantity"]], "quantity (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.quantity"]], "query_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.query_order"]], "reduce_only (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.reduce_only"]], "register_client() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_client"]], "register_default_client() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_default_client"]], "register_oms_type() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_oms_type"]], "register_venue_routing() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.register_venue_routing"]], "registered_clients (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.registered_clients"]], "report_count (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.report_count"]], "reset() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.reset"]], "reset() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.reset"]], "resume() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.resume"]], "resume() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.resume"]], "start() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.start"]], "start() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.start"]], "state (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.state"]], "state (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.state"]], "stop() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.stop"]], "stop() (executionengine method)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.stop"]], "strategy_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.strategy_id"]], "strategy_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.strategy_id"]], "strategy_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.strategy_id"]], "strategy_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.strategy_id"]], "strategy_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.strategy_id"]], "strategy_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.strategy_id"]], "strategy_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.strategy_id"]], "submit_order() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.submit_order"]], "submit_order_list() (executionclient method)": [[12, "nautilus_trader.execution.client.ExecutionClient.submit_order_list"]], "time_in_force (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.time_in_force"]], "to_dict() (cancelallorders static method)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.to_dict"]], "to_dict() (cancelorder static method)": [[12, "nautilus_trader.execution.messages.CancelOrder.to_dict"]], "to_dict() (modifyorder static method)": [[12, "nautilus_trader.execution.messages.ModifyOrder.to_dict"]], "to_dict() (queryorder static method)": [[12, "nautilus_trader.execution.messages.QueryOrder.to_dict"]], "to_dict() (submitorder static method)": [[12, "nautilus_trader.execution.messages.SubmitOrder.to_dict"]], "to_dict() (submitorderlist static method)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.to_dict"]], "trade_id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.trade_id"]], "trade_reports() (executionmassstatus method)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.trade_reports"]], "trader_id (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.trader_id"]], "trader_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.trader_id"]], "trader_id (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.trader_id"]], "trader_id (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.trader_id"]], "trader_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.trader_id"]], "trader_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.trader_id"]], "trader_id (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.trader_id"]], "trader_id (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.trader_id"]], "trader_id (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.trader_id"]], "trailing_offset (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.trailing_offset"]], "trailing_offset_type (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.trailing_offset_type"]], "trigger_price (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.trigger_price"]], "trigger_price (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.trigger_price"]], "trigger_type (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.trigger_type"]], "ts_accepted (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.ts_accepted"]], "ts_event (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.ts_event"]], "ts_init (cancelallorders attribute)": [[12, "nautilus_trader.execution.messages.CancelAllOrders.ts_init"]], "ts_init (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.ts_init"]], "ts_init (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.ts_init"]], "ts_init (executionreport attribute)": [[12, "nautilus_trader.execution.reports.ExecutionReport.ts_init"]], "ts_init (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.ts_init"]], "ts_init (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.ts_init"]], "ts_init (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.ts_init"]], "ts_init (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.ts_init"]], "ts_init (submitorder attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrder.ts_init"]], "ts_init (submitorderlist attribute)": [[12, "nautilus_trader.execution.messages.SubmitOrderList.ts_init"]], "ts_init (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.ts_init"]], "ts_init (tradingcommand attribute)": [[12, "nautilus_trader.execution.messages.TradingCommand.ts_init"]], "ts_last (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.ts_last"]], "ts_last (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.ts_last"]], "ts_triggered (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.ts_triggered"]], "type (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.type"]], "type (executionengine attribute)": [[12, "nautilus_trader.execution.engine.ExecutionEngine.type"]], "venue (executionclient attribute)": [[12, "nautilus_trader.execution.client.ExecutionClient.venue"]], "venue (executionmassstatus attribute)": [[12, "nautilus_trader.execution.reports.ExecutionMassStatus.venue"]], "venue_order_id (cancelorder attribute)": [[12, "nautilus_trader.execution.messages.CancelOrder.venue_order_id"]], "venue_order_id (modifyorder attribute)": [[12, "nautilus_trader.execution.messages.ModifyOrder.venue_order_id"]], "venue_order_id (orderstatusreport attribute)": [[12, "nautilus_trader.execution.reports.OrderStatusReport.venue_order_id"]], "venue_order_id (queryorder attribute)": [[12, "nautilus_trader.execution.messages.QueryOrder.venue_order_id"]], "venue_order_id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.venue_order_id"]], "venue_position_id (positionstatusreport attribute)": [[12, "nautilus_trader.execution.reports.PositionStatusReport.venue_position_id"]], "venue_position_id (tradereport attribute)": [[12, "nautilus_trader.execution.reports.TradeReport.venue_position_id"]], "adaptivemovingaverage (class in nautilus_trader.indicators.average.ama)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage"]], "averagetruerange (class in nautilus_trader.indicators.atr)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange"]], "bollingerbands (class in nautilus_trader.indicators.bollinger_bands)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands"]], "donchianchannel (class in nautilus_trader.indicators.donchian_channel)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel"]], "efficiencyratio (class in nautilus_trader.indicators.efficiency_ratio)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio"]], "exponentialmovingaverage (class in nautilus_trader.indicators.average.ema)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage"]], "fuzzycandle (class in nautilus_trader.indicators.fuzzy_candlesticks)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle"]], "fuzzycandlesticks (class in nautilus_trader.indicators.fuzzy_candlesticks)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks"]], "hullmovingaverage (class in nautilus_trader.indicators.average.hma)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage"]], "indicator (class in nautilus_trader.indicators.base.indicator)": [[14, "nautilus_trader.indicators.base.indicator.Indicator"]], "keltnerchannel (class in nautilus_trader.indicators.keltner_channel)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel"]], "keltnerposition (class in nautilus_trader.indicators.keltner_position)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition"]], "movingaverage (class in nautilus_trader.indicators.average.moving_average)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage"]], "movingaverageconvergencedivergence (class in nautilus_trader.indicators.macd)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence"]], "movingaveragefactory (class in nautilus_trader.indicators.average.ma_factory)": [[14, "nautilus_trader.indicators.average.ma_factory.MovingAverageFactory"]], "movingaveragetype (class in nautilus_trader.indicators.average.moving_average)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverageType"]], "onbalancevolume (class in nautilus_trader.indicators.obv)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume"]], "pressure (class in nautilus_trader.indicators.pressure)": [[14, "nautilus_trader.indicators.pressure.Pressure"]], "rateofchange (class in nautilus_trader.indicators.roc)": [[14, "nautilus_trader.indicators.roc.RateOfChange"]], "relativestrengthindex (class in nautilus_trader.indicators.rsi)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex"]], "simplemovingaverage (class in nautilus_trader.indicators.average.sma)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage"]], "spreadanalyzer (class in nautilus_trader.indicators.spread_analyzer)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer"]], "stochastics (class in nautilus_trader.indicators.stochastics)": [[14, "nautilus_trader.indicators.stochastics.Stochastics"]], "swings (class in nautilus_trader.indicators.swings)": [[14, "nautilus_trader.indicators.swings.Swings"]], "volatilityratio (class in nautilus_trader.indicators.volatility_ratio)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio"]], "volumeweightedaverageprice (class in nautilus_trader.indicators.vwap)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice"]], "weightedmovingaverage (class in nautilus_trader.indicators.average.wma)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage"]], "alpha (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.alpha"]], "alpha_diff (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.alpha_diff"]], "alpha_fast (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.alpha_fast"]], "alpha_slow (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.alpha_slow"]], "average (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.average"]], "body_size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.body_size"]], "capacity (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.capacity"]], "changed (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.changed"]], "count (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.count"]], "count (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.count"]], "count (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.count"]], "count (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.count"]], "count (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.count"]], "count (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.count"]], "create() (movingaveragefactory static method)": [[14, "nautilus_trader.indicators.average.ma_factory.MovingAverageFactory.create"]], "current (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.current"]], "direction (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.direction"]], "direction (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.direction"]], "duration (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.duration"]], "fast_period (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.fast_period"]], "fast_period (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.fast_period"]], "handle_bar() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.handle_bar"]], "handle_bar() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.handle_bar"]], "handle_bar() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.handle_bar"]], "handle_bar() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.handle_bar"]], "handle_bar() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.handle_bar"]], "handle_bar() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.handle_bar"]], "handle_bar() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.handle_bar"]], "handle_bar() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.handle_bar"]], "handle_bar() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.handle_bar"]], "handle_bar() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.handle_bar"]], "handle_bar() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.handle_bar"]], "handle_bar() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.handle_bar"]], "handle_bar() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.handle_bar"]], "handle_bar() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.handle_bar"]], "handle_bar() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.handle_bar"]], "handle_bar() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.handle_bar"]], "handle_bar() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.handle_bar"]], "handle_bar() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.handle_bar"]], "handle_bar() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.handle_bar"]], "handle_bar() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.handle_bar"]], "handle_bar() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.handle_bar"]], "handle_bar() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.handle_bar"]], "handle_bar() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.handle_bar"]], "handle_bar() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.handle_bar"]], "handle_quote_tick() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.handle_quote_tick"]], "handle_quote_tick() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.handle_quote_tick"]], "handle_quote_tick() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.handle_quote_tick"]], "handle_quote_tick() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.handle_quote_tick"]], "handle_quote_tick() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.handle_quote_tick"]], "handle_quote_tick() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.handle_quote_tick"]], "handle_quote_tick() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.handle_quote_tick"]], "handle_quote_tick() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.handle_quote_tick"]], "handle_quote_tick() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.handle_quote_tick"]], "handle_quote_tick() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.handle_quote_tick"]], "handle_quote_tick() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.handle_quote_tick"]], "handle_quote_tick() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.handle_quote_tick"]], "handle_quote_tick() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.handle_quote_tick"]], "handle_quote_tick() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.handle_quote_tick"]], "handle_quote_tick() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.handle_quote_tick"]], "handle_quote_tick() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.handle_quote_tick"]], "handle_quote_tick() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.handle_quote_tick"]], "handle_quote_tick() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.handle_quote_tick"]], "handle_quote_tick() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.handle_quote_tick"]], "handle_quote_tick() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.handle_quote_tick"]], "handle_quote_tick() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.handle_quote_tick"]], "handle_quote_tick() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.handle_quote_tick"]], "handle_quote_tick() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.handle_quote_tick"]], "handle_quote_tick() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.handle_quote_tick"]], "handle_trade_tick() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.handle_trade_tick"]], "handle_trade_tick() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.handle_trade_tick"]], "handle_trade_tick() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.handle_trade_tick"]], "handle_trade_tick() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.handle_trade_tick"]], "handle_trade_tick() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.handle_trade_tick"]], "handle_trade_tick() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.handle_trade_tick"]], "handle_trade_tick() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.handle_trade_tick"]], "handle_trade_tick() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.handle_trade_tick"]], "handle_trade_tick() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.handle_trade_tick"]], "handle_trade_tick() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.handle_trade_tick"]], "handle_trade_tick() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.handle_trade_tick"]], "handle_trade_tick() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.handle_trade_tick"]], "handle_trade_tick() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.handle_trade_tick"]], "handle_trade_tick() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.handle_trade_tick"]], "handle_trade_tick() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.handle_trade_tick"]], "handle_trade_tick() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.handle_trade_tick"]], "handle_trade_tick() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.handle_trade_tick"]], "handle_trade_tick() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.handle_trade_tick"]], "handle_trade_tick() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.handle_trade_tick"]], "handle_trade_tick() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.handle_trade_tick"]], "handle_trade_tick() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.handle_trade_tick"]], "handle_trade_tick() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.handle_trade_tick"]], "handle_trade_tick() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.handle_trade_tick"]], "handle_trade_tick() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.handle_trade_tick"]], "has_inputs (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.has_inputs"]], "has_inputs (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.has_inputs"]], "has_inputs (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.has_inputs"]], "has_inputs (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.has_inputs"]], "has_inputs (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.has_inputs"]], "has_inputs (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.has_inputs"]], "has_inputs (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.has_inputs"]], "has_inputs (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.has_inputs"]], "has_inputs (indicator attribute)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.has_inputs"]], "has_inputs (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.has_inputs"]], "has_inputs (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.has_inputs"]], "has_inputs (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.has_inputs"]], "has_inputs (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.has_inputs"]], "has_inputs (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.has_inputs"]], "has_inputs (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.has_inputs"]], "has_inputs (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.has_inputs"]], "has_inputs (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.has_inputs"]], "has_inputs (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.has_inputs"]], "has_inputs (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.has_inputs"]], "has_inputs (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.has_inputs"]], "has_inputs (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.has_inputs"]], "has_inputs (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.has_inputs"]], "has_inputs (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.has_inputs"]], "has_inputs (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.has_inputs"]], "high_datetime (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.high_datetime"]], "high_price (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.high_price"]], "initialized (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.initialized"]], "initialized (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.initialized"]], "initialized (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.initialized"]], "initialized (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.initialized"]], "initialized (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.initialized"]], "initialized (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.initialized"]], "initialized (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.initialized"]], "initialized (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.initialized"]], "initialized (indicator attribute)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.initialized"]], "initialized (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.initialized"]], "initialized (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.initialized"]], "initialized (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.initialized"]], "initialized (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.initialized"]], "initialized (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.initialized"]], "initialized (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.initialized"]], "initialized (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.initialized"]], "initialized (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.initialized"]], "initialized (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.initialized"]], "initialized (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.initialized"]], "initialized (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.initialized"]], "initialized (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.initialized"]], "initialized (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.initialized"]], "initialized (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.initialized"]], "initialized (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.initialized"]], "instrument_id (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.instrument_id"]], "k (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.k"]], "k_multiplier (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.k_multiplier"]], "k_multiplier (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.k_multiplier"]], "length (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.length"]], "low_datetime (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.low_datetime"]], "low_price (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.low_price"]], "lower (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.lower"]], "lower (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.lower"]], "lower (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.lower"]], "lower_wick_size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.lower_wick_size"]], "middle (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.middle"]], "middle (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.middle"]], "middle (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.middle"]], "name (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.name"]], "name (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.name"]], "name (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.name"]], "name (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.name"]], "name (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.name"]], "name (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.name"]], "name (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.name"]], "name (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.name"]], "name (indicator attribute)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.name"]], "name (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.name"]], "name (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.name"]], "name (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.name"]], "name (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.name"]], "name (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.name"]], "name (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.name"]], "name (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.name"]], "name (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.name"]], "name (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.name"]], "name (spreadanalyzer attribute)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.name"]], "name (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.name"]], "name (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.name"]], "name (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.name"]], "name (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.name"]], "name (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.name"]], "nautilus_trader.indicators": [[14, "module-nautilus_trader.indicators"]], "nautilus_trader.indicators.atr": [[14, "module-nautilus_trader.indicators.atr"]], "nautilus_trader.indicators.average.ama": [[14, "module-nautilus_trader.indicators.average.ama"]], "nautilus_trader.indicators.average.ema": [[14, "module-nautilus_trader.indicators.average.ema"]], "nautilus_trader.indicators.average.hma": [[14, "module-nautilus_trader.indicators.average.hma"]], "nautilus_trader.indicators.average.ma_factory": [[14, "module-nautilus_trader.indicators.average.ma_factory"]], "nautilus_trader.indicators.average.moving_average": [[14, "module-nautilus_trader.indicators.average.moving_average"]], "nautilus_trader.indicators.average.sma": [[14, "module-nautilus_trader.indicators.average.sma"]], "nautilus_trader.indicators.average.wma": [[14, "module-nautilus_trader.indicators.average.wma"]], "nautilus_trader.indicators.base.indicator": [[14, "module-nautilus_trader.indicators.base.indicator"]], "nautilus_trader.indicators.bollinger_bands": [[14, "module-nautilus_trader.indicators.bollinger_bands"]], "nautilus_trader.indicators.donchian_channel": [[14, "module-nautilus_trader.indicators.donchian_channel"]], "nautilus_trader.indicators.efficiency_ratio": [[14, "module-nautilus_trader.indicators.efficiency_ratio"]], "nautilus_trader.indicators.fuzzy_candlesticks": [[14, "module-nautilus_trader.indicators.fuzzy_candlesticks"]], "nautilus_trader.indicators.keltner_channel": [[14, "module-nautilus_trader.indicators.keltner_channel"]], "nautilus_trader.indicators.keltner_position": [[14, "module-nautilus_trader.indicators.keltner_position"]], "nautilus_trader.indicators.macd": [[14, "module-nautilus_trader.indicators.macd"]], "nautilus_trader.indicators.obv": [[14, "module-nautilus_trader.indicators.obv"]], "nautilus_trader.indicators.pressure": [[14, "module-nautilus_trader.indicators.pressure"]], "nautilus_trader.indicators.roc": [[14, "module-nautilus_trader.indicators.roc"]], "nautilus_trader.indicators.rsi": [[14, "module-nautilus_trader.indicators.rsi"]], "nautilus_trader.indicators.spread_analyzer": [[14, "module-nautilus_trader.indicators.spread_analyzer"]], "nautilus_trader.indicators.stochastics": [[14, "module-nautilus_trader.indicators.stochastics"]], "nautilus_trader.indicators.swings": [[14, "module-nautilus_trader.indicators.swings"]], "nautilus_trader.indicators.volatility_ratio": [[14, "module-nautilus_trader.indicators.volatility_ratio"]], "nautilus_trader.indicators.vwap": [[14, "module-nautilus_trader.indicators.vwap"]], "period (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period"]], "period (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.period"]], "period (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.period"]], "period (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.period"]], "period (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.period"]], "period (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.period"]], "period (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.period"]], "period (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.period"]], "period (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.period"]], "period (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.period"]], "period (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.period"]], "period (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.period"]], "period (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.period"]], "period (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.period"]], "period (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.period"]], "period (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.period"]], "period (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.period"]], "period (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.period"]], "period_alpha_fast (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period_alpha_fast"]], "period_alpha_slow (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period_alpha_slow"]], "period_d (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.period_d"]], "period_er (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.period_er"]], "period_k (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.period_k"]], "price_type (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.price_type"]], "price_type (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.price_type"]], "price_type (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.price_type"]], "price_type (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.price_type"]], "price_type (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.price_type"]], "price_type (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.price_type"]], "price_type (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.price_type"]], "reset() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.reset"]], "reset() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.reset"]], "reset() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.reset"]], "reset() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.reset"]], "reset() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.reset"]], "reset() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.reset"]], "reset() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.reset"]], "reset() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.reset"]], "reset() (indicator method)": [[14, "nautilus_trader.indicators.base.indicator.Indicator.reset"]], "reset() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.reset"]], "reset() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.reset"]], "reset() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.reset"]], "reset() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.reset"]], "reset() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.reset"]], "reset() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.reset"]], "reset() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.reset"]], "reset() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.reset"]], "reset() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.reset"]], "reset() (spreadanalyzer method)": [[14, "nautilus_trader.indicators.spread_analyzer.SpreadAnalyzer.reset"]], "reset() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.reset"]], "reset() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.reset"]], "reset() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.reset"]], "reset() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.reset"]], "reset() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.reset"]], "since_high (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.since_high"]], "since_low (swings attribute)": [[14, "nautilus_trader.indicators.swings.Swings.since_low"]], "size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.size"]], "slow_period (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.slow_period"]], "slow_period (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.slow_period"]], "update_raw() (adaptivemovingaverage method)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.update_raw"]], "update_raw() (averagetruerange method)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.update_raw"]], "update_raw() (bollingerbands method)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.update_raw"]], "update_raw() (donchianchannel method)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.update_raw"]], "update_raw() (efficiencyratio method)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.update_raw"]], "update_raw() (exponentialmovingaverage method)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.update_raw"]], "update_raw() (fuzzycandlesticks method)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.update_raw"]], "update_raw() (hullmovingaverage method)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.update_raw"]], "update_raw() (keltnerchannel method)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.update_raw"]], "update_raw() (keltnerposition method)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.update_raw"]], "update_raw() (movingaverage method)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.update_raw"]], "update_raw() (movingaverageconvergencedivergence method)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.update_raw"]], "update_raw() (onbalancevolume method)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.update_raw"]], "update_raw() (pressure method)": [[14, "nautilus_trader.indicators.pressure.Pressure.update_raw"]], "update_raw() (rateofchange method)": [[14, "nautilus_trader.indicators.roc.RateOfChange.update_raw"]], "update_raw() (relativestrengthindex method)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.update_raw"]], "update_raw() (simplemovingaverage method)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.update_raw"]], "update_raw() (stochastics method)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.update_raw"]], "update_raw() (swings method)": [[14, "nautilus_trader.indicators.swings.Swings.update_raw"]], "update_raw() (volatilityratio method)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.update_raw"]], "update_raw() (volumeweightedaverageprice method)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.update_raw"]], "update_raw() (weightedmovingaverage method)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.update_raw"]], "upper (bollingerbands attribute)": [[14, "nautilus_trader.indicators.bollinger_bands.BollingerBands.upper"]], "upper (donchianchannel attribute)": [[14, "nautilus_trader.indicators.donchian_channel.DonchianChannel.upper"]], "upper (keltnerchannel attribute)": [[14, "nautilus_trader.indicators.keltner_channel.KeltnerChannel.upper"]], "upper_wick_size (fuzzycandle attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandle.upper_wick_size"]], "value (adaptivemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ama.AdaptiveMovingAverage.value"]], "value (averagetruerange attribute)": [[14, "nautilus_trader.indicators.atr.AverageTrueRange.value"]], "value (efficiencyratio attribute)": [[14, "nautilus_trader.indicators.efficiency_ratio.EfficiencyRatio.value"]], "value (exponentialmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.ema.ExponentialMovingAverage.value"]], "value (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.value"]], "value (hullmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.hma.HullMovingAverage.value"]], "value (keltnerposition attribute)": [[14, "nautilus_trader.indicators.keltner_position.KeltnerPosition.value"]], "value (movingaverage attribute)": [[14, "nautilus_trader.indicators.average.moving_average.MovingAverage.value"]], "value (movingaverageconvergencedivergence attribute)": [[14, "nautilus_trader.indicators.macd.MovingAverageConvergenceDivergence.value"]], "value (onbalancevolume attribute)": [[14, "nautilus_trader.indicators.obv.OnBalanceVolume.value"]], "value (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.value"]], "value (rateofchange attribute)": [[14, "nautilus_trader.indicators.roc.RateOfChange.value"]], "value (relativestrengthindex attribute)": [[14, "nautilus_trader.indicators.rsi.RelativeStrengthIndex.value"]], "value (simplemovingaverage attribute)": [[14, "nautilus_trader.indicators.average.sma.SimpleMovingAverage.value"]], "value (volatilityratio attribute)": [[14, "nautilus_trader.indicators.volatility_ratio.VolatilityRatio.value"]], "value (volumeweightedaverageprice attribute)": [[14, "nautilus_trader.indicators.vwap.VolumeWeightedAveragePrice.value"]], "value (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.value"]], "value_cumulative (pressure attribute)": [[14, "nautilus_trader.indicators.pressure.Pressure.value_cumulative"]], "value_d (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.value_d"]], "value_k (stochastics attribute)": [[14, "nautilus_trader.indicators.stochastics.Stochastics.value_k"]], "vector (fuzzycandlesticks attribute)": [[14, "nautilus_trader.indicators.fuzzy_candlesticks.FuzzyCandlesticks.vector"]], "weights (weightedmovingaverage attribute)": [[14, "nautilus_trader.indicators.average.wma.WeightedMovingAverage.weights"]], "rediscachedatabase (class in nautilus_trader.infrastructure.cache)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase"]], "add_account() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_account"]], "add_currency() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_currency"]], "add_instrument() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_instrument"]], "add_order() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_order"]], "add_position() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_position"]], "add_submit_order_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_submit_order_command"]], "add_submit_order_list_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.add_submit_order_list_command"]], "delete_strategy() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.delete_strategy"]], "flush() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.flush"]], "load_account() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_account"]], "load_accounts() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_accounts"]], "load_currencies() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_currencies"]], "load_currency() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_currency"]], "load_instrument() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_instrument"]], "load_instruments() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_instruments"]], "load_order() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_order"]], "load_orders() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_orders"]], "load_position() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_position"]], "load_positions() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_positions"]], "load_strategy() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_strategy"]], "load_submit_order_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_command"]], "load_submit_order_commands() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_commands"]], "load_submit_order_list_command() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_list_command"]], "load_submit_order_list_commands() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.load_submit_order_list_commands"]], "nautilus_trader.infrastructure": [[15, "module-nautilus_trader.infrastructure"]], "nautilus_trader.infrastructure.cache": [[15, "module-nautilus_trader.infrastructure.cache"]], "update_account() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_account"]], "update_order() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_order"]], "update_position() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_position"]], "update_strategy() (rediscachedatabase method)": [[15, "nautilus_trader.infrastructure.cache.RedisCacheDatabase.update_strategy"]], "livedataclient (class in nautilus_trader.live.data_client)": [[16, "nautilus_trader.live.data_client.LiveDataClient"]], "livedataengine (class in nautilus_trader.live.data_engine)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine"]], "liveexecutionclient (class in nautilus_trader.live.execution_client)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient"]], "liveexecutionengine (class in nautilus_trader.live.execution_engine)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine"]], "livemarketdataclient (class in nautilus_trader.live.data_client)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient"]], "liveriskengine (class in nautilus_trader.live.risk_engine)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine"]], "tradingnode (class in nautilus_trader.live.node)": [[16, "nautilus_trader.live.node.TradingNode"]], "tradingnodebuilder (class in nautilus_trader.live.node_builder)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder"]], "account_id (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.account_id"]], "account_type (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.account_type"]], "add_data_client_factory() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.add_data_client_factory"]], "add_data_client_factory() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.add_data_client_factory"]], "add_exec_client_factory() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.add_exec_client_factory"]], "add_exec_client_factory() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.add_exec_client_factory"]], "allow_cash_positions (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.allow_cash_positions"]], "base_currency (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.base_currency"]], "build() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.build"]], "build_data_clients() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.build_data_clients"]], "build_exec_clients() (tradingnodebuilder method)": [[16, "nautilus_trader.live.node_builder.TradingNodeBuilder.build_exec_clients"]], "cache (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.cache"]], "cancel_all_orders() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.cancel_all_orders"]], "cancel_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.cancel_order"]], "check_connected() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.check_connected"]], "check_connected() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_connected"]], "check_disconnected() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.check_disconnected"]], "check_disconnected() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_disconnected"]], "check_integrity() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_integrity"]], "check_residuals() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.check_residuals"]], "command_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.command_count"]], "command_count (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.command_count"]], "command_count (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.command_count"]], "connect() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.connect"]], "connect() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.connect"]], "connect() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.connect"]], "connect() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.connect"]], "connect() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.connect"]], "data_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.data_count"]], "data_qsize() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.data_qsize"]], "debug (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.debug"]], "debug (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.debug"]], "debug (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.debug"]], "default_client (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.default_client"]], "default_client (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.default_client"]], "degrade() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.degrade"]], "degrade() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.degrade"]], "degrade() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.degrade"]], "degrade() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.degrade"]], "degrade() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.degrade"]], "degrade() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.degrade"]], "deny_modify_pending_update (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.deny_modify_pending_update"]], "deregister_client() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.deregister_client"]], "deregister_client() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.deregister_client"]], "disconnect() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.disconnect"]], "disconnect() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.disconnect"]], "disconnect() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.disconnect"]], "disconnect() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.disconnect"]], "disconnect() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.disconnect"]], "dispose() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.dispose"]], "dispose() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.dispose"]], "dispose() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.dispose"]], "dispose() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.dispose"]], "dispose() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.dispose"]], "dispose() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.dispose"]], "dispose() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.dispose"]], "event_count (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.event_count"]], "event_count (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.event_count"]], "execute() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.execute"]], "execute() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.execute"]], "execute() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.execute"]], "fault() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.fault"]], "fault() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.fault"]], "fault() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.fault"]], "fault() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.fault"]], "fault() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.fault"]], "fault() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.fault"]], "flush_db() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.flush_db"]], "fully_qualified_name() (livedataclient class method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.fully_qualified_name"]], "fully_qualified_name() (livedataengine class method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.fully_qualified_name"]], "fully_qualified_name() (liveexecutionclient class method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.fully_qualified_name"]], "fully_qualified_name() (liveexecutionengine class method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.fully_qualified_name"]], "fully_qualified_name() (livemarketdataclient class method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.fully_qualified_name"]], "fully_qualified_name() (liveriskengine class method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.fully_qualified_name"]], "generate_account_state() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_account_state"]], "generate_mass_status() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_mass_status"]], "generate_order_accepted() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_accepted"]], "generate_order_cancel_rejected() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_cancel_rejected"]], "generate_order_canceled() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_canceled"]], "generate_order_expired() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_expired"]], "generate_order_filled() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_filled"]], "generate_order_modify_rejected() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_modify_rejected"]], "generate_order_pending_cancel() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_pending_cancel"]], "generate_order_pending_update() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_pending_update"]], "generate_order_rejected() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_rejected"]], "generate_order_status_report() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_status_report"]], "generate_order_status_reports() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_status_reports"]], "generate_order_submitted() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_submitted"]], "generate_order_triggered() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_triggered"]], "generate_order_updated() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_order_updated"]], "generate_position_status_reports() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_position_status_reports"]], "generate_trade_reports() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.generate_trade_reports"]], "get_account() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.get_account"]], "get_event_loop() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.get_event_loop"]], "get_event_loop() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.get_event_loop"]], "get_event_loop() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.get_event_loop"]], "get_inflight_check_task() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.get_inflight_check_task"]], "get_logger() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.get_logger"]], "get_run_queue_task() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.get_run_queue_task"]], "get_run_queue_task() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.get_run_queue_task"]], "get_run_queue_task() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.get_run_queue_task"]], "id (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.id"]], "id (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.id"]], "id (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.id"]], "id (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.id"]], "id (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.id"]], "id (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.id"]], "inflight_check_interval_ms (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.inflight_check_interval_ms"]], "inflight_check_threshold_ms (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.inflight_check_threshold_ms"]], "instance_id (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.instance_id"]], "is_built (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.is_built"]], "is_bypassed (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_bypassed"]], "is_connected (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_connected"]], "is_connected (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_connected"]], "is_connected (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_connected"]], "is_degraded (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_degraded"]], "is_degraded (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_degraded"]], "is_degraded (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_degraded"]], "is_degraded (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_degraded"]], "is_degraded (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_degraded"]], "is_degraded (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_degraded"]], "is_disposed (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_disposed"]], "is_disposed (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_disposed"]], "is_disposed (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_disposed"]], "is_disposed (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_disposed"]], "is_disposed (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_disposed"]], "is_disposed (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_disposed"]], "is_faulted (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_faulted"]], "is_faulted (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_faulted"]], "is_faulted (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_faulted"]], "is_faulted (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_faulted"]], "is_faulted (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_faulted"]], "is_faulted (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_faulted"]], "is_initialized (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_initialized"]], "is_initialized (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_initialized"]], "is_initialized (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_initialized"]], "is_initialized (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_initialized"]], "is_initialized (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_initialized"]], "is_initialized (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_initialized"]], "is_running (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_running"]], "is_running (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_running"]], "is_running (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_running"]], "is_running (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_running"]], "is_running (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_running"]], "is_running (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_running"]], "is_running (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.is_running"]], "is_stopped (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.is_stopped"]], "is_stopped (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.is_stopped"]], "is_stopped (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.is_stopped"]], "is_stopped (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.is_stopped"]], "is_stopped (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.is_stopped"]], "is_stopped (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.is_stopped"]], "kill() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.kill"]], "kill() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.kill"]], "kill() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.kill"]], "load_cache() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.load_cache"]], "machine_id (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.machine_id"]], "max_notional_per_order() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_notional_per_order"]], "max_notionals_per_order() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_notionals_per_order"]], "max_order_modify_rate() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_order_modify_rate"]], "max_order_submit_rate() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.max_order_submit_rate"]], "message_qsize() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.message_qsize"]], "modify_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.modify_order"]], "nautilus_trader.live": [[16, "module-nautilus_trader.live"]], "nautilus_trader.live.data_client": [[16, "module-nautilus_trader.live.data_client"]], "nautilus_trader.live.data_engine": [[16, "module-nautilus_trader.live.data_engine"]], "nautilus_trader.live.execution_client": [[16, "module-nautilus_trader.live.execution_client"]], "nautilus_trader.live.execution_engine": [[16, "module-nautilus_trader.live.execution_engine"]], "nautilus_trader.live.node": [[16, "module-nautilus_trader.live.node"]], "nautilus_trader.live.node_builder": [[16, "module-nautilus_trader.live.node_builder"]], "nautilus_trader.live.risk_engine": [[16, "module-nautilus_trader.live.risk_engine"]], "oms_type (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.oms_type"]], "portfolio (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.portfolio"]], "position_id_count() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.position_id_count"]], "process() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.process"]], "process() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.process"]], "process() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.process"]], "qsize() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.qsize"]], "qsize() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.qsize"]], "query_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.query_order"]], "reconcile_mass_status() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconcile_mass_status"]], "reconcile_report() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconcile_report"]], "reconcile_state() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconcile_state"]], "reconciliation (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconciliation"]], "reconciliation_lookback_mins (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reconciliation_lookback_mins"]], "register_client() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_client"]], "register_client() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_client"]], "register_default_client() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_default_client"]], "register_default_client() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_default_client"]], "register_oms_type() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_oms_type"]], "register_venue_routing() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.register_venue_routing"]], "register_venue_routing() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.register_venue_routing"]], "registered_clients (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.registered_clients"]], "registered_clients (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.registered_clients"]], "report_count (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.report_count"]], "request() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.request"]], "request() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.request"]], "request() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request"]], "request_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_bars"]], "request_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.request_count"]], "request_instrument() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_instrument"]], "request_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_instruments"]], "request_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_quote_ticks"]], "request_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.request_trade_ticks"]], "reset() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.reset"]], "reset() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.reset"]], "reset() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.reset"]], "reset() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.reset"]], "reset() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.reset"]], "reset() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.reset"]], "response() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.response"]], "response_count (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.response_count"]], "resume() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.resume"]], "resume() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.resume"]], "resume() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.resume"]], "resume() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.resume"]], "resume() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.resume"]], "resume() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.resume"]], "set_max_notional_per_order() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.set_max_notional_per_order"]], "set_trading_state() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.set_trading_state"]], "start() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.start"]], "start() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.start"]], "start() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.start"]], "start() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.start"]], "start() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.start"]], "start() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.start"]], "start() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.start"]], "state (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.state"]], "state (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.state"]], "state (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.state"]], "state (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.state"]], "state (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.state"]], "state (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.state"]], "stop() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.stop"]], "stop() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.stop"]], "stop() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.stop"]], "stop() (liveexecutionengine method)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.stop"]], "stop() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.stop"]], "stop() (liveriskengine method)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.stop"]], "stop() (tradingnode method)": [[16, "nautilus_trader.live.node.TradingNode.stop"]], "submit_order() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.submit_order"]], "submit_order_list() (liveexecutionclient method)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.submit_order_list"]], "subscribe() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.subscribe"]], "subscribe() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe"]], "subscribe_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_bars"]], "subscribe_instrument() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instrument"]], "subscribe_instrument_close_prices() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instrument_status_updates"]], "subscribe_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_instruments"]], "subscribe_order_book_deltas() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_quote_ticks"]], "subscribe_ticker() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_ticker"]], "subscribe_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribe_trade_ticks"]], "subscribed_bars() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_bars"]], "subscribed_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_bars"]], "subscribed_generic_data() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.subscribed_generic_data"]], "subscribed_generic_data() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_generic_data"]], "subscribed_generic_data() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_generic_data"]], "subscribed_instrument_close_prices() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_instrument_close_prices"]], "subscribed_instrument_close_prices() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_instrument_close_prices"]], "subscribed_instrument_status_updates() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_instrument_status_updates"]], "subscribed_instrument_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_instrument_status_updates"]], "subscribed_instruments() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_instruments"]], "subscribed_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_instruments"]], "subscribed_order_book_deltas() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_order_book_deltas"]], "subscribed_order_book_deltas() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_order_book_deltas"]], "subscribed_order_book_snapshots() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_order_book_snapshots"]], "subscribed_order_book_snapshots() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_order_book_snapshots"]], "subscribed_quote_ticks() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_quote_ticks"]], "subscribed_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_quote_ticks"]], "subscribed_tickers() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_tickers"]], "subscribed_tickers() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_tickers"]], "subscribed_trade_ticks() (livedataengine method)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.subscribed_trade_ticks"]], "subscribed_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.subscribed_trade_ticks"]], "trader (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.trader"]], "trader_id (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.trader_id"]], "trader_id (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.trader_id"]], "trader_id (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.trader_id"]], "trader_id (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.trader_id"]], "trader_id (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.trader_id"]], "trader_id (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.trader_id"]], "trader_id (tradingnode property)": [[16, "nautilus_trader.live.node.TradingNode.trader_id"]], "trading_state (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.trading_state"]], "type (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.type"]], "type (livedataengine attribute)": [[16, "nautilus_trader.live.data_engine.LiveDataEngine.type"]], "type (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.type"]], "type (liveexecutionengine attribute)": [[16, "nautilus_trader.live.execution_engine.LiveExecutionEngine.type"]], "type (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.type"]], "type (liveriskengine attribute)": [[16, "nautilus_trader.live.risk_engine.LiveRiskEngine.type"]], "unsubscribe() (livedataclient method)": [[16, "nautilus_trader.live.data_client.LiveDataClient.unsubscribe"]], "unsubscribe() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe"]], "unsubscribe_bars() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_bars"]], "unsubscribe_instrument() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instrument"]], "unsubscribe_instrument_close_prices() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instrument_close_prices"]], "unsubscribe_instrument_status_updates() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instrument_status_updates"]], "unsubscribe_instruments() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (livemarketdataclient method)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.unsubscribe_trade_ticks"]], "venue (livedataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveDataClient.venue"]], "venue (liveexecutionclient attribute)": [[16, "nautilus_trader.live.execution_client.LiveExecutionClient.venue"]], "venue (livemarketdataclient attribute)": [[16, "nautilus_trader.live.data_client.LiveMarketDataClient.venue"]], "currency (class in nautilus_trader.model.currency)": [[17, "nautilus_trader.model.currency.Currency"]], "code (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.code"]], "currency_type (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.currency_type"]], "from_str() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.from_str"]], "is_crypto() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.is_crypto"]], "is_fiat() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.is_fiat"]], "iso4217 (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.iso4217"]], "name (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.name"]], "nautilus_trader.model.currency": [[17, "module-nautilus_trader.model.currency"]], "precision (currency attribute)": [[17, "nautilus_trader.model.currency.Currency.precision"]], "register() (currency static method)": [[17, "nautilus_trader.model.currency.Currency.register"]], "bar (class in nautilus_trader.model.data.bar)": [[18, "nautilus_trader.model.data.bar.Bar"]], "barspecification (class in nautilus_trader.model.data.bar)": [[18, "nautilus_trader.model.data.bar.BarSpecification"]], "bartype (class in nautilus_trader.model.data.bar)": [[18, "nautilus_trader.model.data.bar.BarType"]], "bet (class in nautilus_trader.model.data.bet)": [[18, "nautilus_trader.model.data.bet.Bet"]], "datatype (class in nautilus_trader.model.data.base)": [[18, "nautilus_trader.model.data.base.DataType"]], "genericdata (class in nautilus_trader.model.data.base)": [[18, "nautilus_trader.model.data.base.GenericData"]], "instrumentcloseprice (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice"]], "instrumentstatusupdate (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate"]], "quotetick (class in nautilus_trader.model.data.tick)": [[18, "nautilus_trader.model.data.tick.QuoteTick"]], "statusupdate (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.StatusUpdate"]], "ticker (class in nautilus_trader.model.data.ticker)": [[18, "nautilus_trader.model.data.ticker.Ticker"]], "tradetick (class in nautilus_trader.model.data.tick)": [[18, "nautilus_trader.model.data.tick.TradeTick"]], "venuestatusupdate (class in nautilus_trader.model.data.venue)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate"]], "aggregation (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.aggregation"]], "aggregation_source (bartype attribute)": [[18, "nautilus_trader.model.data.bar.BarType.aggregation_source"]], "aggressor_side (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.aggressor_side"]], "ask (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ask"]], "ask_size (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ask_size"]], "bar_type (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.bar_type"]], "bid (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.bid"]], "bid_size (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.bid_size"]], "check_information_aggregated() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.check_information_aggregated"]], "check_threshold_aggregated() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.check_threshold_aggregated"]], "check_time_aggregated() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.check_time_aggregated"]], "close (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.close"]], "close_price (instrumentcloseprice attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.close_price"]], "close_type (instrumentcloseprice attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.close_type"]], "cost() (bet method)": [[18, "nautilus_trader.model.data.bet.Bet.cost"]], "data (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.data"]], "data_type (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.data_type"]], "exposure() (bet method)": [[18, "nautilus_trader.model.data.bet.Bet.exposure"]], "extract_price() (quotetick method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.extract_price"]], "extract_volume() (quotetick method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.extract_volume"]], "from_dict() (bar static method)": [[18, "nautilus_trader.model.data.bar.Bar.from_dict"]], "from_dict() (bet static method)": [[18, "nautilus_trader.model.data.bet.Bet.from_dict"]], "from_dict() (instrumentcloseprice static method)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.from_dict"]], "from_dict() (instrumentstatusupdate static method)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.from_dict"]], "from_dict() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.from_dict"]], "from_dict() (ticker static method)": [[18, "nautilus_trader.model.data.ticker.Ticker.from_dict"]], "from_dict() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.from_dict"]], "from_dict() (venuestatusupdate static method)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.from_dict"]], "from_raw() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.from_raw"]], "from_raw() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.from_raw"]], "from_str() (barspecification static method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.from_str"]], "from_str() (bartype static method)": [[18, "nautilus_trader.model.data.bar.BarType.from_str"]], "fully_qualified_name() (bar class method)": [[18, "nautilus_trader.model.data.bar.Bar.fully_qualified_name"]], "fully_qualified_name() (genericdata class method)": [[18, "nautilus_trader.model.data.base.GenericData.fully_qualified_name"]], "fully_qualified_name() (instrumentcloseprice class method)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.fully_qualified_name"]], "fully_qualified_name() (instrumentstatusupdate class method)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.fully_qualified_name"]], "fully_qualified_name() (quotetick class method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.fully_qualified_name"]], "fully_qualified_name() (statusupdate class method)": [[18, "nautilus_trader.model.data.venue.StatusUpdate.fully_qualified_name"]], "fully_qualified_name() (ticker class method)": [[18, "nautilus_trader.model.data.ticker.Ticker.fully_qualified_name"]], "fully_qualified_name() (tradetick class method)": [[18, "nautilus_trader.model.data.tick.TradeTick.fully_qualified_name"]], "fully_qualified_name() (venuestatusupdate class method)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.fully_qualified_name"]], "high (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.high"]], "instrument_id (bartype attribute)": [[18, "nautilus_trader.model.data.bar.BarType.instrument_id"]], "instrument_id (instrumentcloseprice attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.instrument_id"]], "instrument_id (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.instrument_id"]], "instrument_id (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.instrument_id"]], "instrument_id (ticker attribute)": [[18, "nautilus_trader.model.data.ticker.Ticker.instrument_id"]], "instrument_id (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.instrument_id"]], "is_externally_aggregated() (bartype method)": [[18, "nautilus_trader.model.data.bar.BarType.is_externally_aggregated"]], "is_information_aggregated() (barspecification method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.is_information_aggregated"]], "is_internally_aggregated() (bartype method)": [[18, "nautilus_trader.model.data.bar.BarType.is_internally_aggregated"]], "is_single_price() (bar method)": [[18, "nautilus_trader.model.data.bar.Bar.is_single_price"]], "is_threshold_aggregated() (barspecification method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.is_threshold_aggregated"]], "is_time_aggregated() (barspecification method)": [[18, "nautilus_trader.model.data.bar.BarSpecification.is_time_aggregated"]], "liability() (bet method)": [[18, "nautilus_trader.model.data.bet.Bet.liability"]], "lose_payoff() (bet method)": [[18, "nautilus_trader.model.data.bet.Bet.lose_payoff"]], "low (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.low"]], "metadata (datatype attribute)": [[18, "nautilus_trader.model.data.base.DataType.metadata"]], "nautilus_to_bet() (in module nautilus_trader.model.data.bet)": [[18, "nautilus_trader.model.data.bet.nautilus_to_bet"]], "nautilus_trader.model.data": [[18, "module-nautilus_trader.model.data"]], "nautilus_trader.model.data.bar": [[18, "module-nautilus_trader.model.data.bar"]], "nautilus_trader.model.data.base": [[18, "module-nautilus_trader.model.data.base"]], "nautilus_trader.model.data.bet": [[18, "module-nautilus_trader.model.data.bet"]], "nautilus_trader.model.data.tick": [[18, "module-nautilus_trader.model.data.tick"]], "nautilus_trader.model.data.ticker": [[18, "module-nautilus_trader.model.data.ticker"]], "nautilus_trader.model.data.venue": [[18, "module-nautilus_trader.model.data.venue"]], "open (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.open"]], "price (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.price"]], "price_type (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.price_type"]], "size (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.size"]], "spec (bartype attribute)": [[18, "nautilus_trader.model.data.bar.BarType.spec"]], "stake() (bet method)": [[18, "nautilus_trader.model.data.bet.Bet.stake"]], "status (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.status"]], "status (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.status"]], "step (barspecification attribute)": [[18, "nautilus_trader.model.data.bar.BarSpecification.step"]], "to_dict() (bar static method)": [[18, "nautilus_trader.model.data.bar.Bar.to_dict"]], "to_dict() (bet static method)": [[18, "nautilus_trader.model.data.bet.Bet.to_dict"]], "to_dict() (instrumentcloseprice static method)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.to_dict"]], "to_dict() (instrumentstatusupdate static method)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.to_dict"]], "to_dict() (quotetick static method)": [[18, "nautilus_trader.model.data.tick.QuoteTick.to_dict"]], "to_dict() (ticker static method)": [[18, "nautilus_trader.model.data.ticker.Ticker.to_dict"]], "to_dict() (tradetick static method)": [[18, "nautilus_trader.model.data.tick.TradeTick.to_dict"]], "to_dict() (venuestatusupdate static method)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.to_dict"]], "topic (datatype attribute)": [[18, "nautilus_trader.model.data.base.DataType.topic"]], "trade_id (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.trade_id"]], "ts_event (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.ts_event"]], "ts_event (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.ts_event"]], "ts_event (instrumentcloseprice attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.ts_event"]], "ts_event (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.ts_event"]], "ts_event (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ts_event"]], "ts_event (statusupdate attribute)": [[18, "nautilus_trader.model.data.venue.StatusUpdate.ts_event"]], "ts_event (ticker attribute)": [[18, "nautilus_trader.model.data.ticker.Ticker.ts_event"]], "ts_event (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.ts_event"]], "ts_event (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.ts_event"]], "ts_init (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.ts_init"]], "ts_init (genericdata attribute)": [[18, "nautilus_trader.model.data.base.GenericData.ts_init"]], "ts_init (instrumentcloseprice attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentClosePrice.ts_init"]], "ts_init (instrumentstatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.InstrumentStatusUpdate.ts_init"]], "ts_init (quotetick attribute)": [[18, "nautilus_trader.model.data.tick.QuoteTick.ts_init"]], "ts_init (statusupdate attribute)": [[18, "nautilus_trader.model.data.venue.StatusUpdate.ts_init"]], "ts_init (ticker attribute)": [[18, "nautilus_trader.model.data.ticker.Ticker.ts_init"]], "ts_init (tradetick attribute)": [[18, "nautilus_trader.model.data.tick.TradeTick.ts_init"]], "ts_init (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.ts_init"]], "type (datatype attribute)": [[18, "nautilus_trader.model.data.base.DataType.type"]], "venue (venuestatusupdate attribute)": [[18, "nautilus_trader.model.data.venue.VenueStatusUpdate.venue"]], "volume (bar attribute)": [[18, "nautilus_trader.model.data.bar.Bar.volume"]], "win_payoff() (bet method)": [[18, "nautilus_trader.model.data.bet.Bet.win_payoff"]], "nautilus_trader.model.enums": [[19, "module-nautilus_trader.model.enums"]], "accountstate (class in nautilus_trader.model.events.account)": [[20, "nautilus_trader.model.events.account.AccountState"]], "orderaccepted (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderAccepted"]], "ordercancelrejected (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected"]], "ordercanceled (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderCanceled"]], "orderdenied (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderDenied"]], "orderevent (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderEvent"]], "orderexpired (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderExpired"]], "orderfilled (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderFilled"]], "orderinitialized (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderInitialized"]], "ordermodifyrejected (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected"]], "orderpendingcancel (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel"]], "orderpendingupdate (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate"]], "orderrejected (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderRejected"]], "ordersubmitted (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderSubmitted"]], "ordertriggered (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderTriggered"]], "orderupdated (class in nautilus_trader.model.events.order)": [[20, "nautilus_trader.model.events.order.OrderUpdated"]], "positionchanged (class in nautilus_trader.model.events.position)": [[20, "nautilus_trader.model.events.position.PositionChanged"]], "positionclosed (class in nautilus_trader.model.events.position)": [[20, "nautilus_trader.model.events.position.PositionClosed"]], "positionevent (class in nautilus_trader.model.events.position)": [[20, "nautilus_trader.model.events.position.PositionEvent"]], "positionopened (class in nautilus_trader.model.events.position)": [[20, "nautilus_trader.model.events.position.PositionOpened"]], "account_id (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.account_id"]], "account_id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.account_id"]], "account_id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.account_id"]], "account_id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.account_id"]], "account_id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.account_id"]], "account_id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.account_id"]], "account_id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.account_id"]], "account_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.account_id"]], "account_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.account_id"]], "account_id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.account_id"]], "account_id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.account_id"]], "account_id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.account_id"]], "account_id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.account_id"]], "account_id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.account_id"]], "account_id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.account_id"]], "account_id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.account_id"]], "account_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.account_id"]], "account_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.account_id"]], "account_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.account_id"]], "account_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.account_id"]], "account_type (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.account_type"]], "avg_px_close (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.avg_px_close"]], "avg_px_close (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.avg_px_close"]], "avg_px_close (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.avg_px_close"]], "avg_px_close (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.avg_px_close"]], "avg_px_open (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.avg_px_open"]], "avg_px_open (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.avg_px_open"]], "avg_px_open (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.avg_px_open"]], "avg_px_open (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.avg_px_open"]], "balances (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.balances"]], "base_currency (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.base_currency"]], "category (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.category"]], "category (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.category"]], "category (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.category"]], "category (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.category"]], "category (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.category"]], "category (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.category"]], "category (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.category"]], "category (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.category"]], "category (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.category"]], "category (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.category"]], "category (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.category"]], "category (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.category"]], "category (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.category"]], "category (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.category"]], "category (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.category"]], "category (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.category"]], "category (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.category"]], "category (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.category"]], "category (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.category"]], "category (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.category"]], "client_order_id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.client_order_id"]], "client_order_id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.client_order_id"]], "client_order_id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.client_order_id"]], "client_order_id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.client_order_id"]], "client_order_id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.client_order_id"]], "client_order_id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.client_order_id"]], "client_order_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.client_order_id"]], "client_order_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.client_order_id"]], "client_order_id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.client_order_id"]], "client_order_id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.client_order_id"]], "client_order_id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.client_order_id"]], "client_order_id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.client_order_id"]], "client_order_id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.client_order_id"]], "client_order_id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.client_order_id"]], "client_order_id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.client_order_id"]], "closing_order_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.closing_order_id"]], "closing_order_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.closing_order_id"]], "closing_order_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.closing_order_id"]], "closing_order_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.closing_order_id"]], "commission (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.commission"]], "contingency_type (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.contingency_type"]], "create() (positionchanged static method)": [[20, "nautilus_trader.model.events.position.PositionChanged.create"]], "create() (positionclosed static method)": [[20, "nautilus_trader.model.events.position.PositionClosed.create"]], "create() (positionopened static method)": [[20, "nautilus_trader.model.events.position.PositionOpened.create"]], "currency (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.currency"]], "currency (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.currency"]], "currency (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.currency"]], "currency (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.currency"]], "currency (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.currency"]], "duration_ns (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.duration_ns"]], "duration_ns (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.duration_ns"]], "duration_ns (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.duration_ns"]], "duration_ns (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.duration_ns"]], "emulation_trigger (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.emulation_trigger"]], "entry (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.entry"]], "entry (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.entry"]], "entry (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.entry"]], "entry (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.entry"]], "from_dict() (accountstate static method)": [[20, "nautilus_trader.model.events.account.AccountState.from_dict"]], "from_dict() (orderaccepted static method)": [[20, "nautilus_trader.model.events.order.OrderAccepted.from_dict"]], "from_dict() (ordercancelrejected static method)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.from_dict"]], "from_dict() (ordercanceled static method)": [[20, "nautilus_trader.model.events.order.OrderCanceled.from_dict"]], "from_dict() (orderdenied static method)": [[20, "nautilus_trader.model.events.order.OrderDenied.from_dict"]], "from_dict() (orderexpired static method)": [[20, "nautilus_trader.model.events.order.OrderExpired.from_dict"]], "from_dict() (orderfilled static method)": [[20, "nautilus_trader.model.events.order.OrderFilled.from_dict"]], "from_dict() (orderinitialized static method)": [[20, "nautilus_trader.model.events.order.OrderInitialized.from_dict"]], "from_dict() (ordermodifyrejected static method)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.from_dict"]], "from_dict() (orderpendingcancel static method)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.from_dict"]], "from_dict() (orderpendingupdate static method)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.from_dict"]], "from_dict() (orderrejected static method)": [[20, "nautilus_trader.model.events.order.OrderRejected.from_dict"]], "from_dict() (ordersubmitted static method)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.from_dict"]], "from_dict() (ordertriggered static method)": [[20, "nautilus_trader.model.events.order.OrderTriggered.from_dict"]], "from_dict() (orderupdated static method)": [[20, "nautilus_trader.model.events.order.OrderUpdated.from_dict"]], "from_dict() (positionchanged static method)": [[20, "nautilus_trader.model.events.position.PositionChanged.from_dict"]], "from_dict() (positionclosed static method)": [[20, "nautilus_trader.model.events.position.PositionClosed.from_dict"]], "from_dict() (positionopened static method)": [[20, "nautilus_trader.model.events.position.PositionOpened.from_dict"]], "id (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.id"]], "id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.id"]], "id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.id"]], "id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.id"]], "id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.id"]], "id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.id"]], "id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.id"]], "id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.id"]], "id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.id"]], "id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.id"]], "id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.id"]], "id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.id"]], "id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.id"]], "id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.id"]], "id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.id"]], "id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.id"]], "id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.id"]], "id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.id"]], "id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.id"]], "id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.id"]], "info (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.info"]], "info (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.info"]], "instrument_id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.instrument_id"]], "instrument_id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.instrument_id"]], "instrument_id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.instrument_id"]], "instrument_id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.instrument_id"]], "instrument_id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.instrument_id"]], "instrument_id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.instrument_id"]], "instrument_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.instrument_id"]], "instrument_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.instrument_id"]], "instrument_id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.instrument_id"]], "instrument_id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.instrument_id"]], "instrument_id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.instrument_id"]], "instrument_id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.instrument_id"]], "instrument_id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.instrument_id"]], "instrument_id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.instrument_id"]], "instrument_id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.instrument_id"]], "instrument_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.instrument_id"]], "instrument_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.instrument_id"]], "instrument_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.instrument_id"]], "instrument_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.instrument_id"]], "is_buy (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.is_buy"]], "is_reported (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.is_reported"]], "is_sell (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.is_sell"]], "last_px (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.last_px"]], "last_px (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.last_px"]], "last_px (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.last_px"]], "last_px (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.last_px"]], "last_px (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.last_px"]], "last_qty (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.last_qty"]], "last_qty (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.last_qty"]], "last_qty (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.last_qty"]], "last_qty (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.last_qty"]], "last_qty (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.last_qty"]], "linked_order_ids (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.linked_order_ids"]], "liquidity_side (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.liquidity_side"]], "margins (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.margins"]], "nautilus_trader.model.events": [[20, "module-nautilus_trader.model.events"]], "nautilus_trader.model.events.account": [[20, "module-nautilus_trader.model.events.account"]], "nautilus_trader.model.events.order": [[20, "module-nautilus_trader.model.events.order"]], "nautilus_trader.model.events.position": [[20, "module-nautilus_trader.model.events.position"]], "net_qty (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.net_qty"]], "net_qty (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.net_qty"]], "net_qty (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.net_qty"]], "net_qty (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.net_qty"]], "opening_order_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.opening_order_id"]], "opening_order_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.opening_order_id"]], "opening_order_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.opening_order_id"]], "opening_order_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.opening_order_id"]], "options (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.options"]], "order_list_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.order_list_id"]], "order_side (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.order_side"]], "order_type (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.order_type"]], "order_type (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.order_type"]], "parent_order_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.parent_order_id"]], "peak_qty (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.peak_qty"]], "peak_qty (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.peak_qty"]], "peak_qty (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.peak_qty"]], "peak_qty (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.peak_qty"]], "position_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.position_id"]], "position_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.position_id"]], "position_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.position_id"]], "position_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.position_id"]], "position_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.position_id"]], "post_only (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.post_only"]], "price (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.price"]], "quantity (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.quantity"]], "quantity (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.quantity"]], "quantity (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.quantity"]], "quantity (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.quantity"]], "quantity (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.quantity"]], "quantity (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.quantity"]], "realized_pnl (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.realized_pnl"]], "realized_pnl (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.realized_pnl"]], "realized_pnl (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.realized_pnl"]], "realized_pnl (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.realized_pnl"]], "realized_return (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.realized_return"]], "realized_return (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.realized_return"]], "realized_return (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.realized_return"]], "realized_return (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.realized_return"]], "reason (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.reason"]], "reason (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.reason"]], "reason (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.reason"]], "reason (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.reason"]], "reconciliation (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.reconciliation"]], "reconciliation (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.reconciliation"]], "reconciliation (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.reconciliation"]], "reconciliation (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.reconciliation"]], "reconciliation (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.reconciliation"]], "reconciliation (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.reconciliation"]], "reconciliation (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.reconciliation"]], "reconciliation (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.reconciliation"]], "reconciliation (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.reconciliation"]], "reconciliation (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.reconciliation"]], "reconciliation (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.reconciliation"]], "reconciliation (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.reconciliation"]], "reconciliation (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.reconciliation"]], "reconciliation (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.reconciliation"]], "reconciliation (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.reconciliation"]], "reduce_only (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.reduce_only"]], "side (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.side"]], "side (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.side"]], "side (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.side"]], "side (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.side"]], "side (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.side"]], "strategy_id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.strategy_id"]], "strategy_id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.strategy_id"]], "strategy_id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.strategy_id"]], "strategy_id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.strategy_id"]], "strategy_id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.strategy_id"]], "strategy_id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.strategy_id"]], "strategy_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.strategy_id"]], "strategy_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.strategy_id"]], "strategy_id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.strategy_id"]], "strategy_id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.strategy_id"]], "strategy_id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.strategy_id"]], "strategy_id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.strategy_id"]], "strategy_id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.strategy_id"]], "strategy_id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.strategy_id"]], "strategy_id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.strategy_id"]], "strategy_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.strategy_id"]], "strategy_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.strategy_id"]], "strategy_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.strategy_id"]], "strategy_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.strategy_id"]], "tags (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.tags"]], "time_in_force (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.time_in_force"]], "to_dict() (accountstate static method)": [[20, "nautilus_trader.model.events.account.AccountState.to_dict"]], "to_dict() (orderaccepted static method)": [[20, "nautilus_trader.model.events.order.OrderAccepted.to_dict"]], "to_dict() (ordercancelrejected static method)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.to_dict"]], "to_dict() (ordercanceled static method)": [[20, "nautilus_trader.model.events.order.OrderCanceled.to_dict"]], "to_dict() (orderdenied static method)": [[20, "nautilus_trader.model.events.order.OrderDenied.to_dict"]], "to_dict() (orderexpired static method)": [[20, "nautilus_trader.model.events.order.OrderExpired.to_dict"]], "to_dict() (orderfilled static method)": [[20, "nautilus_trader.model.events.order.OrderFilled.to_dict"]], "to_dict() (orderinitialized static method)": [[20, "nautilus_trader.model.events.order.OrderInitialized.to_dict"]], "to_dict() (ordermodifyrejected static method)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.to_dict"]], "to_dict() (orderpendingcancel static method)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.to_dict"]], "to_dict() (orderpendingupdate static method)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.to_dict"]], "to_dict() (orderrejected static method)": [[20, "nautilus_trader.model.events.order.OrderRejected.to_dict"]], "to_dict() (ordersubmitted static method)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.to_dict"]], "to_dict() (ordertriggered static method)": [[20, "nautilus_trader.model.events.order.OrderTriggered.to_dict"]], "to_dict() (orderupdated static method)": [[20, "nautilus_trader.model.events.order.OrderUpdated.to_dict"]], "to_dict() (positionchanged static method)": [[20, "nautilus_trader.model.events.position.PositionChanged.to_dict"]], "to_dict() (positionclosed static method)": [[20, "nautilus_trader.model.events.position.PositionClosed.to_dict"]], "to_dict() (positionopened static method)": [[20, "nautilus_trader.model.events.position.PositionOpened.to_dict"]], "trade_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.trade_id"]], "trader_id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.trader_id"]], "trader_id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.trader_id"]], "trader_id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.trader_id"]], "trader_id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.trader_id"]], "trader_id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.trader_id"]], "trader_id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.trader_id"]], "trader_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.trader_id"]], "trader_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.trader_id"]], "trader_id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.trader_id"]], "trader_id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.trader_id"]], "trader_id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.trader_id"]], "trader_id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.trader_id"]], "trader_id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.trader_id"]], "trader_id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.trader_id"]], "trader_id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.trader_id"]], "trader_id (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.trader_id"]], "trader_id (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.trader_id"]], "trader_id (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.trader_id"]], "trader_id (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.trader_id"]], "trigger_price (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.trigger_price"]], "ts_closed (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.ts_closed"]], "ts_closed (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.ts_closed"]], "ts_closed (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.ts_closed"]], "ts_closed (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.ts_closed"]], "ts_event (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.ts_event"]], "ts_event (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.ts_event"]], "ts_event (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.ts_event"]], "ts_event (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.ts_event"]], "ts_event (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.ts_event"]], "ts_event (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.ts_event"]], "ts_event (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.ts_event"]], "ts_event (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.ts_event"]], "ts_event (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.ts_event"]], "ts_event (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.ts_event"]], "ts_event (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.ts_event"]], "ts_event (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.ts_event"]], "ts_event (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.ts_event"]], "ts_event (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.ts_event"]], "ts_event (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.ts_event"]], "ts_event (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.ts_event"]], "ts_event (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.ts_event"]], "ts_event (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.ts_event"]], "ts_event (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.ts_event"]], "ts_event (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.ts_event"]], "ts_init (accountstate attribute)": [[20, "nautilus_trader.model.events.account.AccountState.ts_init"]], "ts_init (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.ts_init"]], "ts_init (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.ts_init"]], "ts_init (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.ts_init"]], "ts_init (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.ts_init"]], "ts_init (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.ts_init"]], "ts_init (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.ts_init"]], "ts_init (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.ts_init"]], "ts_init (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.ts_init"]], "ts_init (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.ts_init"]], "ts_init (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.ts_init"]], "ts_init (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.ts_init"]], "ts_init (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.ts_init"]], "ts_init (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.ts_init"]], "ts_init (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.ts_init"]], "ts_init (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.ts_init"]], "ts_init (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.ts_init"]], "ts_init (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.ts_init"]], "ts_init (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.ts_init"]], "ts_init (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.ts_init"]], "ts_opened (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.ts_opened"]], "ts_opened (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.ts_opened"]], "ts_opened (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.ts_opened"]], "ts_opened (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.ts_opened"]], "unrealized_pnl (positionchanged attribute)": [[20, "nautilus_trader.model.events.position.PositionChanged.unrealized_pnl"]], "unrealized_pnl (positionclosed attribute)": [[20, "nautilus_trader.model.events.position.PositionClosed.unrealized_pnl"]], "unrealized_pnl (positionevent attribute)": [[20, "nautilus_trader.model.events.position.PositionEvent.unrealized_pnl"]], "unrealized_pnl (positionopened attribute)": [[20, "nautilus_trader.model.events.position.PositionOpened.unrealized_pnl"]], "venue_order_id (orderaccepted attribute)": [[20, "nautilus_trader.model.events.order.OrderAccepted.venue_order_id"]], "venue_order_id (ordercancelrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderCancelRejected.venue_order_id"]], "venue_order_id (ordercanceled attribute)": [[20, "nautilus_trader.model.events.order.OrderCanceled.venue_order_id"]], "venue_order_id (orderdenied attribute)": [[20, "nautilus_trader.model.events.order.OrderDenied.venue_order_id"]], "venue_order_id (orderevent attribute)": [[20, "nautilus_trader.model.events.order.OrderEvent.venue_order_id"]], "venue_order_id (orderexpired attribute)": [[20, "nautilus_trader.model.events.order.OrderExpired.venue_order_id"]], "venue_order_id (orderfilled attribute)": [[20, "nautilus_trader.model.events.order.OrderFilled.venue_order_id"]], "venue_order_id (orderinitialized attribute)": [[20, "nautilus_trader.model.events.order.OrderInitialized.venue_order_id"]], "venue_order_id (ordermodifyrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderModifyRejected.venue_order_id"]], "venue_order_id (orderpendingcancel attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingCancel.venue_order_id"]], "venue_order_id (orderpendingupdate attribute)": [[20, "nautilus_trader.model.events.order.OrderPendingUpdate.venue_order_id"]], "venue_order_id (orderrejected attribute)": [[20, "nautilus_trader.model.events.order.OrderRejected.venue_order_id"]], "venue_order_id (ordersubmitted attribute)": [[20, "nautilus_trader.model.events.order.OrderSubmitted.venue_order_id"]], "venue_order_id (ordertriggered attribute)": [[20, "nautilus_trader.model.events.order.OrderTriggered.venue_order_id"]], "venue_order_id (orderupdated attribute)": [[20, "nautilus_trader.model.events.order.OrderUpdated.venue_order_id"]], "accountid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.AccountId"]], "clientid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.ClientId"]], "clientorderid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.ClientOrderId"]], "componentid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.ComponentId"]], "execalgorithmid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.ExecAlgorithmId"]], "identifier (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.Identifier"]], "instrumentid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.InstrumentId"]], "orderlistid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.OrderListId"]], "positionid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.PositionId"]], "strategyid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.StrategyId"]], "symbol (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.Symbol"]], "tradeid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.TradeId"]], "traderid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.TraderId"]], "venue (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.Venue"]], "venueorderid (class in nautilus_trader.model.identifiers)": [[21, "nautilus_trader.model.identifiers.VenueOrderId"]], "from_str() (instrumentid static method)": [[21, "nautilus_trader.model.identifiers.InstrumentId.from_str"]], "get_id() (accountid method)": [[21, "nautilus_trader.model.identifiers.AccountId.get_id"]], "get_issuer() (accountid method)": [[21, "nautilus_trader.model.identifiers.AccountId.get_issuer"]], "get_tag() (strategyid method)": [[21, "nautilus_trader.model.identifiers.StrategyId.get_tag"]], "get_tag() (traderid method)": [[21, "nautilus_trader.model.identifiers.TraderId.get_tag"]], "is_external() (strategyid method)": [[21, "nautilus_trader.model.identifiers.StrategyId.is_external"]], "nautilus_trader.model.identifiers": [[21, "module-nautilus_trader.model.identifiers"]], "symbol (instrumentid attribute)": [[21, "nautilus_trader.model.identifiers.InstrumentId.symbol"]], "value (accountid attribute)": [[21, "nautilus_trader.model.identifiers.AccountId.value"]], "value (clientid attribute)": [[21, "nautilus_trader.model.identifiers.ClientId.value"]], "value (clientorderid attribute)": [[21, "nautilus_trader.model.identifiers.ClientOrderId.value"]], "value (componentid attribute)": [[21, "nautilus_trader.model.identifiers.ComponentId.value"]], "value (execalgorithmid attribute)": [[21, "nautilus_trader.model.identifiers.ExecAlgorithmId.value"]], "value (identifier attribute)": [[21, "nautilus_trader.model.identifiers.Identifier.value"]], "value (instrumentid attribute)": [[21, "nautilus_trader.model.identifiers.InstrumentId.value"]], "value (orderlistid attribute)": [[21, "nautilus_trader.model.identifiers.OrderListId.value"]], "value (positionid attribute)": [[21, "nautilus_trader.model.identifiers.PositionId.value"]], "value (strategyid attribute)": [[21, "nautilus_trader.model.identifiers.StrategyId.value"]], "value (symbol attribute)": [[21, "nautilus_trader.model.identifiers.Symbol.value"]], "value (tradeid attribute)": [[21, "nautilus_trader.model.identifiers.TradeId.value"]], "value (traderid attribute)": [[21, "nautilus_trader.model.identifiers.TraderId.value"]], "value (venue attribute)": [[21, "nautilus_trader.model.identifiers.Venue.value"]], "value (venueorderid attribute)": [[21, "nautilus_trader.model.identifiers.VenueOrderId.value"]], "venue (instrumentid attribute)": [[21, "nautilus_trader.model.identifiers.InstrumentId.venue"]], "nautilus_trader.model": [[22, "module-nautilus_trader.model"]], "bettinginstrument (class in nautilus_trader.model.instruments.betting)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument"]], "cryptofuture (class in nautilus_trader.model.instruments.crypto_future)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture"]], "cryptoperpetual (class in nautilus_trader.model.instruments.crypto_perpetual)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual"]], "currencypair (class in nautilus_trader.model.instruments.currency_pair)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair"]], "equity (class in nautilus_trader.model.instruments.equity)": [[23, "nautilus_trader.model.instruments.equity.Equity"]], "future (class in nautilus_trader.model.instruments.future)": [[23, "nautilus_trader.model.instruments.future.Future"]], "instrument (class in nautilus_trader.model.instruments.base)": [[23, "nautilus_trader.model.instruments.base.Instrument"]], "option (class in nautilus_trader.model.instruments.option)": [[23, "nautilus_trader.model.instruments.option.Option"]], "asset_class (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.asset_class"]], "asset_class (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.asset_class"]], "asset_class (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.asset_class"]], "asset_class (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.asset_class"]], "asset_class (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.asset_class"]], "asset_class (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.asset_class"]], "asset_class (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.asset_class"]], "asset_class (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.asset_class"]], "asset_type (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.asset_type"]], "asset_type (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.asset_type"]], "asset_type (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.asset_type"]], "asset_type (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.asset_type"]], "asset_type (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.asset_type"]], "asset_type (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.asset_type"]], "asset_type (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.asset_type"]], "asset_type (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.asset_type"]], "base_currency (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.base_currency"]], "base_currency (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.base_currency"]], "base_from_dict() (bettinginstrument static method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.base_from_dict"]], "base_from_dict() (cryptofuture static method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.base_from_dict"]], "base_from_dict() (cryptoperpetual static method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.base_from_dict"]], "base_from_dict() (currencypair static method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.base_from_dict"]], "base_from_dict() (equity static method)": [[23, "nautilus_trader.model.instruments.equity.Equity.base_from_dict"]], "base_from_dict() (future static method)": [[23, "nautilus_trader.model.instruments.future.Future.base_from_dict"]], "base_from_dict() (instrument static method)": [[23, "nautilus_trader.model.instruments.base.Instrument.base_from_dict"]], "base_from_dict() (option static method)": [[23, "nautilus_trader.model.instruments.option.Option.base_from_dict"]], "base_to_dict() (bettinginstrument static method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.base_to_dict"]], "base_to_dict() (cryptofuture static method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.base_to_dict"]], "base_to_dict() (cryptoperpetual static method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.base_to_dict"]], "base_to_dict() (currencypair static method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.base_to_dict"]], "base_to_dict() (equity static method)": [[23, "nautilus_trader.model.instruments.equity.Equity.base_to_dict"]], "base_to_dict() (future static method)": [[23, "nautilus_trader.model.instruments.future.Future.base_to_dict"]], "base_to_dict() (instrument static method)": [[23, "nautilus_trader.model.instruments.base.Instrument.base_to_dict"]], "base_to_dict() (option static method)": [[23, "nautilus_trader.model.instruments.option.Option.base_to_dict"]], "expiry_date (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.expiry_date"]], "expiry_date (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.expiry_date"]], "from_dict() (bettinginstrument static method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.from_dict"]], "from_dict() (cryptofuture static method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.from_dict"]], "from_dict() (cryptoperpetual static method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.from_dict"]], "from_dict() (currencypair static method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.from_dict"]], "from_dict() (equity static method)": [[23, "nautilus_trader.model.instruments.equity.Equity.from_dict"]], "from_dict() (future static method)": [[23, "nautilus_trader.model.instruments.future.Future.from_dict"]], "from_dict() (option static method)": [[23, "nautilus_trader.model.instruments.option.Option.from_dict"]], "fully_qualified_name() (bettinginstrument class method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.fully_qualified_name"]], "fully_qualified_name() (cryptofuture class method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.fully_qualified_name"]], "fully_qualified_name() (cryptoperpetual class method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.fully_qualified_name"]], "fully_qualified_name() (currencypair class method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.fully_qualified_name"]], "fully_qualified_name() (equity class method)": [[23, "nautilus_trader.model.instruments.equity.Equity.fully_qualified_name"]], "fully_qualified_name() (future class method)": [[23, "nautilus_trader.model.instruments.future.Future.fully_qualified_name"]], "fully_qualified_name() (instrument class method)": [[23, "nautilus_trader.model.instruments.base.Instrument.fully_qualified_name"]], "fully_qualified_name() (option class method)": [[23, "nautilus_trader.model.instruments.option.Option.fully_qualified_name"]], "get_base_currency() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.get_base_currency"]], "get_base_currency() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.get_base_currency"]], "get_base_currency() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.get_base_currency"]], "get_base_currency() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.get_base_currency"]], "get_base_currency() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.get_base_currency"]], "get_base_currency() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.get_base_currency"]], "get_base_currency() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.get_base_currency"]], "get_base_currency() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.get_base_currency"]], "get_settlement_currency() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.get_settlement_currency"]], "get_settlement_currency() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.get_settlement_currency"]], "get_settlement_currency() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.get_settlement_currency"]], "get_settlement_currency() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.get_settlement_currency"]], "get_settlement_currency() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.get_settlement_currency"]], "get_settlement_currency() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.get_settlement_currency"]], "get_settlement_currency() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.get_settlement_currency"]], "get_settlement_currency() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.get_settlement_currency"]], "id (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.id"]], "id (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.id"]], "id (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.id"]], "id (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.id"]], "id (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.id"]], "id (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.id"]], "id (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.id"]], "id (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.id"]], "info (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.info"]], "info (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.info"]], "info (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.info"]], "info (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.info"]], "info (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.info"]], "info (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.info"]], "info (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.info"]], "info (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.info"]], "is_inverse (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.is_inverse"]], "is_inverse (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.is_inverse"]], "is_inverse (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.is_inverse"]], "is_inverse (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.is_inverse"]], "is_inverse (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.is_inverse"]], "is_inverse (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.is_inverse"]], "is_inverse (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.is_inverse"]], "is_inverse (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.is_inverse"]], "is_quanto (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.is_quanto"]], "lot_size (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.lot_size"]], "lot_size (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.lot_size"]], "lot_size (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.lot_size"]], "lot_size (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.lot_size"]], "lot_size (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.lot_size"]], "lot_size (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.lot_size"]], "lot_size (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.lot_size"]], "lot_size (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.lot_size"]], "make_price() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.make_price"]], "make_price() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.make_price"]], "make_price() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.make_price"]], "make_price() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.make_price"]], "make_price() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.make_price"]], "make_price() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.make_price"]], "make_price() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.make_price"]], "make_price() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.make_price"]], "make_qty() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.make_qty"]], "make_qty() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.make_qty"]], "make_qty() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.make_qty"]], "make_qty() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.make_qty"]], "make_qty() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.make_qty"]], "make_qty() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.make_qty"]], "make_qty() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.make_qty"]], "make_qty() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.make_qty"]], "make_symbol() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.make_symbol"]], "maker_fee (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.maker_fee"]], "maker_fee (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.maker_fee"]], "maker_fee (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.maker_fee"]], "maker_fee (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.maker_fee"]], "maker_fee (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.maker_fee"]], "maker_fee (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.maker_fee"]], "maker_fee (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.maker_fee"]], "maker_fee (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.maker_fee"]], "margin_init (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.margin_init"]], "margin_init (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.margin_init"]], "margin_init (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.margin_init"]], "margin_init (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.margin_init"]], "margin_init (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.margin_init"]], "margin_init (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.margin_init"]], "margin_init (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.margin_init"]], "margin_init (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.margin_init"]], "margin_maint (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.margin_maint"]], "margin_maint (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.margin_maint"]], "margin_maint (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.margin_maint"]], "margin_maint (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.margin_maint"]], "margin_maint (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.margin_maint"]], "margin_maint (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.margin_maint"]], "margin_maint (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.margin_maint"]], "margin_maint (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.margin_maint"]], "max_notional (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.max_notional"]], "max_notional (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.max_notional"]], "max_notional (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.max_notional"]], "max_notional (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.max_notional"]], "max_notional (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.max_notional"]], "max_notional (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.max_notional"]], "max_notional (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.max_notional"]], "max_notional (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.max_notional"]], "max_price (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.max_price"]], "max_price (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.max_price"]], "max_price (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.max_price"]], "max_price (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.max_price"]], "max_price (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.max_price"]], "max_price (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.max_price"]], "max_price (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.max_price"]], "max_price (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.max_price"]], "max_quantity (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.max_quantity"]], "max_quantity (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.max_quantity"]], "max_quantity (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.max_quantity"]], "max_quantity (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.max_quantity"]], "max_quantity (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.max_quantity"]], "max_quantity (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.max_quantity"]], "max_quantity (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.max_quantity"]], "max_quantity (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.max_quantity"]], "min_notional (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.min_notional"]], "min_notional (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.min_notional"]], "min_notional (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.min_notional"]], "min_notional (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.min_notional"]], "min_notional (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.min_notional"]], "min_notional (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.min_notional"]], "min_notional (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.min_notional"]], "min_notional (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.min_notional"]], "min_price (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.min_price"]], "min_price (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.min_price"]], "min_price (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.min_price"]], "min_price (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.min_price"]], "min_price (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.min_price"]], "min_price (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.min_price"]], "min_price (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.min_price"]], "min_price (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.min_price"]], "min_quantity (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.min_quantity"]], "min_quantity (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.min_quantity"]], "min_quantity (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.min_quantity"]], "min_quantity (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.min_quantity"]], "min_quantity (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.min_quantity"]], "min_quantity (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.min_quantity"]], "min_quantity (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.min_quantity"]], "min_quantity (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.min_quantity"]], "multiplier (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.multiplier"]], "multiplier (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.multiplier"]], "multiplier (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.multiplier"]], "multiplier (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.multiplier"]], "multiplier (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.multiplier"]], "multiplier (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.multiplier"]], "multiplier (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.multiplier"]], "multiplier (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.multiplier"]], "native_symbol (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.native_symbol"]], "native_symbol (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.native_symbol"]], "native_symbol (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.native_symbol"]], "native_symbol (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.native_symbol"]], "native_symbol (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.native_symbol"]], "native_symbol (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.native_symbol"]], "native_symbol (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.native_symbol"]], "native_symbol (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.native_symbol"]], "nautilus_trader.model.instruments": [[23, "module-nautilus_trader.model.instruments"]], "nautilus_trader.model.instruments.base": [[23, "module-nautilus_trader.model.instruments.base"]], "nautilus_trader.model.instruments.betting": [[23, "module-nautilus_trader.model.instruments.betting"]], "nautilus_trader.model.instruments.crypto_future": [[23, "module-nautilus_trader.model.instruments.crypto_future"]], "nautilus_trader.model.instruments.crypto_perpetual": [[23, "module-nautilus_trader.model.instruments.crypto_perpetual"]], "nautilus_trader.model.instruments.currency_pair": [[23, "module-nautilus_trader.model.instruments.currency_pair"]], "nautilus_trader.model.instruments.equity": [[23, "module-nautilus_trader.model.instruments.equity"]], "nautilus_trader.model.instruments.future": [[23, "module-nautilus_trader.model.instruments.future"]], "nautilus_trader.model.instruments.option": [[23, "module-nautilus_trader.model.instruments.option"]], "next_ask_price() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.next_ask_price"]], "next_ask_price() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.next_ask_price"]], "next_ask_price() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.next_ask_price"]], "next_ask_price() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.next_ask_price"]], "next_ask_price() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.next_ask_price"]], "next_ask_price() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.next_ask_price"]], "next_ask_price() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.next_ask_price"]], "next_ask_price() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.next_ask_price"]], "next_bid_price() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.next_bid_price"]], "next_bid_price() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.next_bid_price"]], "next_bid_price() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.next_bid_price"]], "next_bid_price() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.next_bid_price"]], "next_bid_price() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.next_bid_price"]], "next_bid_price() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.next_bid_price"]], "next_bid_price() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.next_bid_price"]], "next_bid_price() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.next_bid_price"]], "notional_value() (bettinginstrument method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.notional_value"]], "notional_value() (cryptofuture method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.notional_value"]], "notional_value() (cryptoperpetual method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.notional_value"]], "notional_value() (currencypair method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.notional_value"]], "notional_value() (equity method)": [[23, "nautilus_trader.model.instruments.equity.Equity.notional_value"]], "notional_value() (future method)": [[23, "nautilus_trader.model.instruments.future.Future.notional_value"]], "notional_value() (instrument method)": [[23, "nautilus_trader.model.instruments.base.Instrument.notional_value"]], "notional_value() (option method)": [[23, "nautilus_trader.model.instruments.option.Option.notional_value"]], "price_increment (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.price_increment"]], "price_increment (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.price_increment"]], "price_increment (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.price_increment"]], "price_increment (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.price_increment"]], "price_increment (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.price_increment"]], "price_increment (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.price_increment"]], "price_increment (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.price_increment"]], "price_increment (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.price_increment"]], "price_precision (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.price_precision"]], "price_precision (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.price_precision"]], "price_precision (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.price_precision"]], "price_precision (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.price_precision"]], "price_precision (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.price_precision"]], "price_precision (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.price_precision"]], "price_precision (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.price_precision"]], "price_precision (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.price_precision"]], "quote_currency (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.quote_currency"]], "quote_currency (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.quote_currency"]], "quote_currency (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.quote_currency"]], "quote_currency (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.quote_currency"]], "quote_currency (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.quote_currency"]], "quote_currency (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.quote_currency"]], "quote_currency (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.quote_currency"]], "quote_currency (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.quote_currency"]], "settlement_currency (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.settlement_currency"]], "settlement_currency (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.settlement_currency"]], "size_increment (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.size_increment"]], "size_increment (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.size_increment"]], "size_increment (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.size_increment"]], "size_increment (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.size_increment"]], "size_increment (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.size_increment"]], "size_increment (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.size_increment"]], "size_increment (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.size_increment"]], "size_increment (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.size_increment"]], "size_precision (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.size_precision"]], "size_precision (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.size_precision"]], "size_precision (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.size_precision"]], "size_precision (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.size_precision"]], "size_precision (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.size_precision"]], "size_precision (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.size_precision"]], "size_precision (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.size_precision"]], "size_precision (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.size_precision"]], "symbol (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.symbol"]], "symbol (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.symbol"]], "symbol (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.symbol"]], "symbol (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.symbol"]], "symbol (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.symbol"]], "symbol (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.symbol"]], "symbol (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.symbol"]], "symbol (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.symbol"]], "taker_fee (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.taker_fee"]], "taker_fee (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.taker_fee"]], "taker_fee (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.taker_fee"]], "taker_fee (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.taker_fee"]], "taker_fee (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.taker_fee"]], "taker_fee (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.taker_fee"]], "taker_fee (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.taker_fee"]], "taker_fee (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.taker_fee"]], "tick_scheme_name (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.tick_scheme_name"]], "tick_scheme_name (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.tick_scheme_name"]], "tick_scheme_name (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.tick_scheme_name"]], "tick_scheme_name (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.tick_scheme_name"]], "tick_scheme_name (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.tick_scheme_name"]], "tick_scheme_name (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.tick_scheme_name"]], "tick_scheme_name (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.tick_scheme_name"]], "tick_scheme_name (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.tick_scheme_name"]], "to_dict() (bettinginstrument static method)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.to_dict"]], "to_dict() (cryptofuture static method)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.to_dict"]], "to_dict() (cryptoperpetual static method)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.to_dict"]], "to_dict() (currencypair static method)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.to_dict"]], "to_dict() (equity static method)": [[23, "nautilus_trader.model.instruments.equity.Equity.to_dict"]], "to_dict() (future static method)": [[23, "nautilus_trader.model.instruments.future.Future.to_dict"]], "to_dict() (option static method)": [[23, "nautilus_trader.model.instruments.option.Option.to_dict"]], "ts_event (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.ts_event"]], "ts_event (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.ts_event"]], "ts_event (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.ts_event"]], "ts_event (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.ts_event"]], "ts_event (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.ts_event"]], "ts_event (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.ts_event"]], "ts_event (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.ts_event"]], "ts_event (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.ts_event"]], "ts_init (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.ts_init"]], "ts_init (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.ts_init"]], "ts_init (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.ts_init"]], "ts_init (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.ts_init"]], "ts_init (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.ts_init"]], "ts_init (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.ts_init"]], "ts_init (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.ts_init"]], "ts_init (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.ts_init"]], "underlying (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.underlying"]], "underlying (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.underlying"]], "venue (bettinginstrument attribute)": [[23, "nautilus_trader.model.instruments.betting.BettingInstrument.venue"]], "venue (cryptofuture attribute)": [[23, "nautilus_trader.model.instruments.crypto_future.CryptoFuture.venue"]], "venue (cryptoperpetual attribute)": [[23, "nautilus_trader.model.instruments.crypto_perpetual.CryptoPerpetual.venue"]], "venue (currencypair attribute)": [[23, "nautilus_trader.model.instruments.currency_pair.CurrencyPair.venue"]], "venue (equity attribute)": [[23, "nautilus_trader.model.instruments.equity.Equity.venue"]], "venue (future attribute)": [[23, "nautilus_trader.model.instruments.future.Future.venue"]], "venue (instrument attribute)": [[23, "nautilus_trader.model.instruments.base.Instrument.venue"]], "venue (option attribute)": [[23, "nautilus_trader.model.instruments.option.Option.venue"]], "accountbalance (class in nautilus_trader.model.objects)": [[24, "nautilus_trader.model.objects.AccountBalance"]], "marginbalance (class in nautilus_trader.model.objects)": [[24, "nautilus_trader.model.objects.MarginBalance"]], "money (class in nautilus_trader.model.objects)": [[24, "nautilus_trader.model.objects.Money"]], "price (class in nautilus_trader.model.objects)": [[24, "nautilus_trader.model.objects.Price"]], "quantity (class in nautilus_trader.model.objects)": [[24, "nautilus_trader.model.objects.Quantity"]], "as_decimal() (money method)": [[24, "nautilus_trader.model.objects.Money.as_decimal"]], "as_decimal() (price method)": [[24, "nautilus_trader.model.objects.Price.as_decimal"]], "as_decimal() (quantity method)": [[24, "nautilus_trader.model.objects.Quantity.as_decimal"]], "as_double() (money method)": [[24, "nautilus_trader.model.objects.Money.as_double"]], "as_double() (price method)": [[24, "nautilus_trader.model.objects.Price.as_double"]], "as_double() (quantity method)": [[24, "nautilus_trader.model.objects.Quantity.as_double"]], "currency (accountbalance attribute)": [[24, "nautilus_trader.model.objects.AccountBalance.currency"]], "currency (marginbalance attribute)": [[24, "nautilus_trader.model.objects.MarginBalance.currency"]], "free (accountbalance attribute)": [[24, "nautilus_trader.model.objects.AccountBalance.free"]], "from_dict() (accountbalance static method)": [[24, "nautilus_trader.model.objects.AccountBalance.from_dict"]], "from_dict() (marginbalance static method)": [[24, "nautilus_trader.model.objects.MarginBalance.from_dict"]], "from_int() (price static method)": [[24, "nautilus_trader.model.objects.Price.from_int"]], "from_int() (quantity static method)": [[24, "nautilus_trader.model.objects.Quantity.from_int"]], "from_raw() (money static method)": [[24, "nautilus_trader.model.objects.Money.from_raw"]], "from_raw() (price static method)": [[24, "nautilus_trader.model.objects.Price.from_raw"]], "from_raw() (quantity static method)": [[24, "nautilus_trader.model.objects.Quantity.from_raw"]], "from_str() (money static method)": [[24, "nautilus_trader.model.objects.Money.from_str"]], "from_str() (price static method)": [[24, "nautilus_trader.model.objects.Price.from_str"]], "from_str() (quantity static method)": [[24, "nautilus_trader.model.objects.Quantity.from_str"]], "initial (marginbalance attribute)": [[24, "nautilus_trader.model.objects.MarginBalance.initial"]], "instrument_id (marginbalance attribute)": [[24, "nautilus_trader.model.objects.MarginBalance.instrument_id"]], "locked (accountbalance attribute)": [[24, "nautilus_trader.model.objects.AccountBalance.locked"]], "maintenance (marginbalance attribute)": [[24, "nautilus_trader.model.objects.MarginBalance.maintenance"]], "nautilus_trader.model.objects": [[24, "module-nautilus_trader.model.objects"]], "precision (price attribute)": [[24, "nautilus_trader.model.objects.Price.precision"]], "precision (quantity attribute)": [[24, "nautilus_trader.model.objects.Quantity.precision"]], "raw_to_f64() (price static method)": [[24, "nautilus_trader.model.objects.Price.raw_to_f64"]], "raw_to_f64() (quantity static method)": [[24, "nautilus_trader.model.objects.Quantity.raw_to_f64"]], "to_dict() (accountbalance method)": [[24, "nautilus_trader.model.objects.AccountBalance.to_dict"]], "to_dict() (marginbalance method)": [[24, "nautilus_trader.model.objects.MarginBalance.to_dict"]], "to_str() (money method)": [[24, "nautilus_trader.model.objects.Money.to_str"]], "to_str() (quantity method)": [[24, "nautilus_trader.model.objects.Quantity.to_str"]], "total (accountbalance attribute)": [[24, "nautilus_trader.model.objects.AccountBalance.total"]], "zero() (quantity static method)": [[24, "nautilus_trader.model.objects.Quantity.zero"]], "bookintegrityerror": [[25, "nautilus_trader.model.orderbook.error.BookIntegrityError"]], "bookorder (class in nautilus_trader.model.orderbook.data)": [[25, "nautilus_trader.model.orderbook.data.BookOrder"]], "l1orderbook (class in nautilus_trader.model.orderbook.book)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook"]], "l2orderbook (class in nautilus_trader.model.orderbook.book)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook"]], "l3orderbook (class in nautilus_trader.model.orderbook.book)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook"]], "ladder (class in nautilus_trader.model.orderbook.ladder)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder"]], "level (class in nautilus_trader.model.orderbook.level)": [[25, "nautilus_trader.model.orderbook.level.Level"]], "orderbook (class in nautilus_trader.model.orderbook.book)": [[25, "nautilus_trader.model.orderbook.book.OrderBook"]], "orderbookdata (class in nautilus_trader.model.orderbook.data)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData"]], "orderbookdelta (class in nautilus_trader.model.orderbook.data)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta"]], "orderbookdeltas (class in nautilus_trader.model.orderbook.data)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas"]], "orderbooksnapshot (class in nautilus_trader.model.orderbook.data)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot"]], "simulatedl1orderbook (class in nautilus_trader.model.orderbook.simulated)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook"]], "simulatedl2orderbook (class in nautilus_trader.model.orderbook.simulated)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook"]], "simulatedl3orderbook (class in nautilus_trader.model.orderbook.simulated)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook"]], "action (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.action"]], "add() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.add"]], "add() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.add"]], "add() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.add"]], "add() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.add"]], "add() (level method)": [[25, "nautilus_trader.model.orderbook.level.Level.add"]], "add() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.add"]], "add() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.add"]], "add() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.add"]], "add() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.add"]], "add_note() (bookintegrityerror method)": [[25, "nautilus_trader.model.orderbook.error.BookIntegrityError.add_note"]], "apply() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.apply"]], "apply() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.apply"]], "apply() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.apply"]], "apply() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.apply"]], "apply() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.apply"]], "apply() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.apply"]], "apply() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.apply"]], "apply_delta() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.apply_delta"]], "apply_delta() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.apply_delta"]], "apply_delta() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.apply_delta"]], "apply_delta() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.apply_delta"]], "apply_delta() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.apply_delta"]], "apply_delta() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.apply_delta"]], "apply_delta() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.apply_delta"]], "apply_deltas() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.apply_deltas"]], "apply_deltas() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.apply_deltas"]], "apply_deltas() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.apply_deltas"]], "apply_deltas() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.apply_deltas"]], "apply_deltas() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.apply_deltas"]], "apply_deltas() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.apply_deltas"]], "apply_deltas() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.apply_deltas"]], "apply_snapshot() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.apply_snapshot"]], "apply_snapshot() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.apply_snapshot"]], "apply_snapshot() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.apply_snapshot"]], "apply_snapshot() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.apply_snapshot"]], "apply_snapshot() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.apply_snapshot"]], "apply_snapshot() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.apply_snapshot"]], "apply_snapshot() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.apply_snapshot"]], "asks (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.asks"]], "asks (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.asks"]], "asks (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.asks"]], "asks (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.asks"]], "asks (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.asks"]], "asks (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.asks"]], "asks (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.asks"]], "asks (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.asks"]], "best_ask_level() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.best_ask_level"]], "best_ask_level() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.best_ask_level"]], "best_ask_level() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.best_ask_level"]], "best_ask_level() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.best_ask_level"]], "best_ask_level() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.best_ask_level"]], "best_ask_level() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.best_ask_level"]], "best_ask_level() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.best_ask_level"]], "best_ask_price() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.best_ask_price"]], "best_ask_price() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.best_ask_price"]], "best_ask_price() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.best_ask_price"]], "best_ask_price() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.best_ask_price"]], "best_ask_price() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.best_ask_price"]], "best_ask_price() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.best_ask_price"]], "best_ask_price() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.best_ask_price"]], "best_ask_qty() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.best_ask_qty"]], "best_ask_qty() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.best_ask_qty"]], "best_ask_qty() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.best_ask_qty"]], "best_ask_qty() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.best_ask_qty"]], "best_ask_qty() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.best_ask_qty"]], "best_ask_qty() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.best_ask_qty"]], "best_ask_qty() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.best_ask_qty"]], "best_bid_level() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.best_bid_level"]], "best_bid_level() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.best_bid_level"]], "best_bid_level() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.best_bid_level"]], "best_bid_level() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.best_bid_level"]], "best_bid_level() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.best_bid_level"]], "best_bid_level() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.best_bid_level"]], "best_bid_level() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.best_bid_level"]], "best_bid_price() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.best_bid_price"]], "best_bid_price() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.best_bid_price"]], "best_bid_price() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.best_bid_price"]], "best_bid_price() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.best_bid_price"]], "best_bid_price() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.best_bid_price"]], "best_bid_price() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.best_bid_price"]], "best_bid_price() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.best_bid_price"]], "best_bid_qty() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.best_bid_qty"]], "best_bid_qty() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.best_bid_qty"]], "best_bid_qty() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.best_bid_qty"]], "best_bid_qty() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.best_bid_qty"]], "best_bid_qty() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.best_bid_qty"]], "best_bid_qty() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.best_bid_qty"]], "best_bid_qty() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.best_bid_qty"]], "bids (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.bids"]], "bids (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.bids"]], "bids (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.bids"]], "bids (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.bids"]], "bids (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.bids"]], "bids (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.bids"]], "bids (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.bids"]], "bids (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.bids"]], "book_type (orderbookdata attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData.book_type"]], "book_type (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.book_type"]], "book_type (orderbookdeltas attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.book_type"]], "book_type (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.book_type"]], "bulk_add() (level method)": [[25, "nautilus_trader.model.orderbook.level.Level.bulk_add"]], "check_integrity() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.check_integrity"]], "check_integrity() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.check_integrity"]], "check_integrity() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.check_integrity"]], "check_integrity() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.check_integrity"]], "check_integrity() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.check_integrity"]], "check_integrity() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.check_integrity"]], "check_integrity() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.check_integrity"]], "clear() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.clear"]], "clear() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.clear"]], "clear() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.clear"]], "clear() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.clear"]], "clear() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.clear"]], "clear() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.clear"]], "clear() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.clear"]], "clear_asks() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.clear_asks"]], "clear_asks() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.clear_asks"]], "clear_asks() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.clear_asks"]], "clear_asks() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.clear_asks"]], "clear_asks() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.clear_asks"]], "clear_asks() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.clear_asks"]], "clear_asks() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.clear_asks"]], "clear_bids() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.clear_bids"]], "clear_bids() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.clear_bids"]], "clear_bids() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.clear_bids"]], "clear_bids() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.clear_bids"]], "clear_bids() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.clear_bids"]], "clear_bids() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.clear_bids"]], "clear_bids() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.clear_bids"]], "count (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.count"]], "count (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.count"]], "count (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.count"]], "count (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.count"]], "count (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.count"]], "count (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.count"]], "count (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.count"]], "create() (l1orderbook static method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.create"]], "create() (l2orderbook static method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.create"]], "create() (l3orderbook static method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.create"]], "create() (orderbook static method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.create"]], "create() (simulatedl1orderbook static method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.create"]], "create() (simulatedl2orderbook static method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.create"]], "create() (simulatedl3orderbook static method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.create"]], "delete() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.delete"]], "delete() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.delete"]], "delete() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.delete"]], "delete() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.delete"]], "delete() (level method)": [[25, "nautilus_trader.model.orderbook.level.Level.delete"]], "delete() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.delete"]], "delete() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.delete"]], "delete() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.delete"]], "delete() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.delete"]], "deltas (orderbookdeltas attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.deltas"]], "depth() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.depth"]], "exposure() (bookorder method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.exposure"]], "exposure() (level method)": [[25, "nautilus_trader.model.orderbook.level.Level.exposure"]], "exposures() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.exposures"]], "from_dict() (bookorder static method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.from_dict"]], "from_dict() (orderbookdelta static method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.from_dict"]], "from_dict() (orderbookdeltas static method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.from_dict"]], "from_dict() (orderbooksnapshot static method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.from_dict"]], "fully_qualified_name() (orderbookdata class method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData.fully_qualified_name"]], "fully_qualified_name() (orderbookdelta class method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.fully_qualified_name"]], "fully_qualified_name() (orderbookdeltas class method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.fully_qualified_name"]], "fully_qualified_name() (orderbooksnapshot class method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.fully_qualified_name"]], "get_price_for_quote_volume() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.get_price_for_quote_volume"]], "get_price_for_quote_volume() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.get_price_for_quote_volume"]], "get_price_for_quote_volume() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.get_price_for_quote_volume"]], "get_price_for_quote_volume() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.get_price_for_quote_volume"]], "get_price_for_quote_volume() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.get_price_for_quote_volume"]], "get_price_for_quote_volume() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.get_price_for_quote_volume"]], "get_price_for_quote_volume() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.get_price_for_quote_volume"]], "get_price_for_volume() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.get_price_for_volume"]], "get_price_for_volume() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.get_price_for_volume"]], "get_price_for_volume() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.get_price_for_volume"]], "get_price_for_volume() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.get_price_for_volume"]], "get_price_for_volume() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.get_price_for_volume"]], "get_price_for_volume() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.get_price_for_volume"]], "get_price_for_volume() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.get_price_for_volume"]], "get_quote_volume_for_price() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.get_quote_volume_for_price"]], "get_quote_volume_for_price() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.get_quote_volume_for_price"]], "get_quote_volume_for_price() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.get_quote_volume_for_price"]], "get_quote_volume_for_price() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.get_quote_volume_for_price"]], "get_quote_volume_for_price() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.get_quote_volume_for_price"]], "get_quote_volume_for_price() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.get_quote_volume_for_price"]], "get_quote_volume_for_price() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.get_quote_volume_for_price"]], "get_volume_for_price() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.get_volume_for_price"]], "get_volume_for_price() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.get_volume_for_price"]], "get_volume_for_price() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.get_volume_for_price"]], "get_volume_for_price() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.get_volume_for_price"]], "get_volume_for_price() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.get_volume_for_price"]], "get_volume_for_price() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.get_volume_for_price"]], "get_volume_for_price() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.get_volume_for_price"]], "get_vwap_for_volume() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.get_vwap_for_volume"]], "get_vwap_for_volume() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.get_vwap_for_volume"]], "get_vwap_for_volume() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.get_vwap_for_volume"]], "get_vwap_for_volume() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.get_vwap_for_volume"]], "get_vwap_for_volume() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.get_vwap_for_volume"]], "get_vwap_for_volume() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.get_vwap_for_volume"]], "get_vwap_for_volume() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.get_vwap_for_volume"]], "id (bookorder attribute)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.id"]], "instrument_id (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.instrument_id"]], "instrument_id (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.instrument_id"]], "instrument_id (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.instrument_id"]], "instrument_id (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.instrument_id"]], "instrument_id (orderbookdata attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData.instrument_id"]], "instrument_id (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.instrument_id"]], "instrument_id (orderbookdeltas attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.instrument_id"]], "instrument_id (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.instrument_id"]], "instrument_id (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.instrument_id"]], "instrument_id (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.instrument_id"]], "instrument_id (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.instrument_id"]], "is_reversed (ladder attribute)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.is_reversed"]], "last_update_id (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.last_update_id"]], "last_update_id (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.last_update_id"]], "last_update_id (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.last_update_id"]], "last_update_id (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.last_update_id"]], "last_update_id (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.last_update_id"]], "last_update_id (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.last_update_id"]], "last_update_id (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.last_update_id"]], "levels (ladder attribute)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.levels"]], "midpoint() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.midpoint"]], "midpoint() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.midpoint"]], "midpoint() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.midpoint"]], "midpoint() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.midpoint"]], "midpoint() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.midpoint"]], "midpoint() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.midpoint"]], "midpoint() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.midpoint"]], "nautilus_trader.model.orderbook": [[25, "module-nautilus_trader.model.orderbook"]], "nautilus_trader.model.orderbook.book": [[25, "module-nautilus_trader.model.orderbook.book"]], "nautilus_trader.model.orderbook.data": [[25, "module-nautilus_trader.model.orderbook.data"]], "nautilus_trader.model.orderbook.error": [[25, "module-nautilus_trader.model.orderbook.error"]], "nautilus_trader.model.orderbook.ladder": [[25, "module-nautilus_trader.model.orderbook.ladder"]], "nautilus_trader.model.orderbook.level": [[25, "module-nautilus_trader.model.orderbook.level"]], "nautilus_trader.model.orderbook.simulated": [[25, "module-nautilus_trader.model.orderbook.simulated"]], "order (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.order"]], "orders (level attribute)": [[25, "nautilus_trader.model.orderbook.level.Level.orders"]], "pprint() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.pprint"]], "pprint() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.pprint"]], "pprint() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.pprint"]], "pprint() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.pprint"]], "pprint() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.pprint"]], "pprint() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.pprint"]], "pprint() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.pprint"]], "price (bookorder attribute)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.price"]], "price (level attribute)": [[25, "nautilus_trader.model.orderbook.level.Level.price"]], "price_precision (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.price_precision"]], "price_precision (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.price_precision"]], "price_precision (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.price_precision"]], "price_precision (ladder attribute)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.price_precision"]], "price_precision (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.price_precision"]], "price_precision (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.price_precision"]], "price_precision (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.price_precision"]], "price_precision (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.price_precision"]], "prices() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.prices"]], "side (bookorder attribute)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.side"]], "signed_size() (bookorder method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.signed_size"]], "simulate_order_fills() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.simulate_order_fills"]], "size (bookorder attribute)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.size"]], "size_precision (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.size_precision"]], "size_precision (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.size_precision"]], "size_precision (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.size_precision"]], "size_precision (ladder attribute)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.size_precision"]], "size_precision (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.size_precision"]], "size_precision (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.size_precision"]], "size_precision (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.size_precision"]], "size_precision (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.size_precision"]], "spread() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.spread"]], "spread() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.spread"]], "spread() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.spread"]], "spread() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.spread"]], "spread() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.spread"]], "spread() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.spread"]], "spread() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.spread"]], "to_dict() (bookorder static method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.to_dict"]], "to_dict() (orderbookdelta static method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.to_dict"]], "to_dict() (orderbookdeltas static method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.to_dict"]], "to_dict() (orderbooksnapshot static method)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.to_dict"]], "top() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.top"]], "trade_side() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.trade_side"]], "trade_side() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.trade_side"]], "trade_side() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.trade_side"]], "trade_side() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.trade_side"]], "trade_side() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.trade_side"]], "trade_side() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.trade_side"]], "trade_side() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.trade_side"]], "ts_event (orderbookdata attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData.ts_event"]], "ts_event (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.ts_event"]], "ts_event (orderbookdeltas attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.ts_event"]], "ts_event (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.ts_event"]], "ts_init (orderbookdata attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData.ts_init"]], "ts_init (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.ts_init"]], "ts_init (orderbookdeltas attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.ts_init"]], "ts_init (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.ts_init"]], "ts_last (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.ts_last"]], "ts_last (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.ts_last"]], "ts_last (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.ts_last"]], "ts_last (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.ts_last"]], "ts_last (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.ts_last"]], "ts_last (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.ts_last"]], "ts_last (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.ts_last"]], "type (l1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.type"]], "type (l2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.type"]], "type (l3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.type"]], "type (orderbook attribute)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.type"]], "type (simulatedl1orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.type"]], "type (simulatedl2orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.type"]], "type (simulatedl3orderbook attribute)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.type"]], "update() (l1orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L1OrderBook.update"]], "update() (l2orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L2OrderBook.update"]], "update() (l3orderbook method)": [[25, "nautilus_trader.model.orderbook.book.L3OrderBook.update"]], "update() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.update"]], "update() (level method)": [[25, "nautilus_trader.model.orderbook.level.Level.update"]], "update() (orderbook method)": [[25, "nautilus_trader.model.orderbook.book.OrderBook.update"]], "update() (simulatedl1orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL1OrderBook.update"]], "update() (simulatedl2orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL2OrderBook.update"]], "update() (simulatedl3orderbook method)": [[25, "nautilus_trader.model.orderbook.simulated.SimulatedL3OrderBook.update"]], "update_id (orderbookdata attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookData.update_id"]], "update_id (orderbookdelta attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDelta.update_id"]], "update_id (orderbookdeltas attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookDeltas.update_id"]], "update_id (orderbooksnapshot attribute)": [[25, "nautilus_trader.model.orderbook.data.OrderBookSnapshot.update_id"]], "update_id() (bookorder method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.update_id"]], "update_price() (bookorder method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.update_price"]], "update_size() (bookorder method)": [[25, "nautilus_trader.model.orderbook.data.BookOrder.update_size"]], "volume() (level method)": [[25, "nautilus_trader.model.orderbook.level.Level.volume"]], "volumes() (ladder method)": [[25, "nautilus_trader.model.orderbook.ladder.Ladder.volumes"]], "with_traceback() (bookintegrityerror method)": [[25, "nautilus_trader.model.orderbook.error.BookIntegrityError.with_traceback"]], "limitiftouchedorder (class in nautilus_trader.model.orders.limit_if_touched)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder"]], "limitorder (class in nautilus_trader.model.orders.limit)": [[26, "nautilus_trader.model.orders.limit.LimitOrder"]], "marketiftouchedorder (class in nautilus_trader.model.orders.market_if_touched)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder"]], "marketorder (class in nautilus_trader.model.orders.market)": [[26, "nautilus_trader.model.orders.market.MarketOrder"]], "markettolimitorder (class in nautilus_trader.model.orders.market_to_limit)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder"]], "order (class in nautilus_trader.model.orders.base)": [[26, "nautilus_trader.model.orders.base.Order"]], "orderlist (class in nautilus_trader.model.orders.list)": [[26, "nautilus_trader.model.orders.list.OrderList"]], "stoplimitorder (class in nautilus_trader.model.orders.stop_limit)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder"]], "stopmarketorder (class in nautilus_trader.model.orders.stop_market)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder"]], "trailingstoplimitorder (class in nautilus_trader.model.orders.trailing_stop_limit)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder"]], "trailingstopmarketorder (class in nautilus_trader.model.orders.trailing_stop_market)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder"]], "account_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.account_id"]], "account_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.account_id"]], "account_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.account_id"]], "account_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.account_id"]], "account_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.account_id"]], "account_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.account_id"]], "account_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.account_id"]], "account_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.account_id"]], "account_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.account_id"]], "account_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.account_id"]], "apply() (limitiftouchedorder method)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.apply"]], "apply() (limitorder method)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.apply"]], "apply() (marketiftouchedorder method)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.apply"]], "apply() (marketorder method)": [[26, "nautilus_trader.model.orders.market.MarketOrder.apply"]], "apply() (markettolimitorder method)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.apply"]], "apply() (order method)": [[26, "nautilus_trader.model.orders.base.Order.apply"]], "apply() (stoplimitorder method)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.apply"]], "apply() (stopmarketorder method)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.apply"]], "apply() (trailingstoplimitorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.apply"]], "apply() (trailingstopmarketorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.apply"]], "avg_px (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.avg_px"]], "avg_px (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.avg_px"]], "avg_px (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.avg_px"]], "avg_px (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.avg_px"]], "avg_px (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.avg_px"]], "avg_px (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.avg_px"]], "avg_px (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.avg_px"]], "avg_px (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.avg_px"]], "avg_px (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.avg_px"]], "avg_px (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.avg_px"]], "client_order_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.client_order_id"]], "client_order_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.client_order_id"]], "client_order_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.client_order_id"]], "client_order_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.client_order_id"]], "client_order_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.client_order_id"]], "client_order_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.client_order_id"]], "client_order_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.client_order_id"]], "client_order_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.client_order_id"]], "client_order_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.client_order_id"]], "client_order_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.client_order_id"]], "closing_side() (limitiftouchedorder static method)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.closing_side"]], "closing_side() (limitorder static method)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.closing_side"]], "closing_side() (marketiftouchedorder static method)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.closing_side"]], "closing_side() (marketorder static method)": [[26, "nautilus_trader.model.orders.market.MarketOrder.closing_side"]], "closing_side() (markettolimitorder static method)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.closing_side"]], "closing_side() (order static method)": [[26, "nautilus_trader.model.orders.base.Order.closing_side"]], "closing_side() (stoplimitorder static method)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.closing_side"]], "closing_side() (stopmarketorder static method)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.closing_side"]], "closing_side() (trailingstoplimitorder static method)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.closing_side"]], "closing_side() (trailingstopmarketorder static method)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.closing_side"]], "contingency_type (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.contingency_type"]], "contingency_type (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.contingency_type"]], "contingency_type (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.contingency_type"]], "contingency_type (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.contingency_type"]], "contingency_type (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.contingency_type"]], "contingency_type (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.contingency_type"]], "contingency_type (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.contingency_type"]], "contingency_type (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.contingency_type"]], "contingency_type (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.contingency_type"]], "contingency_type (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.contingency_type"]], "display_qty (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.display_qty"]], "display_qty (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.display_qty"]], "display_qty (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.display_qty"]], "display_qty (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.display_qty"]], "display_qty (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.display_qty"]], "emulation_trigger (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.emulation_trigger"]], "emulation_trigger (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.emulation_trigger"]], "emulation_trigger (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.emulation_trigger"]], "emulation_trigger (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.emulation_trigger"]], "emulation_trigger (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.emulation_trigger"]], "emulation_trigger (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.emulation_trigger"]], "emulation_trigger (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.emulation_trigger"]], "emulation_trigger (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.emulation_trigger"]], "emulation_trigger (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.emulation_trigger"]], "emulation_trigger (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.emulation_trigger"]], "event_count (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.event_count"]], "event_count (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.event_count"]], "event_count (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.event_count"]], "event_count (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.event_count"]], "event_count (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.event_count"]], "event_count (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.event_count"]], "event_count (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.event_count"]], "event_count (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.event_count"]], "event_count (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.event_count"]], "event_count (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.event_count"]], "events (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.events"]], "events (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.events"]], "events (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.events"]], "events (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.events"]], "events (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.events"]], "events (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.events"]], "events (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.events"]], "events (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.events"]], "events (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.events"]], "events (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.events"]], "expire_time (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.expire_time"]], "expire_time (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.expire_time"]], "expire_time (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.expire_time"]], "expire_time (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.expire_time"]], "expire_time (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.expire_time"]], "expire_time (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.expire_time"]], "expire_time (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.expire_time"]], "expire_time (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.expire_time"]], "expire_time_ns (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.expire_time_ns"]], "expire_time_ns (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.expire_time_ns"]], "expire_time_ns (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.expire_time_ns"]], "expire_time_ns (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.expire_time_ns"]], "expire_time_ns (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.expire_time_ns"]], "expire_time_ns (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.expire_time_ns"]], "expire_time_ns (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.expire_time_ns"]], "expire_time_ns (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.expire_time_ns"]], "filled_qty (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.filled_qty"]], "filled_qty (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.filled_qty"]], "filled_qty (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.filled_qty"]], "filled_qty (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.filled_qty"]], "filled_qty (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.filled_qty"]], "filled_qty (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.filled_qty"]], "filled_qty (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.filled_qty"]], "filled_qty (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.filled_qty"]], "filled_qty (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.filled_qty"]], "filled_qty (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.filled_qty"]], "first (orderlist attribute)": [[26, "nautilus_trader.model.orders.list.OrderList.first"]], "has_price (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.has_price"]], "has_price (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.has_price"]], "has_price (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.has_price"]], "has_price (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.has_price"]], "has_price (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.has_price"]], "has_price (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.has_price"]], "has_price (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.has_price"]], "has_price (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.has_price"]], "has_price (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.has_price"]], "has_price (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.has_price"]], "has_trigger_price (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.has_trigger_price"]], "has_trigger_price (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.has_trigger_price"]], "has_trigger_price (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.has_trigger_price"]], "has_trigger_price (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.has_trigger_price"]], "has_trigger_price (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.has_trigger_price"]], "has_trigger_price (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.has_trigger_price"]], "has_trigger_price (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.has_trigger_price"]], "has_trigger_price (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.has_trigger_price"]], "has_trigger_price (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.has_trigger_price"]], "has_trigger_price (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.has_trigger_price"]], "id (orderlist attribute)": [[26, "nautilus_trader.model.orders.list.OrderList.id"]], "info() (limitiftouchedorder method)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.info"]], "info() (limitorder method)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.info"]], "info() (marketiftouchedorder method)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.info"]], "info() (marketorder method)": [[26, "nautilus_trader.model.orders.market.MarketOrder.info"]], "info() (markettolimitorder method)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.info"]], "info() (order method)": [[26, "nautilus_trader.model.orders.base.Order.info"]], "info() (stoplimitorder method)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.info"]], "info() (stopmarketorder method)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.info"]], "info() (trailingstoplimitorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.info"]], "info() (trailingstopmarketorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.info"]], "init_event (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.init_event"]], "init_event (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.init_event"]], "init_event (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.init_event"]], "init_event (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.init_event"]], "init_event (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.init_event"]], "init_event (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.init_event"]], "init_event (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.init_event"]], "init_event (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.init_event"]], "init_event (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.init_event"]], "init_event (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.init_event"]], "init_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.init_id"]], "init_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.init_id"]], "init_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.init_id"]], "init_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.init_id"]], "init_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.init_id"]], "init_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.init_id"]], "init_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.init_id"]], "init_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.init_id"]], "init_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.init_id"]], "init_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.init_id"]], "instrument_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.instrument_id"]], "instrument_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.instrument_id"]], "instrument_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.instrument_id"]], "instrument_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.instrument_id"]], "instrument_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.instrument_id"]], "instrument_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.instrument_id"]], "instrument_id (orderlist attribute)": [[26, "nautilus_trader.model.orders.list.OrderList.instrument_id"]], "instrument_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.instrument_id"]], "instrument_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.instrument_id"]], "instrument_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.instrument_id"]], "instrument_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.instrument_id"]], "is_aggressive (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_aggressive"]], "is_aggressive (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_aggressive"]], "is_aggressive (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_aggressive"]], "is_aggressive (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_aggressive"]], "is_aggressive (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_aggressive"]], "is_aggressive (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_aggressive"]], "is_aggressive (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_aggressive"]], "is_aggressive (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_aggressive"]], "is_aggressive (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_aggressive"]], "is_aggressive (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_aggressive"]], "is_buy (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_buy"]], "is_buy (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_buy"]], "is_buy (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_buy"]], "is_buy (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_buy"]], "is_buy (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_buy"]], "is_buy (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_buy"]], "is_buy (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_buy"]], "is_buy (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_buy"]], "is_buy (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_buy"]], "is_buy (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_buy"]], "is_canceled (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_canceled"]], "is_canceled (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_canceled"]], "is_canceled (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_canceled"]], "is_canceled (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_canceled"]], "is_canceled (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_canceled"]], "is_canceled (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_canceled"]], "is_canceled (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_canceled"]], "is_canceled (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_canceled"]], "is_canceled (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_canceled"]], "is_canceled (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_canceled"]], "is_child_order (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_child_order"]], "is_child_order (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_child_order"]], "is_child_order (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_child_order"]], "is_child_order (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_child_order"]], "is_child_order (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_child_order"]], "is_child_order (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_child_order"]], "is_child_order (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_child_order"]], "is_child_order (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_child_order"]], "is_child_order (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_child_order"]], "is_child_order (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_child_order"]], "is_closed (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_closed"]], "is_closed (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_closed"]], "is_closed (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_closed"]], "is_closed (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_closed"]], "is_closed (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_closed"]], "is_closed (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_closed"]], "is_closed (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_closed"]], "is_closed (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_closed"]], "is_closed (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_closed"]], "is_closed (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_closed"]], "is_contingency (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_contingency"]], "is_contingency (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_contingency"]], "is_contingency (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_contingency"]], "is_contingency (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_contingency"]], "is_contingency (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_contingency"]], "is_contingency (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_contingency"]], "is_contingency (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_contingency"]], "is_contingency (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_contingency"]], "is_contingency (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_contingency"]], "is_contingency (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_contingency"]], "is_emulated (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_emulated"]], "is_emulated (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_emulated"]], "is_emulated (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_emulated"]], "is_emulated (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_emulated"]], "is_emulated (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_emulated"]], "is_emulated (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_emulated"]], "is_emulated (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_emulated"]], "is_emulated (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_emulated"]], "is_emulated (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_emulated"]], "is_emulated (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_emulated"]], "is_inflight (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_inflight"]], "is_inflight (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_inflight"]], "is_inflight (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_inflight"]], "is_inflight (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_inflight"]], "is_inflight (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_inflight"]], "is_inflight (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_inflight"]], "is_inflight (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_inflight"]], "is_inflight (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_inflight"]], "is_inflight (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_inflight"]], "is_inflight (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_inflight"]], "is_open (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_open"]], "is_open (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_open"]], "is_open (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_open"]], "is_open (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_open"]], "is_open (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_open"]], "is_open (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_open"]], "is_open (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_open"]], "is_open (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_open"]], "is_open (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_open"]], "is_open (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_open"]], "is_parent_order (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_parent_order"]], "is_parent_order (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_parent_order"]], "is_parent_order (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_parent_order"]], "is_parent_order (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_parent_order"]], "is_parent_order (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_parent_order"]], "is_parent_order (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_parent_order"]], "is_parent_order (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_parent_order"]], "is_parent_order (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_parent_order"]], "is_parent_order (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_parent_order"]], "is_parent_order (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_parent_order"]], "is_passive (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_passive"]], "is_passive (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_passive"]], "is_passive (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_passive"]], "is_passive (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_passive"]], "is_passive (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_passive"]], "is_passive (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_passive"]], "is_passive (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_passive"]], "is_passive (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_passive"]], "is_passive (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_passive"]], "is_passive (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_passive"]], "is_pending_cancel (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_pending_cancel"]], "is_pending_cancel (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_pending_cancel"]], "is_pending_cancel (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_pending_cancel"]], "is_pending_cancel (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_pending_cancel"]], "is_pending_cancel (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_pending_cancel"]], "is_pending_cancel (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_pending_cancel"]], "is_pending_cancel (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_pending_cancel"]], "is_pending_cancel (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_pending_cancel"]], "is_pending_cancel (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_pending_cancel"]], "is_pending_cancel (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_pending_cancel"]], "is_pending_update (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_pending_update"]], "is_pending_update (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_pending_update"]], "is_pending_update (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_pending_update"]], "is_pending_update (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_pending_update"]], "is_pending_update (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_pending_update"]], "is_pending_update (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_pending_update"]], "is_pending_update (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_pending_update"]], "is_pending_update (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_pending_update"]], "is_pending_update (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_pending_update"]], "is_pending_update (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_pending_update"]], "is_post_only (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_post_only"]], "is_post_only (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_post_only"]], "is_post_only (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_post_only"]], "is_post_only (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_post_only"]], "is_post_only (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_post_only"]], "is_post_only (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_post_only"]], "is_post_only (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_post_only"]], "is_post_only (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_post_only"]], "is_post_only (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_post_only"]], "is_post_only (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_post_only"]], "is_reduce_only (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_reduce_only"]], "is_reduce_only (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_reduce_only"]], "is_reduce_only (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_reduce_only"]], "is_reduce_only (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_reduce_only"]], "is_reduce_only (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_reduce_only"]], "is_reduce_only (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_reduce_only"]], "is_reduce_only (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_reduce_only"]], "is_reduce_only (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_reduce_only"]], "is_reduce_only (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_reduce_only"]], "is_reduce_only (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_reduce_only"]], "is_sell (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_sell"]], "is_sell (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.is_sell"]], "is_sell (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.is_sell"]], "is_sell (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.is_sell"]], "is_sell (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.is_sell"]], "is_sell (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.is_sell"]], "is_sell (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_sell"]], "is_sell (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.is_sell"]], "is_sell (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_sell"]], "is_sell (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.is_sell"]], "is_triggered (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.is_triggered"]], "is_triggered (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.is_triggered"]], "is_triggered (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.is_triggered"]], "last_event (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.last_event"]], "last_event (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.last_event"]], "last_event (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.last_event"]], "last_event (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.last_event"]], "last_event (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.last_event"]], "last_event (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.last_event"]], "last_event (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.last_event"]], "last_event (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.last_event"]], "last_event (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.last_event"]], "last_event (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.last_event"]], "last_trade_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.last_trade_id"]], "last_trade_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.last_trade_id"]], "last_trade_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.last_trade_id"]], "last_trade_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.last_trade_id"]], "last_trade_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.last_trade_id"]], "last_trade_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.last_trade_id"]], "last_trade_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.last_trade_id"]], "last_trade_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.last_trade_id"]], "last_trade_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.last_trade_id"]], "last_trade_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.last_trade_id"]], "leaves_qty (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.leaves_qty"]], "leaves_qty (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.leaves_qty"]], "leaves_qty (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.leaves_qty"]], "leaves_qty (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.leaves_qty"]], "leaves_qty (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.leaves_qty"]], "leaves_qty (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.leaves_qty"]], "leaves_qty (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.leaves_qty"]], "leaves_qty (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.leaves_qty"]], "leaves_qty (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.leaves_qty"]], "leaves_qty (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.leaves_qty"]], "limit_offset (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.limit_offset"]], "linked_order_ids (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.linked_order_ids"]], "linked_order_ids (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.linked_order_ids"]], "linked_order_ids (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.linked_order_ids"]], "linked_order_ids (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.linked_order_ids"]], "linked_order_ids (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.linked_order_ids"]], "linked_order_ids (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.linked_order_ids"]], "linked_order_ids (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.linked_order_ids"]], "linked_order_ids (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.linked_order_ids"]], "linked_order_ids (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.linked_order_ids"]], "linked_order_ids (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.linked_order_ids"]], "liquidity_side (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.liquidity_side"]], "liquidity_side (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.liquidity_side"]], "liquidity_side (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.liquidity_side"]], "liquidity_side (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.liquidity_side"]], "liquidity_side (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.liquidity_side"]], "liquidity_side (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.liquidity_side"]], "liquidity_side (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.liquidity_side"]], "liquidity_side (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.liquidity_side"]], "liquidity_side (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.liquidity_side"]], "liquidity_side (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.liquidity_side"]], "nautilus_trader.model.orders": [[26, "module-nautilus_trader.model.orders"]], "nautilus_trader.model.orders.base": [[26, "module-nautilus_trader.model.orders.base"]], "nautilus_trader.model.orders.limit": [[26, "module-nautilus_trader.model.orders.limit"]], "nautilus_trader.model.orders.limit_if_touched": [[26, "module-nautilus_trader.model.orders.limit_if_touched"]], "nautilus_trader.model.orders.list": [[26, "module-nautilus_trader.model.orders.list"]], "nautilus_trader.model.orders.market": [[26, "module-nautilus_trader.model.orders.market"]], "nautilus_trader.model.orders.market_if_touched": [[26, "module-nautilus_trader.model.orders.market_if_touched"]], "nautilus_trader.model.orders.market_to_limit": [[26, "module-nautilus_trader.model.orders.market_to_limit"]], "nautilus_trader.model.orders.stop_limit": [[26, "module-nautilus_trader.model.orders.stop_limit"]], "nautilus_trader.model.orders.stop_market": [[26, "module-nautilus_trader.model.orders.stop_market"]], "nautilus_trader.model.orders.trailing_stop_limit": [[26, "module-nautilus_trader.model.orders.trailing_stop_limit"]], "nautilus_trader.model.orders.trailing_stop_market": [[26, "module-nautilus_trader.model.orders.trailing_stop_market"]], "opposite_side() (limitiftouchedorder static method)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.opposite_side"]], "opposite_side() (limitorder static method)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.opposite_side"]], "opposite_side() (marketiftouchedorder static method)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.opposite_side"]], "opposite_side() (marketorder static method)": [[26, "nautilus_trader.model.orders.market.MarketOrder.opposite_side"]], "opposite_side() (markettolimitorder static method)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.opposite_side"]], "opposite_side() (order static method)": [[26, "nautilus_trader.model.orders.base.Order.opposite_side"]], "opposite_side() (stoplimitorder static method)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.opposite_side"]], "opposite_side() (stopmarketorder static method)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.opposite_side"]], "opposite_side() (trailingstoplimitorder static method)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.opposite_side"]], "opposite_side() (trailingstopmarketorder static method)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.opposite_side"]], "order_list_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.order_list_id"]], "order_list_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.order_list_id"]], "order_list_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.order_list_id"]], "order_list_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.order_list_id"]], "order_list_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.order_list_id"]], "order_list_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.order_list_id"]], "order_list_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.order_list_id"]], "order_list_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.order_list_id"]], "order_list_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.order_list_id"]], "order_list_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.order_list_id"]], "order_type (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.order_type"]], "order_type (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.order_type"]], "order_type (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.order_type"]], "order_type (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.order_type"]], "order_type (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.order_type"]], "order_type (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.order_type"]], "order_type (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.order_type"]], "order_type (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.order_type"]], "order_type (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.order_type"]], "order_type (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.order_type"]], "orders (orderlist attribute)": [[26, "nautilus_trader.model.orders.list.OrderList.orders"]], "parent_order_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.parent_order_id"]], "parent_order_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.parent_order_id"]], "parent_order_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.parent_order_id"]], "parent_order_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.parent_order_id"]], "parent_order_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.parent_order_id"]], "parent_order_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.parent_order_id"]], "parent_order_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.parent_order_id"]], "parent_order_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.parent_order_id"]], "parent_order_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.parent_order_id"]], "parent_order_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.parent_order_id"]], "position_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.position_id"]], "position_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.position_id"]], "position_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.position_id"]], "position_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.position_id"]], "position_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.position_id"]], "position_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.position_id"]], "position_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.position_id"]], "position_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.position_id"]], "position_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.position_id"]], "position_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.position_id"]], "price (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.price"]], "price (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.price"]], "price (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.price"]], "price (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.price"]], "price (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.price"]], "quantity (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.quantity"]], "quantity (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.quantity"]], "quantity (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.quantity"]], "quantity (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.quantity"]], "quantity (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.quantity"]], "quantity (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.quantity"]], "quantity (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.quantity"]], "quantity (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.quantity"]], "quantity (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.quantity"]], "quantity (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.quantity"]], "side (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.side"]], "side (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.side"]], "side (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.side"]], "side (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.side"]], "side (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.side"]], "side (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.side"]], "side (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.side"]], "side (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.side"]], "side (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.side"]], "side (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.side"]], "side_string (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.side_string"]], "side_string (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.side_string"]], "side_string (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.side_string"]], "side_string (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.side_string"]], "side_string (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.side_string"]], "side_string (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.side_string"]], "side_string (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.side_string"]], "side_string (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.side_string"]], "side_string (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.side_string"]], "side_string (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.side_string"]], "slippage (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.slippage"]], "slippage (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.slippage"]], "slippage (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.slippage"]], "slippage (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.slippage"]], "slippage (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.slippage"]], "slippage (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.slippage"]], "slippage (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.slippage"]], "slippage (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.slippage"]], "slippage (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.slippage"]], "slippage (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.slippage"]], "status (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.status"]], "status (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.status"]], "status (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.status"]], "status (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.status"]], "status (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.status"]], "status (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.status"]], "status (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.status"]], "status (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.status"]], "status (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.status"]], "status (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.status"]], "strategy_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.strategy_id"]], "strategy_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.strategy_id"]], "strategy_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.strategy_id"]], "strategy_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.strategy_id"]], "strategy_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.strategy_id"]], "strategy_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.strategy_id"]], "strategy_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.strategy_id"]], "strategy_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.strategy_id"]], "strategy_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.strategy_id"]], "strategy_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.strategy_id"]], "symbol (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.symbol"]], "symbol (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.symbol"]], "symbol (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.symbol"]], "symbol (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.symbol"]], "symbol (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.symbol"]], "symbol (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.symbol"]], "symbol (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.symbol"]], "symbol (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.symbol"]], "symbol (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.symbol"]], "symbol (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.symbol"]], "tags (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.tags"]], "tags (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.tags"]], "tags (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.tags"]], "tags (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.tags"]], "tags (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.tags"]], "tags (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.tags"]], "tags (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.tags"]], "tags (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.tags"]], "tags (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.tags"]], "tags (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.tags"]], "time_in_force (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.time_in_force"]], "time_in_force (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.time_in_force"]], "time_in_force (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.time_in_force"]], "time_in_force (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.time_in_force"]], "time_in_force (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.time_in_force"]], "time_in_force (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.time_in_force"]], "time_in_force (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.time_in_force"]], "time_in_force (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.time_in_force"]], "time_in_force (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.time_in_force"]], "time_in_force (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.time_in_force"]], "to_dict() (limitiftouchedorder method)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.to_dict"]], "to_dict() (limitorder method)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.to_dict"]], "to_dict() (marketiftouchedorder method)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.to_dict"]], "to_dict() (marketorder method)": [[26, "nautilus_trader.model.orders.market.MarketOrder.to_dict"]], "to_dict() (markettolimitorder method)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.to_dict"]], "to_dict() (order method)": [[26, "nautilus_trader.model.orders.base.Order.to_dict"]], "to_dict() (stoplimitorder method)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.to_dict"]], "to_dict() (stopmarketorder method)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.to_dict"]], "to_dict() (trailingstoplimitorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.to_dict"]], "to_dict() (trailingstopmarketorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.to_dict"]], "trade_ids (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trade_ids"]], "trade_ids (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.trade_ids"]], "trade_ids (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trade_ids"]], "trade_ids (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.trade_ids"]], "trade_ids (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.trade_ids"]], "trade_ids (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.trade_ids"]], "trade_ids (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trade_ids"]], "trade_ids (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trade_ids"]], "trade_ids (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trade_ids"]], "trade_ids (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trade_ids"]], "trader_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trader_id"]], "trader_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.trader_id"]], "trader_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trader_id"]], "trader_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.trader_id"]], "trader_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.trader_id"]], "trader_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.trader_id"]], "trader_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trader_id"]], "trader_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trader_id"]], "trader_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trader_id"]], "trader_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trader_id"]], "trailing_offset (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trailing_offset"]], "trailing_offset (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trailing_offset"]], "trailing_offset_type (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trailing_offset_type"]], "trailing_offset_type (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trailing_offset_type"]], "trigger_price (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trigger_price"]], "trigger_price (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trigger_price"]], "trigger_price (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trigger_price"]], "trigger_price (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trigger_price"]], "trigger_price (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trigger_price"]], "trigger_price (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trigger_price"]], "trigger_type (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.trigger_type"]], "trigger_type (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.trigger_type"]], "trigger_type (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.trigger_type"]], "trigger_type (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.trigger_type"]], "trigger_type (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.trigger_type"]], "trigger_type (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.trigger_type"]], "ts_init (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.ts_init"]], "ts_init (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.ts_init"]], "ts_init (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.ts_init"]], "ts_init (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.ts_init"]], "ts_init (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.ts_init"]], "ts_init (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.ts_init"]], "ts_init (orderlist attribute)": [[26, "nautilus_trader.model.orders.list.OrderList.ts_init"]], "ts_init (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.ts_init"]], "ts_init (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.ts_init"]], "ts_init (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.ts_init"]], "ts_init (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.ts_init"]], "ts_last (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.ts_last"]], "ts_last (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.ts_last"]], "ts_last (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.ts_last"]], "ts_last (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.ts_last"]], "ts_last (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.ts_last"]], "ts_last (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.ts_last"]], "ts_last (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.ts_last"]], "ts_last (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.ts_last"]], "ts_last (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.ts_last"]], "ts_last (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.ts_last"]], "ts_triggered (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.ts_triggered"]], "ts_triggered (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.ts_triggered"]], "ts_triggered (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.ts_triggered"]], "venue (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.venue"]], "venue (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.venue"]], "venue (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.venue"]], "venue (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.venue"]], "venue (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.venue"]], "venue (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.venue"]], "venue (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.venue"]], "venue (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.venue"]], "venue (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.venue"]], "venue (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.venue"]], "venue_order_id (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.venue_order_id"]], "venue_order_id (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.venue_order_id"]], "venue_order_id (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.venue_order_id"]], "venue_order_id (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.venue_order_id"]], "venue_order_id (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.venue_order_id"]], "venue_order_id (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.venue_order_id"]], "venue_order_id (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.venue_order_id"]], "venue_order_id (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.venue_order_id"]], "venue_order_id (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.venue_order_id"]], "venue_order_id (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.venue_order_id"]], "venue_order_ids (limitiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.venue_order_ids"]], "venue_order_ids (limitorder attribute)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.venue_order_ids"]], "venue_order_ids (marketiftouchedorder attribute)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.venue_order_ids"]], "venue_order_ids (marketorder attribute)": [[26, "nautilus_trader.model.orders.market.MarketOrder.venue_order_ids"]], "venue_order_ids (markettolimitorder attribute)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.venue_order_ids"]], "venue_order_ids (order attribute)": [[26, "nautilus_trader.model.orders.base.Order.venue_order_ids"]], "venue_order_ids (stoplimitorder attribute)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.venue_order_ids"]], "venue_order_ids (stopmarketorder attribute)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.venue_order_ids"]], "venue_order_ids (trailingstoplimitorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.venue_order_ids"]], "venue_order_ids (trailingstopmarketorder attribute)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.venue_order_ids"]], "would_reduce_only() (limitiftouchedorder method)": [[26, "nautilus_trader.model.orders.limit_if_touched.LimitIfTouchedOrder.would_reduce_only"]], "would_reduce_only() (limitorder method)": [[26, "nautilus_trader.model.orders.limit.LimitOrder.would_reduce_only"]], "would_reduce_only() (marketiftouchedorder method)": [[26, "nautilus_trader.model.orders.market_if_touched.MarketIfTouchedOrder.would_reduce_only"]], "would_reduce_only() (marketorder method)": [[26, "nautilus_trader.model.orders.market.MarketOrder.would_reduce_only"]], "would_reduce_only() (markettolimitorder method)": [[26, "nautilus_trader.model.orders.market_to_limit.MarketToLimitOrder.would_reduce_only"]], "would_reduce_only() (order method)": [[26, "nautilus_trader.model.orders.base.Order.would_reduce_only"]], "would_reduce_only() (stoplimitorder method)": [[26, "nautilus_trader.model.orders.stop_limit.StopLimitOrder.would_reduce_only"]], "would_reduce_only() (stopmarketorder method)": [[26, "nautilus_trader.model.orders.stop_market.StopMarketOrder.would_reduce_only"]], "would_reduce_only() (trailingstoplimitorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_limit.TrailingStopLimitOrder.would_reduce_only"]], "would_reduce_only() (trailingstopmarketorder method)": [[26, "nautilus_trader.model.orders.trailing_stop_market.TrailingStopMarketOrder.would_reduce_only"]], "position (class in nautilus_trader.model.position)": [[27, "nautilus_trader.model.position.Position"]], "account_id (position attribute)": [[27, "nautilus_trader.model.position.Position.account_id"]], "apply() (position method)": [[27, "nautilus_trader.model.position.Position.apply"]], "avg_px_close (position attribute)": [[27, "nautilus_trader.model.position.Position.avg_px_close"]], "avg_px_open (position attribute)": [[27, "nautilus_trader.model.position.Position.avg_px_open"]], "base_currency (position attribute)": [[27, "nautilus_trader.model.position.Position.base_currency"]], "calculate_pnl() (position method)": [[27, "nautilus_trader.model.position.Position.calculate_pnl"]], "client_order_ids (position attribute)": [[27, "nautilus_trader.model.position.Position.client_order_ids"]], "closing_order_id (position attribute)": [[27, "nautilus_trader.model.position.Position.closing_order_id"]], "commissions() (position method)": [[27, "nautilus_trader.model.position.Position.commissions"]], "cost_currency (position attribute)": [[27, "nautilus_trader.model.position.Position.cost_currency"]], "duration_ns (position attribute)": [[27, "nautilus_trader.model.position.Position.duration_ns"]], "entry (position attribute)": [[27, "nautilus_trader.model.position.Position.entry"]], "event_count (position attribute)": [[27, "nautilus_trader.model.position.Position.event_count"]], "events (position attribute)": [[27, "nautilus_trader.model.position.Position.events"]], "id (position attribute)": [[27, "nautilus_trader.model.position.Position.id"]], "info() (position method)": [[27, "nautilus_trader.model.position.Position.info"]], "instrument_id (position attribute)": [[27, "nautilus_trader.model.position.Position.instrument_id"]], "is_closed (position attribute)": [[27, "nautilus_trader.model.position.Position.is_closed"]], "is_inverse (position attribute)": [[27, "nautilus_trader.model.position.Position.is_inverse"]], "is_long (position attribute)": [[27, "nautilus_trader.model.position.Position.is_long"]], "is_open (position attribute)": [[27, "nautilus_trader.model.position.Position.is_open"]], "is_opposite_side() (position method)": [[27, "nautilus_trader.model.position.Position.is_opposite_side"]], "is_short (position attribute)": [[27, "nautilus_trader.model.position.Position.is_short"]], "last_event (position attribute)": [[27, "nautilus_trader.model.position.Position.last_event"]], "last_trade_id (position attribute)": [[27, "nautilus_trader.model.position.Position.last_trade_id"]], "multiplier (position attribute)": [[27, "nautilus_trader.model.position.Position.multiplier"]], "nautilus_trader.model.position": [[27, "module-nautilus_trader.model.position"]], "net_qty (position attribute)": [[27, "nautilus_trader.model.position.Position.net_qty"]], "notional_value() (position method)": [[27, "nautilus_trader.model.position.Position.notional_value"]], "opening_order_id (position attribute)": [[27, "nautilus_trader.model.position.Position.opening_order_id"]], "peak_qty (position attribute)": [[27, "nautilus_trader.model.position.Position.peak_qty"]], "price_precision (position attribute)": [[27, "nautilus_trader.model.position.Position.price_precision"]], "quantity (position attribute)": [[27, "nautilus_trader.model.position.Position.quantity"]], "quote_currency (position attribute)": [[27, "nautilus_trader.model.position.Position.quote_currency"]], "realized_pnl (position attribute)": [[27, "nautilus_trader.model.position.Position.realized_pnl"]], "realized_return (position attribute)": [[27, "nautilus_trader.model.position.Position.realized_return"]], "side (position attribute)": [[27, "nautilus_trader.model.position.Position.side"]], "side_from_order_side() (position static method)": [[27, "nautilus_trader.model.position.Position.side_from_order_side"]], "size_precision (position attribute)": [[27, "nautilus_trader.model.position.Position.size_precision"]], "strategy_id (position attribute)": [[27, "nautilus_trader.model.position.Position.strategy_id"]], "symbol (position attribute)": [[27, "nautilus_trader.model.position.Position.symbol"]], "to_dict() (position method)": [[27, "nautilus_trader.model.position.Position.to_dict"]], "total_pnl() (position method)": [[27, "nautilus_trader.model.position.Position.total_pnl"]], "trade_ids (position attribute)": [[27, "nautilus_trader.model.position.Position.trade_ids"]], "trader_id (position attribute)": [[27, "nautilus_trader.model.position.Position.trader_id"]], "ts_closed (position attribute)": [[27, "nautilus_trader.model.position.Position.ts_closed"]], "ts_init (position attribute)": [[27, "nautilus_trader.model.position.Position.ts_init"]], "ts_last (position attribute)": [[27, "nautilus_trader.model.position.Position.ts_last"]], "ts_opened (position attribute)": [[27, "nautilus_trader.model.position.Position.ts_opened"]], "unrealized_pnl() (position method)": [[27, "nautilus_trader.model.position.Position.unrealized_pnl"]], "venue (position attribute)": [[27, "nautilus_trader.model.position.Position.venue"]], "venue_order_ids (position attribute)": [[27, "nautilus_trader.model.position.Position.venue_order_ids"]], "fixedtickscheme (class in nautilus_trader.model.tick_scheme.implementations.fixed)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme"]], "tickscheme (class in nautilus_trader.model.tick_scheme.base)": [[28, "nautilus_trader.model.tick_scheme.base.TickScheme"]], "tieredtickscheme (class in nautilus_trader.model.tick_scheme.implementations.tiered)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme"]], "find_tick_index() (tieredtickscheme method)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.find_tick_index"]], "get_tick_scheme() (in module nautilus_trader.model.tick_scheme.base)": [[28, "nautilus_trader.model.tick_scheme.base.get_tick_scheme"]], "increment (fixedtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.increment"]], "list_tick_schemes() (in module nautilus_trader.model.tick_scheme.base)": [[28, "nautilus_trader.model.tick_scheme.base.list_tick_schemes"]], "max_price (fixedtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.max_price"]], "max_price (tickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.base.TickScheme.max_price"]], "max_price (tieredtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.max_price"]], "min_price (fixedtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.min_price"]], "min_price (tickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.base.TickScheme.min_price"]], "min_price (tieredtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.min_price"]], "name (fixedtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.name"]], "name (tickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.base.TickScheme.name"]], "name (tieredtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.name"]], "nautilus_trader.model.tick_scheme": [[28, "module-nautilus_trader.model.tick_scheme"]], "nautilus_trader.model.tick_scheme.base": [[28, "module-nautilus_trader.model.tick_scheme.base"]], "nautilus_trader.model.tick_scheme.implementations.fixed": [[28, "module-nautilus_trader.model.tick_scheme.implementations.fixed"]], "nautilus_trader.model.tick_scheme.implementations.tiered": [[28, "module-nautilus_trader.model.tick_scheme.implementations.tiered"]], "next_ask_price() (fixedtickscheme method)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.next_ask_price"]], "next_ask_price() (tickscheme method)": [[28, "nautilus_trader.model.tick_scheme.base.TickScheme.next_ask_price"]], "next_ask_price() (tieredtickscheme method)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.next_ask_price"]], "next_bid_price() (fixedtickscheme method)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.next_bid_price"]], "next_bid_price() (tickscheme method)": [[28, "nautilus_trader.model.tick_scheme.base.TickScheme.next_bid_price"]], "next_bid_price() (tieredtickscheme method)": [[28, "nautilus_trader.model.tick_scheme.implementations.tiered.TieredTickScheme.next_bid_price"]], "price_precision (fixedtickscheme attribute)": [[28, "nautilus_trader.model.tick_scheme.implementations.fixed.FixedTickScheme.price_precision"]], "register_tick_scheme() (in module nautilus_trader.model.tick_scheme.base)": [[28, "nautilus_trader.model.tick_scheme.base.register_tick_scheme"]], "round_down() (in module nautilus_trader.model.tick_scheme.base)": [[28, "nautilus_trader.model.tick_scheme.base.round_down"]], "round_up() (in module nautilus_trader.model.tick_scheme.base)": [[28, "nautilus_trader.model.tick_scheme.base.round_up"]], "messagebus (class in nautilus_trader.msgbus.bus)": [[29, "nautilus_trader.msgbus.bus.MessageBus"]], "subscription (class in nautilus_trader.msgbus.subscription)": [[29, "nautilus_trader.msgbus.subscription.Subscription"]], "deregister() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.deregister"]], "endpoints() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.endpoints"]], "handler (subscription attribute)": [[29, "nautilus_trader.msgbus.subscription.Subscription.handler"]], "has_subscribers() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.has_subscribers"]], "nautilus_trader.msgbus": [[29, "module-nautilus_trader.msgbus"]], "nautilus_trader.msgbus.bus": [[29, "module-nautilus_trader.msgbus.bus"]], "nautilus_trader.msgbus.subscription": [[29, "module-nautilus_trader.msgbus.subscription"]], "priority (subscription attribute)": [[29, "nautilus_trader.msgbus.subscription.Subscription.priority"]], "pub_count (messagebus attribute)": [[29, "nautilus_trader.msgbus.bus.MessageBus.pub_count"]], "publish() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.publish"]], "register() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.register"]], "req_count (messagebus attribute)": [[29, "nautilus_trader.msgbus.bus.MessageBus.req_count"]], "request() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.request"]], "res_count (messagebus attribute)": [[29, "nautilus_trader.msgbus.bus.MessageBus.res_count"]], "response() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.response"]], "send() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.send"]], "sent_count (messagebus attribute)": [[29, "nautilus_trader.msgbus.bus.MessageBus.sent_count"]], "subscribe() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.subscribe"]], "subscriptions() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.subscriptions"]], "topic (subscription attribute)": [[29, "nautilus_trader.msgbus.subscription.Subscription.topic"]], "topics() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.topics"]], "trader_id (messagebus attribute)": [[29, "nautilus_trader.msgbus.bus.MessageBus.trader_id"]], "unsubscribe() (messagebus method)": [[29, "nautilus_trader.msgbus.bus.MessageBus.unsubscribe"]], "httpclient (class in nautilus_trader.network.http)": [[30, "nautilus_trader.network.http.HttpClient"]], "socketclient (class in nautilus_trader.network.socket)": [[30, "nautilus_trader.network.socket.SocketClient"]], "websocketclient (class in nautilus_trader.network.websocket)": [[30, "nautilus_trader.network.websocket.WebSocketClient"]], "avg_latency() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.avg_latency"]], "close() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.close"]], "connect() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.connect"]], "connect() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.connect"]], "connect() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.connect"]], "connected (httpclient attribute)": [[30, "nautilus_trader.network.http.HttpClient.connected"]], "connection_retry_count (websocketclient attribute)": [[30, "nautilus_trader.network.websocket.WebSocketClient.connection_retry_count"]], "delete() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.delete"]], "disconnect() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.disconnect"]], "disconnect() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.disconnect"]], "disconnect() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.disconnect"]], "get() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.get"]], "host (socketclient attribute)": [[30, "nautilus_trader.network.socket.SocketClient.host"]], "is_connected (socketclient attribute)": [[30, "nautilus_trader.network.socket.SocketClient.is_connected"]], "is_connected (websocketclient attribute)": [[30, "nautilus_trader.network.websocket.WebSocketClient.is_connected"]], "is_running (websocketclient attribute)": [[30, "nautilus_trader.network.websocket.WebSocketClient.is_running"]], "is_stopping (websocketclient attribute)": [[30, "nautilus_trader.network.websocket.WebSocketClient.is_stopping"]], "max_latency() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.max_latency"]], "max_retry_connection (websocketclient attribute)": [[30, "nautilus_trader.network.websocket.WebSocketClient.max_retry_connection"]], "min_latency() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.min_latency"]], "nautilus_trader.network": [[30, "module-nautilus_trader.network"]], "nautilus_trader.network.http": [[30, "module-nautilus_trader.network.http"]], "nautilus_trader.network.socket": [[30, "module-nautilus_trader.network.socket"]], "nautilus_trader.network.websocket": [[30, "module-nautilus_trader.network.websocket"]], "port (socketclient attribute)": [[30, "nautilus_trader.network.socket.SocketClient.port"]], "post() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.post"]], "post_connection() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.post_connection"]], "post_connection() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.post_connection"]], "post_disconnection() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.post_disconnection"]], "post_reconnection() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.post_reconnection"]], "receive() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.receive"]], "reconnect() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.reconnect"]], "reconnect() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.reconnect"]], "request() (httpclient method)": [[30, "nautilus_trader.network.http.HttpClient.request"]], "send() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.send"]], "send() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.send"]], "send_json() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.send_json"]], "session (httpclient attribute)": [[30, "nautilus_trader.network.http.HttpClient.session"]], "ssl (socketclient attribute)": [[30, "nautilus_trader.network.socket.SocketClient.ssl"]], "start() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.start"]], "start() (websocketclient method)": [[30, "nautilus_trader.network.websocket.WebSocketClient.start"]], "stop() (socketclient method)": [[30, "nautilus_trader.network.socket.SocketClient.stop"]], "unknown_message_count (websocketclient attribute)": [[30, "nautilus_trader.network.websocket.WebSocketClient.unknown_message_count"]], "basedatacatalog (class in nautilus_trader.persistence.catalog)": [[31, "nautilus_trader.persistence.catalog.BaseDataCatalog"]], "bytereader (class in nautilus_trader.persistence.external.readers)": [[31, "nautilus_trader.persistence.external.readers.ByteReader"]], "csvreader (class in nautilus_trader.persistence.external.readers)": [[31, "nautilus_trader.persistence.external.readers.CSVReader"]], "filemeta (class in nautilus_trader.persistence.batching)": [[31, "nautilus_trader.persistence.batching.FileMeta"]], "linepreprocessor (class in nautilus_trader.persistence.external.readers)": [[31, "nautilus_trader.persistence.external.readers.LinePreprocessor"]], "parquetdatacatalog (class in nautilus_trader.persistence.catalog)": [[31, "nautilus_trader.persistence.catalog.ParquetDataCatalog"]], "parquetreader (class in nautilus_trader.persistence.external.readers)": [[31, "nautilus_trader.persistence.external.readers.ParquetReader"]], "rawfile (class in nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.RawFile"]], "reader (class in nautilus_trader.persistence.external.readers)": [[31, "nautilus_trader.persistence.external.readers.Reader"]], "streamingfeatherwriter (class in nautilus_trader.persistence.streaming)": [[31, "nautilus_trader.persistence.streaming.StreamingFeatherWriter"]], "textreader (class in nautilus_trader.persistence.external.readers)": [[31, "nautilus_trader.persistence.external.readers.TextReader"]], "check_flush() (streamingfeatherwriter method)": [[31, "nautilus_trader.persistence.streaming.StreamingFeatherWriter.check_flush"]], "client_id (filemeta attribute)": [[31, "nautilus_trader.persistence.batching.FileMeta.client_id"]], "close() (streamingfeatherwriter method)": [[31, "nautilus_trader.persistence.streaming.StreamingFeatherWriter.close"]], "count() (filemeta method)": [[31, "nautilus_trader.persistence.batching.FileMeta.count"]], "datatype (filemeta attribute)": [[31, "nautilus_trader.persistence.batching.FileMeta.datatype"]], "determine_partition_cols() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.determine_partition_cols"]], "dicts_to_dataframes() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.dicts_to_dataframes"]], "end (filemeta attribute)": [[31, "nautilus_trader.persistence.batching.FileMeta.end"]], "extract_generic_data_client_ids() (in module nautilus_trader.persistence.batching)": [[31, "nautilus_trader.persistence.batching.extract_generic_data_client_ids"]], "filename (filemeta attribute)": [[31, "nautilus_trader.persistence.batching.FileMeta.filename"]], "flush() (streamingfeatherwriter method)": [[31, "nautilus_trader.persistence.streaming.StreamingFeatherWriter.flush"]], "generate_signal_class() (in module nautilus_trader.persistence.streaming)": [[31, "nautilus_trader.persistence.streaming.generate_signal_class"]], "index() (filemeta method)": [[31, "nautilus_trader.persistence.batching.FileMeta.index"]], "instrument_id (filemeta attribute)": [[31, "nautilus_trader.persistence.batching.FileMeta.instrument_id"]], "merge_existing_data() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.merge_existing_data"]], "nautilus_trader.persistence": [[31, "module-nautilus_trader.persistence"]], "nautilus_trader.persistence.batching": [[31, "module-nautilus_trader.persistence.batching"]], "nautilus_trader.persistence.catalog": [[31, "module-nautilus_trader.persistence.catalog"]], "nautilus_trader.persistence.external.core": [[31, "module-nautilus_trader.persistence.external.core"]], "nautilus_trader.persistence.external.readers": [[31, "module-nautilus_trader.persistence.external.readers"]], "nautilus_trader.persistence.streaming": [[31, "module-nautilus_trader.persistence.streaming"]], "read_progress() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.read_progress"]], "split_and_serialize() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.split_and_serialize"]], "start (filemeta attribute)": [[31, "nautilus_trader.persistence.batching.FileMeta.start"]], "write() (streamingfeatherwriter method)": [[31, "nautilus_trader.persistence.streaming.StreamingFeatherWriter.write"]], "write_parquet() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.write_parquet"]], "write_tables() (in module nautilus_trader.persistence.external.core)": [[31, "nautilus_trader.persistence.external.core.write_tables"]], "portfolio (class in nautilus_trader.portfolio.portfolio)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio"]], "portfoliofacade (class in nautilus_trader.portfolio.base)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade"]], "account() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.account"]], "account() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.account"]], "analyzer (portfolio attribute)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.analyzer"]], "analyzer (portfoliofacade attribute)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.analyzer"]], "balances_locked() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.balances_locked"]], "balances_locked() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.balances_locked"]], "initialize_orders() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.initialize_orders"]], "initialize_positions() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.initialize_positions"]], "initialized (portfolio attribute)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.initialized"]], "initialized (portfoliofacade attribute)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.initialized"]], "is_completely_flat() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.is_completely_flat"]], "is_completely_flat() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.is_completely_flat"]], "is_flat() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.is_flat"]], "is_flat() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.is_flat"]], "is_net_long() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.is_net_long"]], "is_net_long() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.is_net_long"]], "is_net_short() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.is_net_short"]], "is_net_short() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.is_net_short"]], "margins_init() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.margins_init"]], "margins_init() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.margins_init"]], "margins_maint() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.margins_maint"]], "margins_maint() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.margins_maint"]], "nautilus_trader.portfolio": [[32, "module-nautilus_trader.portfolio"]], "nautilus_trader.portfolio.base": [[32, "module-nautilus_trader.portfolio.base"]], "nautilus_trader.portfolio.portfolio": [[32, "module-nautilus_trader.portfolio.portfolio"]], "net_exposure() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.net_exposure"]], "net_exposure() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.net_exposure"]], "net_exposures() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.net_exposures"]], "net_exposures() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.net_exposures"]], "net_position() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.net_position"]], "net_position() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.net_position"]], "reset() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.reset"]], "unrealized_pnl() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.unrealized_pnl"]], "unrealized_pnl() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.unrealized_pnl"]], "unrealized_pnls() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.unrealized_pnls"]], "unrealized_pnls() (portfoliofacade method)": [[32, "nautilus_trader.portfolio.base.PortfolioFacade.unrealized_pnls"]], "update_account() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.update_account"]], "update_order() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.update_order"]], "update_position() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.update_position"]], "update_quote_tick() (portfolio method)": [[32, "nautilus_trader.portfolio.portfolio.Portfolio.update_quote_tick"]], "fixedrisksizer (class in nautilus_trader.risk.sizing)": [[33, "nautilus_trader.risk.sizing.FixedRiskSizer"]], "positionsizer (class in nautilus_trader.risk.sizing)": [[33, "nautilus_trader.risk.sizing.PositionSizer"]], "riskengine (class in nautilus_trader.risk.engine)": [[33, "nautilus_trader.risk.engine.RiskEngine"]], "calculate() (fixedrisksizer method)": [[33, "nautilus_trader.risk.sizing.FixedRiskSizer.calculate"]], "calculate() (positionsizer method)": [[33, "nautilus_trader.risk.sizing.PositionSizer.calculate"]], "command_count (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.command_count"]], "debug (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.debug"]], "degrade() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.degrade"]], "deny_modify_pending_update (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.deny_modify_pending_update"]], "dispose() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.dispose"]], "event_count (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.event_count"]], "execute() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.execute"]], "fault() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.fault"]], "fully_qualified_name() (riskengine class method)": [[33, "nautilus_trader.risk.engine.RiskEngine.fully_qualified_name"]], "id (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.id"]], "instrument (fixedrisksizer attribute)": [[33, "nautilus_trader.risk.sizing.FixedRiskSizer.instrument"]], "instrument (positionsizer attribute)": [[33, "nautilus_trader.risk.sizing.PositionSizer.instrument"]], "is_bypassed (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_bypassed"]], "is_degraded (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_degraded"]], "is_disposed (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_disposed"]], "is_faulted (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_faulted"]], "is_initialized (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_initialized"]], "is_running (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_running"]], "is_stopped (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.is_stopped"]], "max_notional_per_order() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.max_notional_per_order"]], "max_notionals_per_order() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.max_notionals_per_order"]], "max_order_modify_rate() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.max_order_modify_rate"]], "max_order_submit_rate() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.max_order_submit_rate"]], "nautilus_trader.risk": [[33, "module-nautilus_trader.risk"]], "nautilus_trader.risk.engine": [[33, "module-nautilus_trader.risk.engine"]], "nautilus_trader.risk.sizing": [[33, "module-nautilus_trader.risk.sizing"]], "process() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.process"]], "reset() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.reset"]], "resume() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.resume"]], "set_max_notional_per_order() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.set_max_notional_per_order"]], "set_trading_state() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.set_trading_state"]], "start() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.start"]], "state (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.state"]], "stop() (riskengine method)": [[33, "nautilus_trader.risk.engine.RiskEngine.stop"]], "trader_id (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.trader_id"]], "trading_state (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.trading_state"]], "type (riskengine attribute)": [[33, "nautilus_trader.risk.engine.RiskEngine.type"]], "update_instrument() (fixedrisksizer method)": [[33, "nautilus_trader.risk.sizing.FixedRiskSizer.update_instrument"]], "update_instrument() (positionsizer method)": [[33, "nautilus_trader.risk.sizing.PositionSizer.update_instrument"]], "msgpackserializer (class in nautilus_trader.serialization.msgpack.serializer)": [[34, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer"]], "parquetserializer (class in nautilus_trader.serialization.arrow.serializer)": [[34, "nautilus_trader.serialization.arrow.serializer.ParquetSerializer"]], "serializer (class in nautilus_trader.serialization.base)": [[34, "nautilus_trader.serialization.base.Serializer"]], "deserialize() (msgpackserializer method)": [[34, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.deserialize"]], "deserialize() (parquetserializer static method)": [[34, "nautilus_trader.serialization.arrow.serializer.ParquetSerializer.deserialize"]], "deserialize() (serializer method)": [[34, "nautilus_trader.serialization.base.Serializer.deserialize"]], "get_cls_table() (in module nautilus_trader.serialization.arrow.serializer)": [[34, "nautilus_trader.serialization.arrow.serializer.get_cls_table"]], "get_partition_keys() (in module nautilus_trader.serialization.arrow.serializer)": [[34, "nautilus_trader.serialization.arrow.serializer.get_partition_keys"]], "get_schema() (in module nautilus_trader.serialization.arrow.serializer)": [[34, "nautilus_trader.serialization.arrow.serializer.get_schema"]], "list_schemas() (in module nautilus_trader.serialization.arrow.serializer)": [[34, "nautilus_trader.serialization.arrow.serializer.list_schemas"]], "nautilus_trader.serialization": [[34, "module-nautilus_trader.serialization"]], "nautilus_trader.serialization.arrow.serializer": [[34, "module-nautilus_trader.serialization.arrow.serializer"]], "nautilus_trader.serialization.base": [[34, "module-nautilus_trader.serialization.base"]], "nautilus_trader.serialization.msgpack.serializer": [[34, "module-nautilus_trader.serialization.msgpack.serializer"]], "register_parquet() (in module nautilus_trader.serialization.arrow.serializer)": [[34, "nautilus_trader.serialization.arrow.serializer.register_parquet"]], "register_serializable_object() (in module nautilus_trader.serialization.base)": [[34, "nautilus_trader.serialization.base.register_serializable_object"]], "serialize() (msgpackserializer method)": [[34, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.serialize"]], "serialize() (parquetserializer static method)": [[34, "nautilus_trader.serialization.arrow.serializer.ParquetSerializer.serialize"]], "serialize() (serializer method)": [[34, "nautilus_trader.serialization.base.Serializer.serialize"]], "timestamps_as_str (msgpackserializer attribute)": [[34, "nautilus_trader.serialization.msgpack.serializer.MsgPackSerializer.timestamps_as_str"]], "nautiluskernel (class in nautilus_trader.system.kernel)": [[35, "nautilus_trader.system.kernel.NautilusKernel"]], "add_log_sink() (nautiluskernel method)": [[35, "nautilus_trader.system.kernel.NautilusKernel.add_log_sink"]], "cache (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.cache"]], "clock (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.clock"]], "data_engine (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.data_engine"]], "dispose() (nautiluskernel method)": [[35, "nautilus_trader.system.kernel.NautilusKernel.dispose"]], "emulator (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.emulator"]], "environment (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.environment"]], "exec_engine (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.exec_engine"]], "executor (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.executor"]], "instance_id (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.instance_id"]], "log (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.log"]], "logger (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.logger"]], "loop (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.loop"]], "loop_sig_callback (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.loop_sig_callback"]], "machine_id (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.machine_id"]], "msgbus (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.msgbus"]], "name (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.name"]], "nautilus_trader.system": [[35, "module-nautilus_trader.system"]], "nautilus_trader.system.kernel": [[35, "module-nautilus_trader.system.kernel"]], "portfolio (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.portfolio"]], "risk_engine (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.risk_engine"]], "trader (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.trader"]], "trader_id (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.trader_id"]], "ts_created (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.ts_created"]], "writer (nautiluskernel property)": [[35, "nautilus_trader.system.kernel.NautilusKernel.writer"]], "economicnewseventfilter (class in nautilus_trader.trading.filters)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter"]], "forexsession (class in nautilus_trader.trading.filters)": [[36, "nautilus_trader.trading.filters.ForexSession"]], "forexsessionfilter (class in nautilus_trader.trading.filters)": [[36, "nautilus_trader.trading.filters.ForexSessionFilter"]], "newsevent (class in nautilus_trader.trading.filters)": [[36, "nautilus_trader.trading.filters.NewsEvent"]], "newsimpact (class in nautilus_trader.trading.filters)": [[36, "nautilus_trader.trading.filters.NewsImpact"]], "strategy (class in nautilus_trader.trading.strategy)": [[36, "nautilus_trader.trading.strategy.Strategy"]], "trader (class in nautilus_trader.trading.trader)": [[36, "nautilus_trader.trading.trader.Trader"]], "actor_ids() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.actor_ids"]], "actor_states() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.actor_states"]], "actors() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.actors"]], "add_actor() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.add_actor"]], "add_actors() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.add_actors"]], "add_strategies() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.add_strategies"]], "add_strategy() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.add_strategy"]], "cache (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.cache"]], "cancel_all_orders() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.cancel_all_orders"]], "cancel_order() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.cancel_order"]], "check_residuals() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.check_residuals"]], "clear_actors() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.clear_actors"]], "clear_strategies() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.clear_strategies"]], "clock (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.clock"]], "close_all_positions() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.close_all_positions"]], "close_position() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.close_position"]], "currencies (economicnewseventfilter attribute)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter.currencies"]], "currency (newsevent attribute)": [[36, "nautilus_trader.trading.filters.NewsEvent.currency"]], "degrade() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.degrade"]], "degrade() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.degrade"]], "deregister_warning_event() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.deregister_warning_event"]], "dispose() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.dispose"]], "dispose() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.dispose"]], "fault() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.fault"]], "fault() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.fault"]], "fully_qualified_name() (newsevent class method)": [[36, "nautilus_trader.trading.filters.NewsEvent.fully_qualified_name"]], "fully_qualified_name() (strategy class method)": [[36, "nautilus_trader.trading.strategy.Strategy.fully_qualified_name"]], "fully_qualified_name() (trader class method)": [[36, "nautilus_trader.trading.trader.Trader.fully_qualified_name"]], "generate_account_report() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.generate_account_report"]], "generate_order_fills_report() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.generate_order_fills_report"]], "generate_orders_report() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.generate_orders_report"]], "generate_positions_report() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.generate_positions_report"]], "handle_bar() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_bar"]], "handle_bars() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_bars"]], "handle_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_data"]], "handle_event() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_event"]], "handle_historical_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_historical_data"]], "handle_instrument() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_instrument"]], "handle_instrument_close_price() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_instrument_close_price"]], "handle_instrument_status_update() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_instrument_status_update"]], "handle_instruments() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_instruments"]], "handle_order_book() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_order_book"]], "handle_order_book_delta() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_order_book_delta"]], "handle_quote_tick() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_quote_tick"]], "handle_quote_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_quote_ticks"]], "handle_ticker() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_ticker"]], "handle_trade_tick() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_trade_tick"]], "handle_trade_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_trade_ticks"]], "handle_venue_status_update() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.handle_venue_status_update"]], "id (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.id"]], "id (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.id"]], "impact (newsevent attribute)": [[36, "nautilus_trader.trading.filters.NewsEvent.impact"]], "impacts (economicnewseventfilter attribute)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter.impacts"]], "indicators_initialized() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.indicators_initialized"]], "is_degraded (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.is_degraded"]], "is_degraded (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.is_degraded"]], "is_disposed (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.is_disposed"]], "is_disposed (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.is_disposed"]], "is_faulted (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.is_faulted"]], "is_faulted (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.is_faulted"]], "is_initialized (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.is_initialized"]], "is_initialized (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.is_initialized"]], "is_running (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.is_running"]], "is_running (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.is_running"]], "is_stopped (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.is_stopped"]], "is_stopped (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.is_stopped"]], "load() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.load"]], "load() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.load"]], "local_from_utc() (forexsessionfilter method)": [[36, "nautilus_trader.trading.filters.ForexSessionFilter.local_from_utc"]], "log (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.log"]], "modify_order() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.modify_order"]], "msgbus (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.msgbus"]], "name (newsevent attribute)": [[36, "nautilus_trader.trading.filters.NewsEvent.name"]], "nautilus_trader.trading": [[36, "module-nautilus_trader.trading"]], "nautilus_trader.trading.filters": [[36, "module-nautilus_trader.trading.filters"]], "nautilus_trader.trading.strategy": [[36, "module-nautilus_trader.trading.strategy"]], "nautilus_trader.trading.trader": [[36, "module-nautilus_trader.trading.trader"]], "next_end() (forexsessionfilter method)": [[36, "nautilus_trader.trading.filters.ForexSessionFilter.next_end"]], "next_event() (economicnewseventfilter method)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter.next_event"]], "next_start() (forexsessionfilter method)": [[36, "nautilus_trader.trading.filters.ForexSessionFilter.next_start"]], "oms_type (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.oms_type"]], "on_bar() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_bar"]], "on_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_data"]], "on_degrade() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_degrade"]], "on_dispose() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_dispose"]], "on_event() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_event"]], "on_fault() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_fault"]], "on_historical_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_historical_data"]], "on_instrument() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_instrument"]], "on_instrument_close_price() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_instrument_close_price"]], "on_instrument_status_update() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_instrument_status_update"]], "on_load() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_load"]], "on_order_book() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_order_book"]], "on_order_book_delta() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_order_book_delta"]], "on_quote_tick() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_quote_tick"]], "on_reset() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_reset"]], "on_resume() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_resume"]], "on_save() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_save"]], "on_start() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_start"]], "on_stop() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_stop"]], "on_ticker() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_ticker"]], "on_trade_tick() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_trade_tick"]], "on_venue_status_update() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.on_venue_status_update"]], "order_factory (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.order_factory"]], "order_id_tag (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.order_id_tag"]], "portfolio (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.portfolio"]], "prev_end() (forexsessionfilter method)": [[36, "nautilus_trader.trading.filters.ForexSessionFilter.prev_end"]], "prev_event() (economicnewseventfilter method)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter.prev_event"]], "prev_start() (forexsessionfilter method)": [[36, "nautilus_trader.trading.filters.ForexSessionFilter.prev_start"]], "publish_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.publish_data"]], "publish_signal() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.publish_signal"]], "query_order() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.query_order"]], "register() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.register"]], "register_base() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.register_base"]], "register_indicator_for_bars() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.register_indicator_for_bars"]], "register_indicator_for_quote_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.register_indicator_for_quote_ticks"]], "register_indicator_for_trade_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.register_indicator_for_trade_ticks"]], "register_warning_event() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.register_warning_event"]], "registered_indicators (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.registered_indicators"]], "request_bars() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.request_bars"]], "request_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.request_data"]], "request_instrument() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.request_instrument"]], "request_instruments() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.request_instruments"]], "request_quote_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.request_quote_ticks"]], "request_trade_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.request_trade_ticks"]], "reset() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.reset"]], "reset() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.reset"]], "resume() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.resume"]], "resume() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.resume"]], "save() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.save"]], "save() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.save"]], "start() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.start"]], "start() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.start"]], "state (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.state"]], "state (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.state"]], "stop() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.stop"]], "stop() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.stop"]], "strategies() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.strategies"]], "strategy_ids() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.strategy_ids"]], "strategy_states() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.strategy_states"]], "submit_order() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.submit_order"]], "submit_order_list() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.submit_order_list"]], "subscribe() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.subscribe"]], "subscribe_bars() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_bars"]], "subscribe_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_data"]], "subscribe_instrument() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_instrument"]], "subscribe_instrument_close_prices() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_instrument_close_prices"]], "subscribe_instrument_status_updates() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_instrument_status_updates"]], "subscribe_instruments() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_instruments"]], "subscribe_order_book_deltas() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_order_book_deltas"]], "subscribe_order_book_snapshots() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_order_book_snapshots"]], "subscribe_quote_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_quote_ticks"]], "subscribe_ticker() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_ticker"]], "subscribe_trade_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_trade_ticks"]], "subscribe_venue_status_updates() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.subscribe_venue_status_updates"]], "to_importable_config() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.to_importable_config"]], "trader_id (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.trader_id"]], "trader_id (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.trader_id"]], "ts_event (newsevent attribute)": [[36, "nautilus_trader.trading.filters.NewsEvent.ts_event"]], "ts_init (newsevent attribute)": [[36, "nautilus_trader.trading.filters.NewsEvent.ts_init"]], "type (strategy attribute)": [[36, "nautilus_trader.trading.strategy.Strategy.type"]], "type (trader attribute)": [[36, "nautilus_trader.trading.trader.Trader.type"]], "unfiltered_data_end (economicnewseventfilter attribute)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter.unfiltered_data_end"]], "unfiltered_data_start (economicnewseventfilter attribute)": [[36, "nautilus_trader.trading.filters.EconomicNewsEventFilter.unfiltered_data_start"]], "unsubscribe() (trader method)": [[36, "nautilus_trader.trading.trader.Trader.unsubscribe"]], "unsubscribe_bars() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_bars"]], "unsubscribe_data() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_data"]], "unsubscribe_instrument() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_instrument"]], "unsubscribe_instruments() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_instruments"]], "unsubscribe_order_book_deltas() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_order_book_deltas"]], "unsubscribe_order_book_snapshots() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_order_book_snapshots"]], "unsubscribe_quote_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_quote_ticks"]], "unsubscribe_ticker() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_ticker"]], "unsubscribe_trade_ticks() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_trade_ticks"]], "unsubscribe_venue_status_updates() (strategy method)": [[36, "nautilus_trader.trading.strategy.Strategy.unsubscribe_venue_status_updates"]]}})